(()=>{var t={9:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={height:{min:50,max:200,default:120},baseWidth:{min:20,max:200,default:120},innerScale:{min:.1,max:.9,default:.4}};generateShape(){const t=1*this.height,e=1*this.baseWidth,n=this.innerScale,i=e*(n+.1);return`<path \n            d="\n            M 0 ${0-t/2}\n            L ${0-e/2} ${0+t/2}\n            L ${0+e/2} ${0+t/2}\n            Z\n            M 0 ${0-t/2+.9*(t-t*n)}\n            L ${0-i/2} ${0+t/2}\n            L ${0+i/2} ${0+t/2}\n            Z\n        "\n            fill="white"\n            fill-rule="evenodd"\n            stroke="white"\n            stroke-width="2"\n        />`}}const a=s},66:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:50,max:100,default:100},layers:{min:3,max:30,default:12},spacing:{min:.1,max:2,default:1},rotationX:{min:1,max:90,default:30},strokeWidth:{min:.5,max:5,default:1.5}};generateShape(){const t=[],{radius:e,layers:n,spacing:i,rotationX:s,strokeWidth:a}=this,r=s*Math.PI/180,o=2*e/(n+1);for(let i=0;i<n;i++){const n=o*(i+1)-e,s=Math.sqrt(e*e-n*n),h=n*Math.cos(r);t.push(`<ellipse \n          cx="0" \n          cy="${h}" \n          rx="${s}" \n          ry="${s*Math.sin(r)}" \n          stroke="white" \n          stroke-width="${a}" \n          fill="none" \n        />`)}return t.join("")}}const a=s},84:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={bowlWidth:{min:50,max:200,default:120},bowlHeight:{min:50,max:200,default:100},stemWidth:{min:20,max:100,default:40},baseWidth:{min:40,max:200,default:80},curvature:{min:0,max:1,default:.5}};generateShape(){const t=1*this.bowlWidth,e=1*this.bowlHeight,n=1*this.stemWidth,i=1*this.baseWidth,s=this.curvature,a=0-e/2,r=0+e/2,o=.4*e,h=0-t/2,l=0+t/2,d=0-n/2,c=r-o,u=0+n/2,m=r-o;return`<path \n            d="${[`M ${h} ${a}`,`C ${h} ${a+e*s} ${d} ${c-e*s} ${d} ${c}`,`L ${0-i/2} ${r}`,`L ${0+i/2} ${r}`,`L ${u} ${m}`,`C ${u} ${m-e*s} ${l} ${a+e*s} ${l} ${a}`,"Z"].join(" ")}"\n            fill="white"\n        />`}}const a=s},96:t=>{"use strict";t.exports="data:image/svg+xml;charset=UTF-8,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 24 24%27 fill=%27none%27 stroke=%27%23999%27 stroke-width=%272%27 stroke-linecap=%27round%27 stroke-linejoin=%27round%27%3e%3cpolyline points=%276 9 12 15 18 9%27%3e%3c/polyline%3e%3c/svg%3e"},107:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:200,default:140},stripeCount:{min:2,max:20,default:5},spacing:{min:1,max:50,default:20}};generateShape(){this.stripeCount=Math.round(this.stripeCount);const t=this.size,e=Math.sqrt(2)*t*1.2,n=e/(2*this.stripeCount),i=-(n*this.stripeCount+this.spacing*(this.stripeCount-1))/2,s=`square-clip-${Math.random().toString(36).substr(2,9)}`,a=t/2,r=`<defs>\n            <clipPath id="${s}">\n                <rect \n                    x="${-a}" \n                    y="${-a}" \n                    width="${t}" \n                    height="${t}"\n                />\n            </clipPath>\n        </defs>`,o=[];for(let t=0;t<this.stripeCount;t++){const s=i+t*(n+this.spacing);o.push(`<rect \n                x="${s}"\n                y="${-e/2}"\n                width="${n}"\n                height="${e}"\n                fill="white"\n                transform="rotate(45, 0, 0)"\n            />`)}return`\n            ${r}\n            <g clip-path="url(#${s})">\n                ${o.join("\n                ")}\n            </g>`}}const a=s},119:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={rayCount:{min:3,max:12,default:4},height:{min:20,max:200,default:118},baseWidth:{min:20,max:200,default:133},tilt:{min:0,max:45,default:10},thickness:{min:1,max:100,default:30}};generateShape(){const t=[],e=-this.height/2,n=Math.max(2,.2*this.thickness),i=n*(this.rayCount-1),s=this.baseWidth-i,a=s/this.rayCount,r=-(s+i)/2;for(let i=0;i<this.rayCount;i++){const s=r+i*(a+n),o=s+a,h=this.tilt*Math.PI/180,l=(s+o)/2,d=s+Math.sin(h)*l,c=o+Math.sin(h)*l;t.push(`<path \n                d="M 0 ${e} \n                   L ${d} ${-e} \n                   L ${c} ${-e} Z"\n                fill="white"\n            />`)}return t.join("")}}const a=s},217:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={baseSize:{min:50,max:200,default:120},flameHeight:{min:10,max:80,default:30},flameCount:{min:3,max:12,default:6},flameWidth:{min:.1,max:.9,default:.4},turbulence:{min:0,max:1,default:.3}};generateShape(){const t=200/300,e=this.baseSize*t,n=this.flameHeight*t,i=this.flameCount,s=this.flameWidth,a=this.turbulence,r=[{x:0,y:0-e},{x:0+e,y:0},{x:0,y:0+e},{x:0-e,y:0}];function o(t,e,i){const r=[],o=(Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),(e.x-t.x)/i),h=(e.y-t.y)/i;for(let l=0;l<=i;l++){const d=l/i,c=t.x+o*l,u=t.y+h*l;if(l>0&&l<i){const i=Math.atan2(e.y-t.y,e.x-t.x)+Math.PI/2,o=n*(1+Math.sin(d*Math.PI)*a),h=c+Math.cos(i)*o,l=u+Math.sin(i)*o,m=c+Math.cos(i)*o*s,p=u+Math.sin(i)*o*s;r.push({x:m,y:p}),r.push({x:h,y:l}),r.push({x:c,y:u})}else r.push({x:c,y:u})}return r}let h=`M ${r[0].x} ${r[0].y}`;for(let t=0;t<4;t++){const e=o(r[t],r[(t+1)%4],i);for(let t=0;t<e.length;t++)h+=t%3==0?` L ${e[t].x} ${e[t].y}`:` Q ${e[t-1].x} ${e[t-1].y} ${e[t].x} ${e[t].y}`}return h+=" Z",`<path d="${h}" fill="white"/>`}}const a=s},233:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:50,max:200,default:150},height:{min:50,max:200,default:150},archWidth:{min:30,max:120,default:60},archHeight:{min:30,max:150,default:90},cornerRadius:{min:0,max:20,default:0},archTopRadius:{min:0,max:60,default:30}};generateShape(){const t=Math.max(50,this.width),e=Math.max(50,this.height),n=Math.min(Math.max(20,this.archWidth),.8*t),i=Math.min(Math.max(20,this.archHeight),.8*e),s=t/2,a=n/2,r=-s,o=s,h=-e/2,l=e/2,d=-a,c=a,u=Math.min(s-a,.3*t),m=Math.min(.8*u,.2*e),p=Math.max(0,Math.min(this.cornerRadius,m,.1*t,.1*e)),f=Math.min(.4*n,.4*i),x=Math.max(0,Math.min(this.archTopRadius,f));let g="";return g=p>0?this.createRoundedRectPath(r,o,h,l,p):this.createRectPath(r,o,h,l),g+=" "+this.createArchPath(d,c,l,i,x),`<path d="${g}" fill="white" fill-rule="evenodd" />`}createRoundedRectPath(t,e,n,i,s){return`\n            M ${t+s},${n}\n            H ${e-s}\n            Q ${e},${n} ${e},${n+s}\n            V ${i-s}\n            Q ${e},${i} ${e-s},${i}\n            H ${t+s}\n            Q ${t},${i} ${t},${i-s}\n            V ${n+s}\n            Q ${t},${n} ${t+s},${n}\n        `}createRectPath(t,e,n,i){return`\n            M ${t},${n}\n            H ${e}\n            V ${i}\n            H ${t}\n            Z\n        `}createArchPath(t,e,n,i,s){const a=n-i;return s<=0?`\n                M ${t},${n}\n                V ${a}\n                H ${e}\n                V ${n}\n                Z\n            `:`\n                M ${t},${n}\n                V ${a+s}\n                Q ${t},${a} ${t+s},${a}\n                H ${e-s}\n                Q ${e},${a} ${e},${a+s}\n                V ${n}\n                Z\n            `}}const a=s},308:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={points:{min:4,max:16,default:8},innerDepth:{min:.1,max:.9,default:.3},sharpness:{min:.1,max:2,default:.7},rotation:{min:-180,max:180,default:22.5}};generateShape(){const t=100,e=this.rotation*Math.PI/180,n=Math.floor(this.points),i=[];for(let s=0;s<=2*n;s++){const a=s*Math.PI/n+e,r=s%2==0?t:t*(1-this.innerDepth),o={x:0+Math.cos(a)*r,y:0+Math.sin(a)*r};if(0===s)i.push(`M ${o.x} ${o.y}`);else{const h=(s-1)*Math.PI/n+e,l=(s-1)%2==0?t:t*(1-this.innerDepth),d={x:0+Math.cos(h)*l,y:0+Math.sin(h)*l},c=(h+a)/2,u=this.sharpness*r*.5,m={x:d.x+Math.cos(c)*u,y:d.y+Math.sin(c)*u},p={x:o.x-Math.cos(c)*u,y:o.y-Math.sin(c)*u};i.push(`C ${m.x} ${m.y}, ${p.x} ${p.y}, ${o.x} ${o.y}`)}}const s=0+Math.cos(e)*t,a=0+Math.sin(e)*t,r=2*n*Math.PI/n+e,o=(r+(e+2*Math.PI))/2,h=this.sharpness*t*.5,l=0+Math.cos(r)*(t*(1-this.innerDepth)),d=0+Math.sin(r)*(t*(1-this.innerDepth)),c=l+Math.cos(o)*h,u=d+Math.sin(o)*h,m=s-Math.cos(o)*h,p=a-Math.sin(o)*h;return i.push(`C ${c} ${u}, ${m} ${p}, ${s} ${a}`),`<path\n            d="${i.join(" ")}"\n            fill="white"\n        />`}}const a=s},312:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:60,max:200,default:120},height:{min:40,max:300,default:120},curveRadius:{min:10,max:60,default:40},gap:{min:0,max:50,default:10}};round(t){return Math.round(1e3*t)/1e3}generateShape(){const t=this.round(this.size/2),e=this.round(this.height/2),n=this.round(this.curveRadius),i=this.round(.5522847498307936*n),s=this.round(this.gap/2),a={start:[s,-e+n],topCurve:[[s,-e+i],[s+i,-e],[s+n,-e]],topEdge:[t,-e],rightEdge:[t,e-n],bottomCurve:[[t,e-i],[t-i,e],[t-n,e]],bottomEdge:[s,e]},r=[`M ${a.start[0]} ${a.start[1]}`,`C ${a.topCurve.map((t=>`${t[0]} ${t[1]}`)).join(" ")}`,`H ${a.topEdge[0]}`,`V ${a.rightEdge[1]}`,`C ${a.bottomCurve.map((t=>`${t[0]} ${t[1]}`)).join(" ")}`,`H ${a.bottomEdge[0]}`,`V ${a.start[1]}`,"Z"].join(" "),o={start:[-s,-e+n],topCurve:[[-s,-e+i],[-s-i,-e],[-s-n,-e]],topEdge:[-t,-e],leftEdge:[-t,e-n],bottomCurve:[[-t,e-i],[-t+i,e],[-t+n,e]],bottomEdge:[-s,e]};return`\n            <path d="${[`M ${o.start[0]} ${o.start[1]}`,`C ${o.topCurve.map((t=>`${t[0]} ${t[1]}`)).join(" ")}`,`H ${o.topEdge[0]}`,`V ${o.leftEdge[1]}`,`C ${o.bottomCurve.map((t=>`${t[0]} ${t[1]}`)).join(" ")}`,`H ${o.bottomEdge[0]}`,`V ${o.start[1]}`,"Z"].join(" ")}" fill="white" />\n            <path d="${r}" fill="white" />\n        `}}const a=s},365:(t,e,n)=>{"use strict";n.d(e,{A:()=>u});var i=n(1601),s=n.n(i),a=n(6314),r=n.n(a),o=n(4417),h=n.n(o),l=new URL(n(96),n.b),d=r()(s()),c=h()(l);d.push([t.id,`\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  outline: none;\n}\n\n/* Alternatively, target specific elements */\nbutton:focus, a:focus, input:focus, select:focus, textarea:focus {\n  outline: none;\n}\n\nhtml, body {\n  margin: 0;\n  padding: 0;\n  background: #000;\n  color: #fff;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  overflow-x: hidden;\n  height: 100%;\n}\n\n/* Header */\n.header {\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  background: #000;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n  gap: 8px;\n  height: 64px;\n}\n\n.search-input {\n  font-family: 'Menlo', 'Monaco', 'Courier New', monospace;\n  margin-left: 10px;\n  background: transparent;\n  border: 1px solid #2d2d2d;\n  color: #555;\n  padding: 8px 16px;\n  font-size: 12px;\n  border-radius: 35px;\n  outline: none;\n  width: 100%;\n}\n\n.search-input:focus {\n  color: #888;\n  border-color: #333;\n}\n\n.zoom-controls {\n  display: flex;\n  gap: 4px;\n}\n\n.zoom-btn {\n  background: transparent;\n  border: none;\n  color: #666666;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  cursor: pointer;\n  user-select: none;\n  transition: color 0.2s;\n}\n\n.zoom-btn:hover {\n  color: #fff;\n}\n\n.category-pills-container {\n  display: flex !important;\n  flex-wrap: nowrap !important; /* Prevent wrapping to new lines */\n  overflow-x: auto !important; /* Enable horizontal scrolling */\n  padding: 16px !important;\n  gap: 8px !important;\n  justify-content: flex-start !important; /* Start from left */\n  scrollbar-width: none; /* Hide scrollbar for Firefox */\n  -ms-overflow-style: none; /* Hide scrollbar for IE and Edge */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.category-pills-container::-webkit-scrollbar {\n  display: none;\n}\n\n/* Ensure consistent size for category pills to fit properly */\n.category-pill {\n  flex: 0 0 auto !important; /* Don't allow pills to grow or shrink */\n  white-space: nowrap !important; /* Prevent text wrapping */\n}\n\n/* Add these to your styles.css */\n.grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr); /* Default, changed by JS */\n  gap: 20px !important; /* Increase gap between grid items */\n  padding: 20px !important;\n}\n\n.shape-container {\n  aspect-ratio: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  background: #000;\n  transition: background 0.2s ease;\n}\n\n.shape-container.highlight {\n  background: #222;\n  animation: pulse 1s ease-out;\n}\n\n@keyframes pulse {\n  0% { background: #333; }\n  100% { background: #111; }\n}\n\n/* SVG styling */\nsvg {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n.shape-container.error {\n  opacity: 0.3;\n}\n\n/* Editor styling */\n.editor {\n  height: calc(100vh - 42px);\n  padding: 0;\n  transition: opacity 0.3s ease-in-out;\n}\n\n.control-button:hover {\n  background-color: #282828;\n}\n\n.transition-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: black;\n  opacity: 0.5;\n  z-index: 1000;\n  pointer-events: none;\n  transition: opacity 0.3s ease;\n}\n\nbody.prevent-scroll {\n  overflow: hidden;\n}\n\n/* Model Export */\n\n/* Export modal styles */\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  backdrop-filter: blur(3px);\n}\n\n.modal-content {\n  background-color: #1A1A1A;\n  border-radius: 8px;\n  padding: 24px;\n  width: 400px;\n  max-width: 90%;\n  color: #e0e0e0;\n  font-family: 'Menlo', 'Monaco', 'Courier New', monospace;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #333;\n}\n\n.modal-header h3 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: normal;\n  color: #e0e0e0;\n}\n\n.close-button {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n}\n\n.close-button:hover {\n  opacity: 1;\n}\n\n.form-group {\n  margin-bottom: 16px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-size: 12px;\n  color: #999;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.form-group select {\n  width: 100%;\n  background-color: #000;\n  color: #e0e0e0;\n  border: 1px solid #333;\n  border-radius: 4px;\n  padding: 8px;\n  font-family: 'Menlo', 'Monaco', 'Courier New', monospace;\n  font-size: 12px;\n  appearance: none;\n  background-image: url(${c});\n  background-repeat: no-repeat;\n  background-position: right 8px center;\n  background-size: 16px;\n  transition: border-color 0.2s;\n}\n\n.form-group select:focus {\n  outline: none;\n  border-color: #444;\n}\n\n.form-group select option {\n  background-color: #000;\n  color: #e0e0e0;\n}\n\n.form-group select option:disabled {\n  color: #666;\n}\n\nbutton[type="submit"] {\n  background-color: #333;\n  color: #e0e0e0;\n  border: none;\n  border-radius: 30px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-family: 'Menlo', 'Monaco', 'Courier New', monospace;\n  font-size: 12px;\n  min-width: 100px;\n  transition: background-color 0.2s;\n}\n\nbutton[type="submit"]:hover {\n  background-color: #444;\n}\n\n/* Animation for modal appearance */\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.modal {\n  animation: fadeIn 0.2s ease-out;\n}\n\n/* Make highlight more visible */\n.shape-container.highlight {\n  background: #333;\n  box-shadow: 0 0 15px rgba(255, 255, 255, 0.2);\n  z-index: 10;\n  position: relative;\n}\n\n.editor-layout {\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-template-rows: auto 1fr;\n  grid-template-areas:\n    "nav nav"\n    "preview params";\n  height: 100%;\n}\n\n.editor-layout {\n  overflow: hidden;\n}\n\n#grid.editor {\n  height: 100vh; /* Already in your CSS */\n  overflow: hidden;\n}\n\n.nav-bar {\n  grid-area: nav;\n  background: #000;\n  display: flex;\n  align-items: center;\n  height: 32px;\n}\n\n.back-btn {\n  background: transparent;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n\n.back-btn:hover {\n  color: white;\n}\n\n.preview-area {\n  grid-area: preview;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #000;\n}\n\n.params-area {\n  grid-area: params;\n  background: #000;\n  padding: 15px 12px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n}\n\n.param-container {\n  margin-bottom: 12px;\n  font-family: 'Menlo', 'Monaco', 'Courier New', monospace;\n  color: #e0e0e0;\n}\n\n.param-label {\n  display: inline-block;\n  margin-bottom: 12px;\n  font-size: 12px;\n  letter-spacing: 0.5px;\n  color: #555;\n}\n\n.param-value {\n  color: #555;\n  font-size: 12px;\n  font-variant-numeric: tabular-nums;\n  text-align: left;\n  padding-right: 12px;\n}\n\n.param-slider {\n  width: 100%;\n}\n\n.param-slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background: #555;\n  cursor: pointer;\n}\n\n.param-slider::-webkit-slider-thumb:hover {\n  background: #777;\n}\n\n.param-slider::-moz-range-thumb {\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background: #555;\n  cursor: pointer;\n  border: none;\n}\n\n.param-slider::-moz-range-thumb:hover {\n  background: #777;\n}\n\n/* Bookmark & Back button styling */\n.bookmark-btn,\n.back-btn,\n.icon-button {\n  position: relative;\n  background: transparent;\n  color: #666666;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n\n.bookmark-btn svg path,\n.icon-button svg path,\n.back-btn svg path {\n  transition: stroke 0.2s;\n}\n\n.bookmark-btn:hover,\n.icon-button:hover,\n.back-btn:hover {\n  color: white; /* This will be inherited by stroke if using \`currentColor\` */\n}\n\n.bookmark-btn:hover svg path,\n.icon-button:hover svg path,\n.back-btn:hover svg path {\n  stroke: white; /* Ensure the stroke changes */\n}\n\n\n\n/* Favorites overlay styling */\n.favorites-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 1.0);\n  z-index: 1000;\n  display: none;\n  justify-content: center;\n  align-items: center;\n  padding: 24px;\n}\n\n.favorites-content {\n  border-radius: 8px;\n  width: 90%;\n  max-width: 800px;\n  max-height: 80vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.favorites-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 20px;\n}\n\n#favoritesGrid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 16px;\n  padding: 20px;\n  overflow-y: auto;\n  max-height: calc(80vh - 70px);\n}\n\n.shape-thumbnail {\n  aspect-ratio: 1;\n  background-color: #1a1a1a;\n  border-radius: 4px;\n  cursor: pointer;\n  position: relative;\n  transition: background-color 0.2s;\n  overflow: hidden;\n}\n\n.shape-thumbnail:hover {\n  background-color: #292929;\n}\n\n.shape-preview {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.remove-favorite {\n  position: absolute;\n  top: 6px;\n  right: 6px;\n  width: 20px;\n  height: 20px;\n  background-color: rgba(0, 0, 0, 0.5);\n  border: none;\n  border-radius: 50%;\n  color: #ccc;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\n.shape-thumbnail:hover .remove-favorite {\n  opacity: 1;\n}\n\n.empty-favorites {\n  padding: 40px;\n  text-align: center;\n  width: 320px;\n  margin: 0 auto;\n  color: #666;\n  font-size: 14px;\n  grid-column: 1 / -1;\n}`,""]);const u=d},393:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={cycles:{min:2,max:4,default:2},width:{min:20,max:100,default:80},thickness:{min:2,max:20,default:12},squeeze:{min:.2,max:1,default:.6},lineCap:{options:["butt","round"],default:"round"}};generateShape(){const t=[];for(let e=0;e<=100;e++){const n=e/100*Math.PI*2,i=Math.sin(n*this.cycles)*this.width,s=Math.cos(n)*this.width*this.squeeze;t.push(`${i},${s}`)}return`<path \n            d="M ${t.join(" L ")}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="${this.lineCap}"\n            stroke-linejoin="round"\n        />`}}const a=s},438:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:200,default:100},lineCount:{min:4,max:50,default:10},thickness:{min:1,max:10,default:3},lineCap:{options:["butt","round"],default:"round"},rotation:{min:0,max:360,default:59},spreadPower:{min:.1,max:4,default:1},lengthPower:{min:.1,max:4,default:1},quadrantArc:{min:1,max:120,default:90},startRadius:{min:0,max:100,default:25},quadrantGap:{min:0,max:90,default:0},skew:{min:-45,max:45,default:0},alternateLines:{options:["none","length","spacing"],default:"none"}};generateShape(){const t=[],e=this.rotation*Math.PI/180,n=this.skew*Math.PI/180,i=this.quadrantGap*Math.PI/180,s=this.quadrantArc*Math.PI/180;for(let a=0;a<4;a++){const r=e+a*(Math.PI/2+i);for(let e=0;e<this.lineCount;e++){let i=e/(this.lineCount-1);i=Math.pow(i,this.spreadPower);const a=e%2==1;let o=1,h=0;"length"===this.alternateLines&&a?o=.7:"spacing"===this.alternateLines&&a&&(h=.1*s);const l=s*i+h,d=Math.pow(i,this.lengthPower),c=this.startRadius+(this.size-this.startRadius)*d*o,u=r+l+n*i,m=Math.cos(u)*c,p=Math.sin(u)*c;t.push(`<line \n                    x1="${Math.cos(u)*this.startRadius}" \n                    y1="${Math.sin(u)*this.startRadius}"\n                    x2="${m}"\n                    y2="${p}"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    stroke-linecap="${this.lineCap}"\n                />`)}}return t.join("")}}const a=s},482:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={numBlades:{min:3,max:16,default:4},bladeLength:{min:20,max:100,default:80},circleSize:{min:10,max:80,default:30},rotation:{min:-180,max:180,default:0}};generateShape(){const t=Math.round(this.numBlades),e=this.rotation*Math.PI/180,n=this.bladeLength/100,i=this.circleSize/100,s=150*Math.max(n,1.5*i),a=150*i,r=2*Math.PI/t,o=[];for(let n=0;n<t;n++){const i=n*r+e+r/2,h=.2*r*Math.min(1,5/t),l={x:Math.cos(i)*s,y:Math.sin(i)*s},d={x:Math.cos(i-h)*a,y:Math.sin(i-h)*a},c={x:Math.cos(i+h)*a,y:Math.sin(i+h)*a},u=`M ${d.x} ${d.y} \n                             L ${l.x} ${l.y} \n                             L ${c.x} ${c.y}`;o.push(u)}return`\n            ${o.map((t=>`<path d="${t}" fill="white" />`)).join("\n")}\n            <circle cx="0" cy="0" r="${a}" fill="white" />\n        `}}const a=s},540:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},613:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:50,max:200,default:120},height:{min:50,max:200,default:160},notchRadius:{min:10,max:50,default:30},notchOffset:{min:0,max:50,default:20},thickness:{min:1,max:10,default:2},cap:{options:["butt","round"],default:"round"}};generateShape(){const t=-this.width/2,e=-this.height/2,n=t,i=this.notchOffset,s=t+this.width,a=-this.notchOffset;return`\n            <defs>\n                <mask id="pieceMask">\n                    \x3c!-- White rectangle creates the base shape --\x3e\n                    <rect \n                        x="${t}" \n                        y="${e}" \n                        width="${this.width}" \n                        height="${this.height}" \n                        fill="white"\n                    />\n                    \x3c!-- Black circles create the notch cutouts --\x3e\n                    <circle \n                        cx="${n}" \n                        cy="${i}" \n                        r="${this.notchRadius}"\n                        fill="black"\n                    />\n                    <circle \n                        cx="${s}" \n                        cy="${a}" \n                        r="${this.notchRadius}"\n                        fill="black"\n                    />\n                </mask>\n            </defs>\n            \n            \x3c!-- Main piece with mask applied --\x3e\n            <rect \n                x="${t}" \n                y="${e}" \n                width="${this.width}" \n                height="${this.height}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.cap}"\n                fill="white"\n                mask="url(#pieceMask)"\n            />`}}const a=s},641:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={rows:{min:1,max:12,default:4},columns:{min:1,max:12,default:3},gapSize:{min:1,max:10,default:6},cornerRadius:{min:0,max:10,default:5},randomLayout:{options:["true","false"],default:"true"}};generateShape(){this.resetRNG();const t=180/this.rows,e=[[[.33,.33,.34],[.5,.5],[.33,.33,.34],[.5,.5],[.33,.33,.34]],[[.25,.25,.25,.25],[.33,.34,.33],[.25,.25,.25,.25],[.33,.34,.33],[.25,.25,.25,.25]],[[.25,.5,.25],[.4,.2,.4],[.25,.5,.25],[.33,.34,.33],[.25,.5,.25]]];let n;if(this.randomLayout){n=[];for(let t=0;t<this.rows;t++){let e;if(t%2==0)e=Array(this.columns).fill(1/this.columns);else if(this.columns<=3||this.random()>.5){const t=.6+.2*this.random();e=[t,1-t]}else{const t=.4+.2*this.random(),n=(1-t)/2;e=[n,t,n]}n.push(e)}}else if(n=e[Math.min(Math.floor(this.random()*e.length),e.length-1)],n.length<this.rows){const t=[...n];for(let e=n.length;e<this.rows;e++)n.push(t[e%t.length])}const i=[];for(let e=0;e<this.rows;e++){const s=n[e]||Array(this.columns).fill(1/this.columns),a=e*t-90;let r=-90;for(let e=0;e<s.length;e++){const n=180*s[e],o=`<rect \n                    x="${r+this.gapSize/2}" \n                    y="${a+this.gapSize/2}" \n                    width="${n-this.gapSize}" \n                    height="${t-this.gapSize}"\n                    rx="${this.cornerRadius}"\n                    ry="${this.cornerRadius}"\n                    fill="white"\n                    stroke="none"\n                />`;i.push(o),r+=n}}return i.join("")}}const a=s},680:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={majorRadius:{min:50,max:50,default:50},minorRadius:{min:10,max:50,default:50},segments:{min:3,max:16,default:16},rings:{min:3,max:64,default:32},layers:{min:1,max:10,default:1},layerSpacing:{min:1,max:20,default:0},renderMode:{min:0,max:1,default:1},rotationX:{min:-180,max:180,default:0},rotationY:{min:-180,max:180,default:45},thickness:{min:.5,max:5,default:2}};generateShape(){const t=this.rotationX*Math.PI/180,e=this.rotationY*Math.PI/180,n=Math.max(3,Math.round(this.segments)),i=Math.max(3,Math.round(this.rings)),s=Math.max(1,Math.round(this.layers)),a=Math.round(this.renderMode)%2,r=[];for(let o=0;o<s;o++){const s=this.minorRadius-o*this.layerSpacing;if(s<=0)continue;const h=[];for(let t=0;t<=n;t++){const e=2*t*Math.PI/n,a=Math.cos(e),r=Math.sin(e);for(let t=0;t<=i;t++){const e=2*t*Math.PI/i,n=Math.cos(e),o=Math.sin(e),l=(this.majorRadius+s*n)*a,d=(this.majorRadius+s*n)*r,c=s*o;h.push({x:l,y:d,z:c})}}for(let s=0;s<n;s++)for(let o=0;o<i;o++){const l=i+1,d=s*l+(o+1),c=(s+1)%n*l+o,u=h[s*l+o]||{x:0,y:0,z:0},m=h[d]||{x:0,y:0,z:0},p=h[c]||{x:0,y:0,z:0};0===a?r.push(this.createLine(u,p,t,e)):r.push(this.createLine(u,m,t,e))}}r.sort(((t,e)=>e.z-t.z));const o=[];for(const t of r)o.push(`<line \n        x1="${t.x1}" \n        y1="${t.y1}" \n        x2="${t.x2}" \n        y2="${t.y2}" \n        stroke="white" \n        stroke-width="${this.thickness}" \n      />`);return o.join("")}createLine(t,e,n,i){const s=this.rotate3D(t.x,t.y,t.z,n,i),a=this.rotate3D(e.x,e.y,e.z,n,i),r=(s.z+a.z)/2;return{x1:s.x,y1:s.y,x2:a.x,y2:a.y,z:r}}rotate3D(t,e,n,i,s){const a=e*Math.cos(i)-n*Math.sin(i),r=e*Math.sin(i)+n*Math.cos(i);return{x:t*Math.cos(s)+r*Math.sin(s),y:a,z:-t*Math.sin(s)+r*Math.cos(s)}}}const a=s},714:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:2,max:10,default:2},tileSize:{min:25,max:100,default:90},flowIntensity:{min:0,max:100,default:50},patternBalance:{min:0,max:100,default:100},contrast:{min:0,max:100,default:50}};adaptSize(){const t=360/this.gridSize;this.tileSize=Math.min(this.tileSize,t)}getPseudoRandom(t,e){const n=43758.5453*Math.sin(12.9898*t+78.233*e+this.seed);return n-Math.floor(n)}createNoiseField(){this.grid=Array(this.gridSize).fill().map(((t,e)=>Array(this.gridSize).fill().map(((t,n)=>this.getPseudoRandom(n,e)))));const t=Array(this.gridSize).fill().map((()=>Array(this.gridSize).fill(0)));for(let e=0;e<this.gridSize;e++)for(let n=0;n<this.gridSize;n++){let i=this.grid[e][n],s=1;for(let t=-1;t<=1;t++)for(let a=-1;a<=1;a++){if(0===a&&0===t)continue;const r=n+a,o=e+t;r>=0&&r<this.gridSize&&o>=0&&o<this.gridSize&&(i+=this.grid[o][r],s++)}i/=s,t[e][n]=i*this.flowIntensity+this.grid[e][n]*(1-this.flowIntensity),this.contrast>0&&(t[e][n]=Math.pow(t[e][n],1+2*this.contrast))}this.grid=t}getRotation(t,e){const n=this.grid[e][t],i=90*Math.floor(4*n);if(this.getPseudoRandom(t+100,e+100)>this.patternBalance){const n=Math.floor(4*this.getPseudoRandom(t+200,e+200));return this.patterns[n]}return i}createTile(t,e,n){const i=e*this.tileSize,s=n*this.tileSize,a=this.tileSize;return`<g transform="translate(${i},${s}) rotate(${t}, ${a/2}, ${a/2})">\n            <path d="M 0 0 A ${a} ${a} 0 0 1 ${a} ${a} L 0 ${a} Z" fill="white" stroke="none" />\n        </g>`}generateShape(){this.flowIntensity=this.flowIntensity/100,this.patternBalance=this.patternBalance/100,this.contrast=this.contrast/100,this.patterns=[0,90,180,270],this.seed=12345,this.adaptSize(),this.createNoiseField(),this.adaptSize();const t=-this.gridSize*this.tileSize/2;let e=[`<g transform="translate(${t},${t})">`];for(let t=0;t<this.gridSize;t++)for(let n=0;n<this.gridSize;n++){const i=this.getRotation(n,t);e.push(this.createTile(i,n,t))}return e.push("</g>"),e.join("")}}const a=s},751:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={sides:{min:3,max:12,default:5},cornerRadius:{min:0,max:100,default:20}};generateShape(){this.sides=Math.round(this.sides),this.size=100;const t=[],e=2*Math.PI/this.sides;for(let n=0;n<this.sides;n++){const i=n*e-Math.PI/2,s=this.size*Math.cos(i),a=this.size*Math.sin(i);t.push([s,a])}const n=Math.sqrt(Math.pow(t[1][0]-t[0][0],2)+Math.pow(t[1][1]-t[0][1],2))*Math.sin(Math.PI/this.sides)*.5,i=this.cornerRadius/100*n;let s="";for(let e=0;e<t.length;e++){const n=t[e],a=t[(e+1)%t.length],r=t[(e+2)%t.length],o={x:a[0]-n[0],y:a[1]-n[1]},h={x:r[0]-a[0],y:r[1]-a[1]},l=Math.sqrt(o.x*o.x+o.y*o.y),d=Math.sqrt(h.x*h.x+h.y*h.y),c={x:o.x/l,y:o.y/l},u={x:h.x/d,y:h.y/d},m={x:a[0]-c.x*i,y:a[1]-c.y*i},p={x:a[0]+u.x*i,y:a[1]+u.y*i};0===e&&(s+=`M ${n[0]},${n[1]}`),s+=` L ${m.x},${m.y}`,s+=` Q ${a[0]},${a[1]} ${p.x},${p.y}`}return s+="Z",`<path d="${s}" fill="white"/>`}}const a=s},752:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:8,max:16,default:12},pixelSize:{min:5,max:10,default:15},fillProbability:{min:.3,max:.9,default:.7},symmetry:{options:["radial4","radial8"],default:"radial8"},patternType:{options:["center-heavy","edge-heavy","uniform","random"],default:"random"},randomSeed:{min:1,max:1e3,default:42}};createSeededRandom(t){return function(){return(t=(9301*t+49297)%233280)/233280}}createGrid(){const t=[];for(let e=0;e<this.gridSize;e++){const e=[];for(let t=0;t<this.gridSize;t++)e.push(0);t.push(e)}return t}getPositionProbability(t,e){const n=this.gridSize/2,i=Math.sqrt(Math.pow(t-n,2)+Math.pow(e-n,2))/(Math.sqrt(2)*n);switch(this.patternType){case"center-heavy":return this.fillProbability*(1-i);case"edge-heavy":return this.fillProbability*i;default:return this.fillProbability}}applySymmetry(t,e,n){const i=Math.floor(this.gridSize/2);if(this.grid[e][t]=n,"radial4"===this.symmetry){this.grid[e][this.gridSize-1-t]=n,this.grid[this.gridSize-1-e][t]=n,this.grid[this.gridSize-1-e][this.gridSize-1-t]=n;const s=i-(e-i),a=i+(t-i);s>=0&&s<this.gridSize&&a>=0&&a<this.gridSize&&(this.grid[a][s]=n,this.grid[a][this.gridSize-1-s]=n,this.grid[this.gridSize-1-a][s]=n,this.grid[this.gridSize-1-a][this.gridSize-1-s]=n)}else{this.grid[e][this.gridSize-1-t]=n,this.grid[this.gridSize-1-e][t]=n,this.grid[this.gridSize-1-e][this.gridSize-1-t]=n;const s=t-i,a=e-i,r=[[i+s,i+a],[i+a,i-s],[i-s,i-a],[i-a,i+s],[i+a,i+s],[i-a,i-s],[i+s,i-a],[i-s,i+a]];for(const[t,e]of r)t>=0&&t<this.gridSize&&e>=0&&e<this.gridSize&&(this.grid[e][t]=n)}}generatePattern(){const t=Math.floor(this.gridSize/2),e=(e,n)=>"radial8"===this.symmetry?e>=t&&n<=t&&e-t>=t-n:e>=t&&n<=t;for(let t=0;t<this.gridSize;t++)for(let n=0;n<this.gridSize;n++)if(e(n,t)){const e=this.getPositionProbability(n,t);this.rng()<e&&this.applySymmetry(n,t,1)}}generateShape(){this.gridSize=this.gridSize%2==0?this.gridSize+1:this.gridSize,this.rng=this.createSeededRandom(this.randomSeed),this.grid=this.createGrid(),this.generatePattern();const t=320/this.gridSize,e=Math.min(this.pixelSize,t),n=this.gridSize*e/2;let i="";for(let t=0;t<this.gridSize;t++)for(let s=0;s<this.gridSize;s++)1===this.grid[t][s]&&(i+=`M${s*e-n},${t*e-n} h${e} v${e} h-${e} Z `);return`<path d="${i.trim()}" fill="white" stroke="none"/>`}}const a=s},769:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={cornerRadius:{min:5,max:30,default:30},length:{min:20,max:100,default:90},thickness:{min:1,max:10,default:10},segmentCount:{min:1,max:6,default:6},spacing:{min:5,max:50,default:28}};generateCornerPair(t,e){const n=e?0:this.spacing,i=`<path \n            d="M 0,${t+this.cornerRadius} \n               A ${this.cornerRadius} ${this.cornerRadius} 0 0 1 ${this.cornerRadius},${t} \n               L ${this.length},${t}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`;return`<path \n            d="M 0,${t+this.cornerRadius} \n               A ${this.cornerRadius} ${this.cornerRadius} 0 0 0 -${this.cornerRadius},${t} \n               L -${this.length},${t}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`+i+(e?"":`<path \n            d="M 0,${t+this.cornerRadius} \n               L 0,${t+this.cornerRadius+n}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`)}generateShape(){const t=[],e=(this.segmentCount-1)*this.spacing;for(let n=0;n<this.segmentCount;n++){const i=-e+n*this.spacing,s=n===this.segmentCount-1;t.push(this.generateCornerPair(i,s))}return`<g transform="translate(0, ${e/2})">${t.join("")}</g>`}}const a=s},811:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:50,max:200,default:120},height:{min:50,max:200,default:120},angle:{min:30,max:80,default:60},separation:{min:-50,max:50,default:0}};generateShape(){const t=1*this.width,e=1*this.height,n=this.angle*Math.PI/180,i=1*this.separation,s=0-t/2-i/2,a=0+t/2+i/2;return`\n            <g>\n                \x3c!-- Left diamond --\x3e\n                <polygon \n                    points="${[`${s},${0-e/2}`,s-t/2*Math.cos(n)+",0",`${s},${0+e/2}`,`${s+t/2*Math.cos(n)},0`].join(" ")}"\n                    fill="white"\n                />\n                \n                \x3c!-- Right diamond --\x3e\n                <polygon \n                    points="${[`${a},${0-e/2}`,a-t/2*Math.cos(n)+",0",`${a},${0+e/2}`,`${a+t/2*Math.cos(n)},0`].join(" ")}"\n                    fill="white"\n                />\n            </g>`}}const a=s},816:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={armLength:{min:20,max:150,default:80},armWidth:{min:0,max:100,default:7},count:{min:1,max:24,default:5},spacing:{min:5,max:30,default:5},thickness:{min:.5,max:5,default:2.2},baseRadius:{min:0,max:50,default:50},radiusGrowth:{min:0,max:20,default:12}};calculateAdaptiveParameters(){const t=Math.max(this.armLength+this.armWidth/2,this.armWidth+this.armLength/2)+this.thickness,e=this.spacing+this.thickness,n=t+(this.count-1)*e,i=.8*this.viewBoxHalf,s=n>i?i/n:1;this.adaptiveArmLength=this.armLength*s,this.adaptiveArmWidth=this.armWidth*s,this.adaptiveSpacing=this.spacing*s,this.adaptiveThickness=this.thickness*s,this.adaptiveBaseRadius=this.baseRadius*s,this.adaptiveRadiusGrowth=this.radiusGrowth*s;const a=.8*this.viewBoxHalf,r=Math.floor((a-t*s)/(e*s))+1;this.adaptiveCount=Math.min(this.count,r)}calculateCornerRadius(t){const e=t*(this.adaptiveSpacing+this.adaptiveThickness),n=this.adaptiveArmWidth/2+e,i=this.adaptiveArmLength+e,s=Math.min(n,(i-n)/2),a=this.adaptiveBaseRadius+t*this.adaptiveRadiusGrowth;return Math.min(a,s)}generateCross(t){const e=t*(this.adaptiveSpacing+this.adaptiveThickness),n=this.adaptiveArmWidth/2+e,i=this.adaptiveArmLength+e,s=this.calculateCornerRadius(t),a=(t,e,n,i,s,a,r,o)=>`A ${n} ${i} 0 ${s} ${a} ${r} ${o}`;return[`M ${-n} ${-i+s}`,a(0,0,s,s,0,1,-n+s,-i),`L ${n-s} ${-i}`,a(0,0,s,s,0,1,n,-i+s),`L ${n} ${-n}`,`L ${i-s} ${-n}`,a(0,0,s,s,0,1,i,-n+s),`L ${i} ${n-s}`,a(0,0,s,s,0,1,i-s,n),`L ${n} ${n}`,`L ${n} ${i-s}`,a(0,0,s,s,0,1,n-s,i),`L ${-n+s} ${i}`,a(0,0,s,s,0,1,-n,i-s),`L ${-n} ${n}`,`L ${-i+s} ${n}`,a(0,0,s,s,0,1,-i,n-s),`L ${-i} ${-n+s}`,a(0,0,s,s,0,1,-i+s,-n),`L ${-n} ${-n}`,"Z"].join(" ")}generateShape(){return this.viewBoxHalf=200,this.calculateAdaptiveParameters(),Array.from({length:this.adaptiveCount},((t,e)=>`<path \n                d="${this.generateCross(e)}" \n                fill="none" \n                stroke="white" \n                stroke-width="${this.adaptiveThickness}"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n            />`)).join("")}}const a=s},821:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:50,max:200,default:200},height:{min:50,max:200,default:200},count:{min:2,max:12,default:6},spacing:{min:5,max:40,default:20},thickness:{min:1,max:10,default:2},xOffset:{min:-100,max:100,default:0},yOffset:{min:-100,max:100,default:0},offsetScale:{min:0,max:1,default:1}};generateShape(){const t=[],e=this.width/2,n=this.height/2,i=(this.width-(this.count-1)*this.spacing*2)/2,s=(this.height-(this.count-1)*this.spacing*2)/2,a=(e-i)/Math.abs(this.xOffset||1),r=(n-s)/Math.abs(this.yOffset||1),o=Math.min(a,r,this.offsetScale),h=this.xOffset*o,l=this.yOffset*o;for(let e=0;e<this.count;e++){const n=(this.width-e*this.spacing*2)/2,i=(this.height-e*this.spacing*2)/2;if(n<=0||i<=0)break;const s=e/(this.count-1),a=h*s,r=l*s;t.push(`<ellipse \n                cx="${a}"\n                cy="${r}"\n                rx="${n}"\n                ry="${i}"\n                fill="none"\n                stroke="white"\n                stroke-width="${this.thickness}"\n            />`)}return t.join("")}}const a=s},904:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:2,max:4,default:2},diamondSize:{min:20,max:80,default:60},thickness:{min:1,max:8,default:2},spacing:{min:1,max:50,default:1},innerRatio:{min:.1,max:.9,default:.6},lineCap:{options:["butt","round"],default:"round"}};generateShape(){const t=[],e=Math.floor(this.gridSize),n=(this.diamondSize+this.spacing)*e,i=-n/2+(this.diamondSize+this.spacing)/2,s=-n/2+(this.diamondSize+this.spacing)/2;for(let n=0;n<e;n++)for(let a=0;a<e;a++){const e=i+a*(this.diamondSize+this.spacing),r=s+n*(this.diamondSize+this.spacing),o=[[e,r-this.diamondSize/2],[e+this.diamondSize/2,r],[e,r+this.diamondSize/2],[e-this.diamondSize/2,r]];if(t.push(`<path \n                    d="M ${o[0][0]} ${o[0][1]} \n                       L ${o[1][0]} ${o[1][1]} \n                       L ${o[2][0]} ${o[2][1]} \n                       L ${o[3][0]} ${o[3][1]} Z"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    stroke-linecap="${this.lineCap}"\n                    fill="none"\n                />`),this.innerRatio>.1){const n=this.diamondSize*this.innerRatio,i=[[e,r-n/2],[e+n/2,r],[e,r+n/2],[e-n/2,r]];t.push(`<path \n                        d="M ${i[0][0]} ${i[0][1]} \n                           L ${i[1][0]} ${i[1][1]} \n                           L ${i[2][0]} ${i[2][1]} \n                           L ${i[3][0]} ${i[3][1]} Z"\n                        stroke="white"\n                        stroke-width="${this.thickness}"\n                        stroke-linecap="${this.lineCap}"\n                        fill="none"\n                    />`);for(let e=0;e<4;e++)t.push(`<line \n                            x1="${o[e][0]}" \n                            y1="${o[e][1]}" \n                            x2="${i[e][0]}" \n                            y2="${i[e][1]}"\n                            stroke="white"\n                            stroke-width="${this.thickness}"\n                            stroke-linecap="${this.lineCap}"\n                        />`)}}return t.join("")}}const a=s},908:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={teeth:{min:6,max:24,default:32},toothDepth:{min:.1,max:.3,default:.2},hubRadius:{min:.2,max:.4,default:.2},spokesCount:{min:3,max:8,default:6},thickness:{min:1,max:5,default:4},lineCap:{options:["butt","round"],default:"round"}};generateShape(){const t=[],e=100,n=e*(1-this.toothDepth),i=100*this.hubRadius;this.teeth=Math.round(this.teeth),this.spokesCount=Math.round(this.spokesCount);for(let i=0;i<this.teeth;i++){const s=2*i*Math.PI/this.teeth,a=2*(i+1)*Math.PI/this.teeth,r=(s+a)/2,o=e*Math.cos(s),h=e*Math.sin(s),l=n*Math.cos(r),d=n*Math.sin(r);t.push(`<line \n                x1="${o}" \n                y1="${h}" \n                x2="${l}" \n                y2="${d}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.lineCap}"\n            />`);const c=e*Math.cos(a),u=e*Math.sin(a);t.push(`<line \n                x1="${l}" \n                y1="${d}" \n                x2="${c}" \n                y2="${u}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.lineCap}"\n            />`)}t.push(`<circle \n            cx="0" \n            cy="0" \n            r="${i}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`);for(let e=0;e<this.spokesCount;e++){const s=2*e*Math.PI/this.spokesCount,a=n*Math.cos(s),r=n*Math.sin(s);t.push(`<line \n                x1="${i*Math.cos(s)}" \n                y1="${i*Math.sin(s)}" \n                x2="${a}" \n                y2="${r}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.lineCap}"\n            />`)}return t.join("\n")}}const a=s},928:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={segments:{min:2,max:5,default:3},cornerRadius:{min:20,max:100,default:60},spacing:{min:-20,max:20,default:-5},aspectRatio:{min:.5,max:2,default:1}};generateShape(){const t=Math.round(this.segments),e=.8*this.cornerRadius,n=.8*this.spacing,i=(200-n*(t-1))/t,s=i*this.aspectRatio,a=[];for(let r=0;r<t;r++){const t=(i+n)*r-100,o=-s/2;a.push(`<rect \n                x="${t}"\n                y="${o}"\n                width="${i}"\n                height="${s}"\n                rx="${e}"\n                ry="${e}"\n                fill="white"\n                stroke="white"\n                stroke-width="2"\n            />`)}return a.join("\n")}}const a=s},1028:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={length:{min:50,max:150,default:150},shaftWidth:{min:10,max:100,default:30},headWidth:{min:20,max:200,default:80},headLength:{min:20,max:100,default:50},rotation:{min:-180,max:180,default:180,step:45},style:{min:0,max:4,default:0,step:1}};constructor(t={}){super(t),this.validateAndAdjustParameters()}validateAndAdjustParameters(){const t=.8*this.length;this.headWidth=Math.min(this.headWidth,t);const e=Math.max(10,.1*this.length);this.headWidth<this.shaftWidth+e&&(this.headWidth=this.shaftWidth+e);const n=.5*this.length;this.headLength=Math.min(this.headLength,n)}generateShape(){this.validateAndAdjustParameters();const t=this.headLength,e=this.length-t,n=this.headWidth/2,i=this.shaftWidth/2,s=-this.length/2,a=s+e,r=this.length/2;let o;switch(Math.floor(this.style)){case 1:const e=1.2*i;o=[[-e,s],[e,s],[e,a],[n,a],[0,r],[-n,a],[-e,a]];break;case 2:const h=.7*i;o=[[-h,s],[h,s],[h,a],[n,a],[0,r],[-n,a],[-h,a]];break;case 3:const l=.7*t,d=s+(this.length-l);o=[[-i,s],[i,s],[i,d],[n,d],[0,r],[-n,d],[-i,d]];break;case 4:const c=1.2*t,u=s+(this.length-c),m=.9*n;o=[[-i,s],[i,s],[i,u],[m,u],[0,r],[-m,u],[-i,u]];break;default:o=[[-i,s],[i,s],[i,a],[n,a],[0,r],[-n,a],[-i,a]]}const h=o.map((t=>`${t[0]},${t[1]}`)).join(" ");return`\n            <g transform="rotate(${this.rotation})">\n                <polygon \n                    points="${h}"\n                    fill="white"\n                />\n            </g>\n        `}}const a=s},1113:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},1169:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:100,max:180,default:180},iterations:{min:1,max:5,default:3},thickness:{min:.5,max:5,default:3}};generateShape(){const t=[],e=this.size*Math.sqrt(3)/2,n=-this.size/2,i=e/2,s=this.size/2,a=e/2,r=-e/2,o=Math.min(5,Math.floor(this.iterations));return this.drawSierpinski(t,n,i,s,a,0,r,o),t.join("")}drawSierpinski(t,e,n,i,s,a,r,o){const h=Math.abs((e*(s-r)+i*(r-n)+a*(n-s))/2);if(o<=0||h<1)t.push(`<polygon\n        points="${e},${n} ${i},${s} ${a},${r}"\n        stroke="white"\n        stroke-width="${this.thickness}"\n        fill="none"\n      />`);else{const h=(e+i)/2,l=(n+s)/2,d=(i+a)/2,c=(s+r)/2,u=(a+e)/2,m=(r+n)/2,p=o-1;p>=0&&(this.drawSierpinski(t,e,n,h,l,u,m,p),this.drawSierpinski(t,h,l,i,s,d,c,p),this.drawSierpinski(t,u,m,d,c,a,r,p))}}}const a=s},1235:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:2,max:6,default:3},spacing:{min:0,max:20,default:0},cornerRadius:{min:0,max:30,default:0}};generateShape(){const t=Math.round(this.gridSize),e=Number(this.spacing),n=Number(this.cornerRadius),i=Math.min(300/(2*t+e/100*(t-1))),s=t*i+(t-1)*e,a=-s/2,r=-s/2,o=[];for(let s=0;s<t;s++)for(let h=0;h<t;h++)if((s+h)%2==0){const t=a+h*(i+e),l=r+s*(i+e);if(n>0){const e=this.createRoundedRectPath(t,l,i,i,n);o.push(`<path d="${e}" fill="white"/>`)}else o.push(`<rect \n                            x="${t}" \n                            y="${l}" \n                            width="${i}" \n                            height="${i}"\n                            fill="white"\n                        />`)}return o.join("")}createRoundedRectPath(t,e,n,i,s){const a=Math.min(s,Math.min(n,i)/2);return`\n            M ${t+a} ${e}\n            L ${t+n-a} ${e}\n            Q ${t+n} ${e} ${t+n} ${e+a}\n            L ${t+n} ${e+i-a}\n            Q ${t+n} ${e+i} ${t+n-a} ${e+i}\n            L ${t+a} ${e+i}\n            Q ${t} ${e+i} ${t} ${e+i-a}\n            L ${t} ${e+a}\n            Q ${t} ${e} ${t+a} ${e}\n            Z\n        `.trim().replace(/\s+/g," ")}}const a=s},1483:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={lobeSize:{min:30,max:150,default:80},crossThickness:{min:10,max:50,default:25},lobeRoundness:{min:.1,max:1,default:.6},crossExtension:{min:.5,max:1.5,default:1}};createLobe(t,e,n){return`<circle \n            cx="${t}" \n            cy="${e}" \n            r="${n/2}"\n            fill="white"\n        />`}createRoundedRect(t,e,n,i,s){return`<rect \n            x="${t}" \n            y="${e}" \n            width="${n}" \n            height="${i}" \n            rx="${s}"\n            ry="${s}"\n            fill="white"\n        />`}generateShape(){const t=[],e=1*this.lobeSize,n=Math.min(1*this.crossThickness,.5*e),i=Math.min(this.lobeRoundness,1),s=this.crossExtension,a=e*i,r=.6*e;for(let e=0;e<360;e+=90){const n=e*Math.PI/180,i=Math.cos(n)*r,s=Math.sin(n)*r;t.push(this.createLobe(i,s,a))}const o=e*s*1.2;return t.push(this.createRoundedRect(-n/2,-o/2,n,o,n/2)),t.push(this.createRoundedRect(-o/2,-n/2,o,n,n/2)),t.join("\n")}}const a=s},1488:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={vertices:{min:3,max:10,default:6},layers:{min:2,max:5,default:4},innerSize:{min:30,max:60,default:13},sizeStep:{min:20,max:40,default:20},thickness:{min:1,max:10,default:6},density:{min:1,max:5,default:1}};generatePolygonPoints(t,e,n=0){const i=[],s=2*Math.PI/e;for(let a=0;a<e;a++){const e=a*s+n,r=t*Math.cos(e),o=t*Math.sin(e);i.push([r,o])}return i}generateShape(){const t=[];let e=this.innerSize;this.vertices=Math.round(this.vertices);for(let n=0;n<this.layers;n++){for(let n=0;n<this.density;n++){const i=2*n*Math.PI/(this.density*this.vertices),s=this.generatePolygonPoints(e,this.vertices,i);let a=`M ${s[0][0]},${s[0][1]}`;for(let t=1;t<s.length;t++)a+=` L ${s[t][0]},${s[t][1]}`;a+=" Z",t.push(`<path \n                    d="${a}"\n                    fill="none"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    stroke-linecap="square"\n                    stroke-linejoin="miter"\n                />`)}e+=this.sizeStep}return`<g>${t.join("")}</g>`}}const a=s},1505:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:150,default:150},rows:{min:1,max:10,default:2},columns:{min:1,max:10,default:2},spacing:{min:0,max:30,default:0},depth:{min:0,max:100,default:100},rotationX:{min:-180,max:180,default:0},rotationY:{min:-180,max:180,default:0},thickness:{min:1,max:5,default:2}};generateShape(){const t=[],e=this.size,n=this.size,i=this.depth,s=this.rotationX*Math.PI/180,a=this.rotationY*Math.PI/180,r=e/2,o=n/2,h=(e-(this.columns+1)*this.spacing)/this.columns,l=(n-(this.rows+1)*this.spacing)/this.rows,d=[];for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++){const n=e/(this.columns-1)*2-1,s=t/(this.rows-1)*2-1,a=-r+this.spacing+e*(h+this.spacing),c=-o+this.spacing+t*(l+this.spacing),u=Math.sqrt(n*n+s*s),m=i*Math.min(u,1),p={type:"box",frontFace:[{x:a,y:c,z:0},{x:a+h,y:c,z:0},{x:a+h,y:c+l,z:0},{x:a,y:c+l,z:0}],backFace:[{x:a,y:c,z:m},{x:a+h,y:c,z:m},{x:a+h,y:c+l,z:m},{x:a,y:c+l,z:m}],avgZ:m/2};d.push(p)}const c=t=>{const e={...t},n=i/2;let r=(e.y-0)*Math.cos(s)-(e.z-n)*Math.sin(s)+0,o=(e.y-0)*Math.sin(s)+(e.z-n)*Math.cos(s)+n,h=(e.x-0)*Math.cos(a)+(o-n)*Math.sin(a)+0,l=-(e.x-0)*Math.sin(a)+(o-n)*Math.cos(a)+n;const d=600/(600+l);return{x:h*d,y:r*d,z:l}};d.sort(((t,e)=>{const n=t.avgZ*Math.cos(s)*Math.cos(a);return e.avgZ*Math.cos(s)*Math.cos(a)-n}));for(const e of d)if("box"===e.type){const n=e.frontFace.map(c),i=e.backFace.map(c);t.push(`<path d="\n          M${n[0].x},${n[0].y}\n          L${n[1].x},${n[1].y}\n          L${n[2].x},${n[2].y}\n          L${n[3].x},${n[3].y}\n          Z\n        " stroke="white" stroke-width="${this.thickness}" fill="none" />`),t.push(`<path d="\n          M${i[0].x},${i[0].y}\n          L${i[1].x},${i[1].y}\n          L${i[2].x},${i[2].y}\n          L${i[3].x},${i[3].y}\n          Z\n        " stroke="white" stroke-width="${this.thickness}" fill="none" />`);for(let e=0;e<4;e++)t.push(`<path d="\n            M${n[e].x},${n[e].y}\n            L${i[e].x},${i[e].y}\n          " stroke="white" stroke-width="${this.thickness}" fill="none" />`)}else if("triangle"===e.type){const n=e.points.map(c);t.push(`<path d="\n          M${n[0].x},${n[0].y}\n          L${n[1].x},${n[1].y}\n          L${n[2].x},${n[2].y}\n          Z\n        " stroke="white" stroke-width="${this.thickness}" fill="none" />`)}return t.join("")}}const a=s},1543:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={spread:{min:.1,max:1,default:.7},centerSize:{min:.1,max:.5,default:.2},triangleDepth:{min:.1,max:.8,default:.7}};generateShape(){const t=100,e=[{x:0,y:0-t*this.spread},{x:0+t*this.spread,y:0},{x:0,y:0+t*this.spread},{x:0-t*this.spread,y:0}],n=t*this.centerSize,i=[{x:0-n,y:0-n},{x:0+n,y:0-n},{x:0+n,y:0+n},{x:0-n,y:0+n}],s=[];for(let t=0;t<4;t++){const n=e[t],a=i[t],r=i[(t+1)%4],o=n.x*this.triangleDepth+0*(1-this.triangleDepth),h=n.y*this.triangleDepth+0*(1-this.triangleDepth);s.push(`\n                <path d="\n                    M ${a.x},${a.y}\n                    L ${n.x},${n.y}\n                    L ${r.x},${r.y}\n                    L ${o},${h}\n                    Z\n                " fill="white" />\n            `)}return s.join("")}}const a=s},1601:t=>{"use strict";t.exports=function(t){return t[1]}},1678:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:300,default:200},arrowWidth:{min:.1,max:.5,default:.3},arrowDepth:{min:.1,max:.5,default:.3}};generateShape(){const t=this.size,e=t*this.arrowWidth,n=t*this.arrowDepth,i="0,"+(0-t/2),s=0+t/2+",0",a="0,"+(0+t/2),r=0-t/2+",0",o=`diamond-mask-${Math.random().toString(36).substr(2,9)}`;return`\n            <defs>\n                <mask id="${o}">\n                    \x3c!-- Base diamond (white) --\x3e\n                    <polygon \n                        points="${i} ${s} ${a} ${r}"\n                        fill="white"\n                    />\n                    \n                    \x3c!-- Arrow cutouts (black) --\x3e\n                    <polygon \n                        points="${0-e/2},${0-n} \n                               0,0 \n                               ${0+e/2},${0-n}"\n                        fill="black"\n                    />\n                    <polygon \n                        points="${0-e/2},${0+n} \n                               0,0 \n                               ${0+e/2},${0+n}"\n                        fill="black"\n                    />\n                </mask>\n            </defs>\n            \n            \x3c!-- Main shape with mask --\x3e\n            <polygon \n                points="${i} ${s} ${a} ${r}"\n                fill="white"\n                mask="url(#${o})"\n            />`}}const a=s},1680:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={levelCount:{min:1,max:15,default:5},spawnFactor:{min:1,max:12,default:3},radiusStep:{min:5,max:20,default:20},branchThickness:{min:1,max:8,default:2},randomness:{min:0,max:10,default:2},curveStyle:{options:["straight","curved"],default:"curved"},lineCap:{options:["butt","round"],default:"round"},organicFactor:{min:0,max:10,default:0}};generateRadialPoint(t,e,n){const i=this.randomness*(this.random()-.5);return{x:t*Math.cos(e)+i,y:t*Math.sin(e)+i}}findClosestPoint(t,e){let n=1/0,i=null;for(const s of e){const e=Math.hypot(t.x-s.x,t.y-s.y);e<n&&(n=e,i=s)}return i}generateLevelPoints(t){const e=[],n=Math.ceil(t*this.spawnFactor/10);for(let i=0;i<n;i++){const s=i/n*2*Math.PI+.2*this.random();e.push(this.generateRadialPoint(t,s,this.randomness))}return e}generateDendrites(){let t=this.radiusStep,e=[{x:0,y:0}];const n=[];for(let i=0;i<this.levelCount;i++){const i=this.generateLevelPoints(t);for(const t of i){const i=this.findClosestPoint(t,e);let s=!1;for(const e of n){const n=e[e.length-1];if(Math.abs(n.x-i.x)<.1&&Math.abs(n.y-i.y)<.1){e.push(t),s=!0;break}}s||n.push([i,t])}e=i,t+=this.radiusStep}return n}enhancePathWithIntermediatePoints(t){if(t.length<2)return t;const e=[],n=Math.max(1,Math.floor(this.organicFactor/2));for(let i=0;i<t.length-1;i++){const s=t[i],a=t[i+1];e.push(s);for(let t=1;t<=n;t++){const i=t/(n+1),r=s.x+(a.x-s.x)*i,o=s.y+(a.y-s.y)*i,h=a.x-s.x,l=a.y-s.y,d=Math.sqrt(h*h+l*l),c=-l,u=h,m=.15*d*(this.organicFactor/10),p=(this.random()-.5)*m;e.push({x:r+c/d*p,y:o+u/d*p})}}return e.push(t[t.length-1]),e}generateOrganicCurve(t){if(t.length<2)return"";if(2===t.length)return`M${t[0].x},${t[0].y} L${t[1].x},${t[1].y}`;let e=`M${t[0].x},${t[0].y}`;for(let n=1;n<t.length;n++){const i=t[n-1],s=t[n];if(n<t.length-1){const a=t[n+1],r=(i.x+s.x)/2,o=(i.y+s.y)/2,h=s.x-i.x,l=s.y-i.y,d=a.x-s.x,c=a.y-s.y,u=this.organicFactor/20;e+=` Q${r+(this.random()-.5)*u*Math.abs(h+d)},${o+(this.random()-.5)*u*Math.abs(l+c)} ${s.x},${s.y}`}else e+=` L${s.x},${s.y}`}return e}generateStraightPaths(t){return t.map((t=>this.enhancePathWithIntermediatePoints(t).map(((t,e)=>0===e?`M${t.x} ${t.y}`:`L${t.x} ${t.y}`)).join(" ")))}generateCurvedPaths(t){return t.map((t=>{const e=this.enhancePathWithIntermediatePoints(t);return this.generateOrganicCurve(e)}))}generateShape(){this.resetRNG(this.seed);const t=this.generateDendrites();let e;return e="curved"===this.curveStyle?this.generateCurvedPaths(t):this.generateStraightPaths(t),e.map((t=>`<path \n                d="${t}" \n                fill="none" \n                stroke="white" \n                stroke-width="${this.branchThickness}"\n                stroke-linecap="${this.lineCap}"\n            />`)).join("")}}const a=s},1711:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={segments:{min:2,max:8,default:4},height:{min:100,max:200,default:120},width:{min:20,max:100,default:42},modulation:{min:10,max:100,default:82},phase:{min:-180,max:180,default:90},rounding:{min:0,max:100,default:100},waistMod:{min:0,max:100,default:50},waistPos:{min:0,max:100,default:50}};generateShape(){const t=[],e=this.phase*Math.PI/180,n=2*this.segments+1;for(let i=0;i<n;i++){const s=i/(n-1),a=(s-.5)*this.height,r=this.waistPos/100,o=this.waistMod/100,h=Math.exp(-Math.pow(4*(s-r),2))*o,l=this.width*(1-.7*h),d=this.modulation/100*this.width*.3,c=l+Math.sin(s*Math.PI*this.segments*2+e)*d;t.push([c,a])}const i=this.rounding/100*30;if(i>0){let e="";const n=(t,e)=>{const n=e[0]-t[0],i=e[1]-t[1];return Math.sqrt(n*n+i*i)},s=(t,e)=>{const n=e[0]-t[0],i=e[1]-t[1],s=Math.sqrt(n*n+i*i);return[n/s,i/s]};e=`M ${t[0][0]},${t[0][1]}`;for(let a=1;a<t.length-1;a++){const r=t[a-1],o=t[a],h=t[a+1],l=n(r,o),d=n(o,h),c=Math.min(i,.49*l,.49*d),[u,m]=s(r,o),[p,f]=s(o,h),x=o[0]-u*c,g=o[1]-m*c,y=o[0]+p*c,$=o[1]+f*c;e+=` L ${x},${g} Q ${o[0]},${o[1]} ${y},${$}`}e+=` L ${t[t.length-1][0]},${t[t.length-1][1]}`,e+=` L ${-t[t.length-1][0]},${t[t.length-1][1]}`;for(let a=t.length-2;a>0;a--){const r=t[a-1],o=t[a],h=t[a+1],l=n(h,o),d=n(o,r),c=Math.min(i,.49*l,.49*d),[u,m]=s(h,o),[p,f]=s(o,r),x=-(o[0]-u*c),g=o[1]-m*c,y=-(o[0]+p*c),$=o[1]+f*c;e+=` L ${x},${g} Q ${-o[0]},${o[1]} ${y},${$}`}return e+=` L ${-t[0][0]},${t[0][1]} Z`,`<path d="${e}" fill="white" stroke="none"/>`}{let e=`M ${t[0][0]},${t[0][1]}`;for(let n=1;n<t.length;n++)e+=` L ${t[n][0]},${t[n][1]}`;for(let n=t.length-1;n>=0;n--)e+=` L ${-t[n][0]},${t[n][1]}`;return e+=" Z",`<g transform="scale(${this.scale})">\n        <path d="${e}" fill="white" stroke="none"/>\n    </g>`}}}const a=s},1748:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={centerSize:{min:10,max:100,default:40},armLength:{min:20,max:150,default:80},armWidth:{min:10,max:80,default:30},slantAngle:{min:15,max:75,default:45}};generateShape(){const t=this.slantAngle*Math.PI/180,e=[0-this.centerSize/2+",0","0,"+(0-this.centerSize/2),0+this.centerSize/2+",0","0,"+(0+this.centerSize/2)],n=Math.cos(t)*this.armLength,i=Math.sin(t)*this.armLength,s=[0-this.centerSize/2+",0",`${0-this.centerSize/2-n},${0-i}`,`${0-this.centerSize/2-n},${0-i+this.armWidth}`,`${0-this.centerSize/2},${0+this.armWidth}`],a=[0+this.centerSize/2+",0",`${0+this.centerSize/2+n},${0+i}`,`${0+this.centerSize/2+n},${0+i-this.armWidth}`,`${0+this.centerSize/2},${0-this.armWidth}`];return`\n            <path d="M ${e[0]} L ${e[1]} L ${e[2]} L ${e[3]} Z" \n                  fill="white" />\n            <path d="M ${s[0]} L ${s[1]} L ${s[2]} L ${s[3]} Z" \n                  fill="white" />\n            <path d="M ${a[0]} L ${a[1]} L ${a[2]} L ${a[3]} Z" \n                  fill="white" />\n        `}}const a=s},1752:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={circleSize:{min:50,max:200,default:150},lineThickness:{min:1,max:20,default:10},lineAngle:{min:-45,max:45,default:-45},lineLength:{min:.5,max:1.2,default:1}};generateShape(){const t=this.circleSize/2*1,e=1*this.lineThickness,n=this.lineAngle*(Math.PI/180),i=t*this.lineLength,s=Math.cos(n)*i,a=Math.sin(n)*i,r=`circle-mask-${Math.random().toString(36).substr(2,9)}`;return`\n            <defs>\n                <mask id="${r}">\n                    \x3c!-- Base circle (white) --\x3e\n                    <circle \n                        cx="0" \n                        cy="0" \n                        r="${t}"\n                        fill="white"\n                    />\n                    \n                    \x3c!-- Cutout line (black) --\x3e\n                    <line \n                        x1="${0-s}"\n                        y1="${0-a}"\n                        x2="${0+s}"\n                        y2="${0+a}"\n                        stroke="black"\n                        stroke-width="${e}"\n                        stroke-linecap="round"\n                    />\n                </mask>\n            </defs>\n            \n            \x3c!-- Main shape with mask --\x3e\n            <g>\n                <circle \n                    cx="0" \n                    cy="0" \n                    r="${t}"\n                    fill="white"\n                    mask="url(#${r})"\n                />\n            </g>`}}const a=s},1758:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={strands:{min:3,max:12,default:6},amplitude:{min:10,max:100,default:40},frequency:{min:1,max:8,default:1},phase:{min:-180,max:180,default:0},thickness:{min:1,max:10,default:4},spread:{min:10,max:100,default:100}};generateShape(){const t=Math.min(198.4,198.4)/300,e=this.strands,n=this.amplitude*t,i=this.frequency,s=this.phase*(Math.PI/180),a=this.thickness*t,r=this.spread*t;let o=[];for(let t=0;t<e;t++){const h=t*r/(e-1),l=s+.5*t;let d="";for(let t=0;t<=100;t++){const e=t/100,s=0-r/2+h+n*Math.sin(2*Math.PI*i*e+l),a=198.4*e-99.2;d+=0===t?`M ${s} ${a}`:` L ${s} ${a}`}o.push(`<path d="${d}" stroke="white" stroke-width="${a}" fill="none" stroke-linecap="round" stroke-linejoin="round" />`)}return o.join("")}}const a=s},1861:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={circleRadius:{min:10,max:50,default:40},slotLength:{min:20,max:150,default:80},slotTopWidth:{min:5,max:50,default:20},slotBottomWidth:{min:5,max:50,default:30},circleOffset:{min:-30,max:30,default:0},innerCircleRadius:{min:0,max:50,default:25}};generateShape(){const t=[];t.push(`<circle \n            cx="${this.circleOffset}" \n            cy="${-this.slotLength/2}" \n            r="${this.circleRadius}"\n            fill="white"\n        />`),this.innerCircleRadius>0&&t.push(`<circle \n                cx="${this.circleOffset}" \n                cy="${-this.slotLength/2}" \n                r="${this.innerCircleRadius}"\n                fill="black"\n            />`);const e=`\n            M ${-this.slotTopWidth/2+this.circleOffset} ${-this.slotLength/2}\n            L ${-this.slotBottomWidth/2} ${this.slotLength/2}\n            L ${this.slotBottomWidth/2} ${this.slotLength/2}\n            L ${this.slotTopWidth/2+this.circleOffset} ${-this.slotLength/2}\n            Z`;return t.push(`<path \n            d="${e}"\n            fill="white"\n        />`),t.join("")}}const a=s},1915:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={petalSize:{min:50,max:100,default:80},petalWidth:{min:.2,max:1,default:.5},centerGap:{min:0,max:50,default:0},petalCurve:{min:.1,max:2,default:.8}};generateShape(){const t=[];for(let e=0;e<4;e++){const n=e*Math.PI/2,i={x:this.centerGap*Math.cos(n),y:this.centerGap*Math.sin(n)},s={x:this.petalSize*Math.cos(n),y:this.petalSize*Math.sin(n)},a={x:i.x+this.petalSize*this.petalCurve*Math.cos(n+Math.PI/2*this.petalWidth),y:i.y+this.petalSize*this.petalCurve*Math.sin(n+Math.PI/2*this.petalWidth)},r={x:i.x+this.petalSize*this.petalCurve*Math.cos(n-Math.PI/2*this.petalWidth),y:i.y+this.petalSize*this.petalCurve*Math.sin(n-Math.PI/2*this.petalWidth)},o=`\n                M ${i.x} ${i.y}\n                Q ${a.x} ${a.y}, ${s.x} ${s.y}\n                Q ${r.x} ${r.y}, ${i.x} ${i.y}\n            `;t.push(o)}return`\n            <path \n                d="${t.join(" ")}"\n                fill="white"\n            />\n        `}}const a=s},1965:(t,e,n)=>{"use strict";n.d(e,{y:()=>i});class i{static parameters={seed:{min:1,max:1e4,default:42}};constructor(t={}){const e=this.constructor.parameters||{},n={...i.parameters,...e},s=Object.fromEntries(Object.entries(n).map((([t,e])=>[t,e.default])));Object.assign(this,s,t),this.initRNG()}initRNG(){this.rng=this.createSeededRNG(this.seed)}createSeededRNG(t){return{_seed:t,next(){return this._seed=(9301*this._seed+49297)%233280,this._seed/233280}}}random(){return this.rng.next()}resetRNG(t){void 0!==t&&(this.seed=t),this.initRNG()}generateShape(){throw new Error("generateShape() method must be implemented in child class")}}},2241:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={branches:{min:4,max:12,default:6},depth:{min:2,max:7,default:4},spread:{min:15,max:60,default:30},crystalSize:{min:40,max:120,default:80},complexity:{min:0,max:1,default:.5},thickness:{min:1,max:8,default:2}};drawFrostBranch(t,e,n,i,s,a,r){const o=[],h=Math.hypot(t.x-t.x,t.y-t.y),l=r-h,d=Math.min(n,l),c={x:t.x+d*Math.cos(e),y:t.y+d*Math.sin(e)};if(o.push(`M ${t.x},${t.y} L ${c.x},${c.y}`),i>0){const t=d*(.6-.2*a),n=s*Math.PI/180*(1-.1*i);[-n,n].forEach((n=>{const h=this.drawFrostBranch(c,e+n,t,i-1,s,a,r);o.push(...h)}));const h=.15*d*(1+.5*a),l=[];for(let t=0;t<4;t++){const n=e+t*Math.PI/2;l.push(`${c.x+h*Math.cos(n)},${c.y+h*Math.sin(n)}`)}o.push(`M ${l[0]} L ${l[1]} L ${l[2]} L ${l[3]} Z`)}return o}generateShape(){const t={x:0,y:0},e=Math.min(.5*this.crystalSize,90),n=[];for(let i=0;i<this.branches;i++){const s=2*i*Math.PI/this.branches,a=this.drawFrostBranch(t,s,e,this.depth,this.spread,this.complexity,90);n.push(...a)}return`<path \n            d="${n.join(" ")}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n        />`}}const a=s},2283:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={maxRadius:{min:30,max:90,default:80},ringCount:{min:2,max:8,default:4},outerThickness:{min:5,max:40,default:20},innerThickness:{min:3,max:30,default:10},spacing:{min:3,max:40,default:15},centerDotSize:{min:0,max:25,default:8},thicknessPattern:{options:["descending","ascending","alternating","random"],default:"descending"}};validateParameters(){this.ringCount=Math.min(8,Math.max(2,this.ringCount)),this.outerThickness=Math.min(40,Math.max(5,this.outerThickness)),this.innerThickness=Math.min(30,Math.max(3,this.innerThickness));const t=this.maxRadius;this.calculateTotalThickness()+(this.ringCount-1)*this.spacing>t&&(this.ringCount=Math.max(2,Math.floor((t-this.outerThickness)/((this.outerThickness+this.innerThickness)/2+this.spacing))))}calculateTotalThickness(){let t=0;return this.calculateRingThicknesses().forEach((e=>t+=e)),t}generateShape(){const t=[],e=this.calculateRings();for(let n=0;n<e.length;n++)t.push(`<circle \n                cx="0" \n                cy="0" \n                r="${e[n].radius}"\n                stroke="white"\n                stroke-width="${e[n].thickness}"\n                fill="none"\n            />`);return this.centerDotSize>0&&t.push(`<circle \n                cx="0" \n                cy="0" \n                r="${this.centerDotSize}"\n                fill="white"\n                stroke="none"\n            />`),t.join("")}calculateRings(){const t=[],e=this.calculateRingThicknesses();let n=this.maxRadius;for(let i=0;i<this.ringCount;i++){const s=e[i];if(t.push({radius:n,thickness:s}),n=n-s-this.spacing,n<2*this.centerDotSize)break}return t}calculateRingThicknesses(){const t=[];switch(this.thicknessPattern){case"ascending":for(let e=0;e<this.ringCount;e++){const n=e/(this.ringCount-1),i=this.innerThickness+n*(this.outerThickness-this.innerThickness);t.push(i)}break;case"alternating":for(let e=0;e<this.ringCount;e++)t.push(e%2==0?this.outerThickness:this.innerThickness);break;case"random":for(let e=0;e<this.ringCount;e++){const e=Math.random(),n=this.innerThickness+e*(this.outerThickness-this.innerThickness);t.push(n)}break;default:for(let e=0;e<this.ringCount;e++){const n=e/(this.ringCount-1),i=this.outerThickness-n*(this.outerThickness-this.innerThickness);t.push(i)}}return t}}const a=s},2482:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={centerSize:{min:25,max:50,default:40},sideRadius:{min:.5,max:1.5,default:1},overlap:{min:-50,max:50,default:0},thickness:{min:10,max:100,default:50},balance:{min:0,max:100,default:100}};calculateDynamicSizes(t,e,n){const i=e/100,s=.8+.4*i;return{center:t*s,side:t*(1-.3*i),inner:t*s*(1-n/100)}}createRing(t,e,n,i){return i<=0?`<circle \n                cx="${t}" \n                cy="${e}" \n                r="${n}"\n                fill="white"\n            />`:`<path\n            d="\n                M ${t-n} ${e}\n                A ${n} ${n} 0 1 1 ${t+n} ${e}\n                A ${n} ${n} 0 1 1 ${t-n} ${e}\n                M ${t-i} ${e}\n                A ${i} ${i} 0 1 0 ${t+i} ${e}\n                A ${i} ${i} 0 1 0 ${t-i} ${e}\n            "\n            fill="white"\n        />`}createSemiRing(t,e,n,i,s,a){const r=t+n*Math.cos(s),o=e+n*Math.sin(s),h=t+n*Math.cos(a),l=e+n*Math.sin(a);let d=`M ${r} ${o}`;const c=Math.abs(a-s)>Math.PI?1:0;return d+=` A ${n} ${n} 0 ${c} 1 ${h} ${l}`,i>0?(d+=` L ${t+i*Math.cos(a)} ${e+i*Math.sin(a)}`,d+=` A ${i} ${i} 0 ${c} 0 ${t+i*Math.cos(s)} ${e+i*Math.sin(s)}`):d+=` L ${t} ${e}`,d+=" Z",`<path d="${d}" fill="white"/>`}generateShape(){const t=1.5*this.centerSize,e=1.5*this.overlap,n=this.calculateDynamicSizes(t,this.balance,this.thickness),i=n.center,s=n.inner,a=n.side*this.sideRadius,r=a*(1-this.thickness/100),o=Math.max(-i/4,Math.min(i/2,e)),h=[];h.push(this.createRing(0,0,i/2,s/2));const l=-i/2-o;h.push(this.createSemiRing(l,0,a,r,Math.PI/2,-Math.PI/2));const d=i/2+o;return h.push(this.createSemiRing(d,0,a,r,-Math.PI/2,Math.PI/2)),h.join("\n")}}const a=s},2493:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:50,max:100,default:120},innerRadius:{min:10,max:100,default:40},lines:{min:30,max:300,default:100},edges:{min:4,max:16,default:10},growth:{min:3,max:6,default:5},amplitude:{min:0,max:5,default:5},frequency:{min:.5,max:4,default:6},thickness:{min:1,max:3,default:1},skew:{min:-90,max:90,default:0}};toRad(t){return t*(Math.PI/180)}divide(t){const e=360/t;return Array.from({length:t},((t,n)=>n*e))}randomDouble(t){const e=4294967295;let n=123456789+t&e,i=987654321-t&e;return()=>(i=36969*(65535&i)+(i>>16)&e,n=18e3*(65535&n)+(n>>16)&e,((i<<16)+(65535&n)|0)/4294967295)}magicPoint(t,e,n){let i=e+t*(n-e);if(this.amplitude>0){const t=n-e,s=Math.min(this.amplitude,4.5);i+=Math.sin(this.currentAngle*this.frequency)*s*t*.4+Math.sin(this.currentAngle*this.frequency*2.7)*s*t*.15+Math.sin(this.currentAngle*this.frequency*.5)*s*t*.1}return i>n?i=n:i<e&&(i=e),i}point(t,e,n,i){const s=this.toRad(this.skew),a=this.toRad(i)+s;return{x:t+n*Math.cos(a),y:e+n*Math.sin(a)}}createPoints(t,e,n,i){const s=t/2,a=e*(s/10),r=this.divide(n),o=this.randomDouble(i||this.seed);return r.map((t=>{this.currentAngle=this.toRad(t);const e=this.magicPoint(o(),a,s);return this.point(0,0,e,t)}))}generateBlobPath(){const t=this.createPoints(2*this.radius,this.growth,this.edges,this.seed);if(t.length<3)return`M0,${-this.radius} A${this.radius},${this.radius} 0 1,1 0,${this.radius} A${this.radius},${this.radius} 0 1,1 0,${-this.radius}`;try{const e=[],n={x:(t[0].x+t[1].x)/2,y:(t[0].y+t[1].y)/2};e.push(`M${n.x.toFixed(2)},${n.y.toFixed(2)}`);for(let n=0;n<t.length;n++){const i=t[(n+1)%t.length],s=t[(n+2)%t.length];if(isNaN(i.x)||isNaN(i.y)||isNaN(s.x)||isNaN(s.y))continue;const a={x:(i.x+s.x)/2,y:(i.y+s.y)/2};e.push(`Q${i.x.toFixed(2)},${i.y.toFixed(2)},${a.x.toFixed(2)},${a.y.toFixed(2)}`)}return e.push("Z"),e.join("")}catch(t){return`M0,${-this.radius} A${this.radius},${this.radius} 0 1,1 0,${this.radius} A${this.radius},${this.radius} 0 1,1 0,${-this.radius}`}}generateShape(){const t=`outerClip_${Math.floor(1e6*this.random())}`,e=`innerClip_${Math.floor(1e6*this.random())}`,n=this.generateBlobPath(),i=[];i.push("<defs>"),i.push(`<clipPath id="${t}">`),i.push(`<path d="${n}" />`),i.push("</clipPath>"),i.push(`<clipPath id="${e}">`),i.push(`<path d="${n}" />`),i.push(`<circle cx="0" cy="0" r="${this.innerRadius}" fill="black" />`),i.push("</clipPath>"),i.push("</defs>"),i.push(`<g clip-path="url(#${e})">`);const s=2*Math.PI/this.lines,a=this.skew*Math.PI/180;for(let t=0;t<this.lines;t++){const e=t*s+a,n=Math.cos(e)*this.radius*2,r=Math.sin(e)*this.radius*2;i.push(`<line \n                x1="0" \n                y1="0" \n                x2="${n}" \n                y2="${r}" \n                stroke="white" \n                stroke-width="${this.thickness}" \n            />`)}return i.push("</g>"),i.join("")}}const a=s},2534:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={nodes:{min:4,max:12,default:6},radius:{min:40,max:80,default:80},branchLength:{min:10,max:80,default:40},branchCount:{min:4,max:12,default:6},thickness:{min:2,max:10,default:4},innerScale:{min:.4,max:.8,default:.5}};point(t,e,n,i){return{x:t+n*Math.cos(i),y:e+n*Math.sin(i)}}generateShape(){const t=Math.round(this.nodes),e=Math.round(this.branchCount),n=.8*this.thickness,i=this.innerScale,s=.8*this.radius,a=.8*this.branchLength,r=200-a,o=Math.min(s,r),h=Math.min(a,100),l=[];return Array.from({length:t},((e,n)=>2*n*Math.PI/t)).forEach((t=>{const n=this.point(0,0,o,t),s=2*Math.PI/e;for(let a=0;a<e;a++){const e=t+s*a,r=this.point(n.x,n.y,h,e);if(i>0){const t=this.point(n.x,n.y,h*i,e+.3*s),a=this.point(n.x,n.y,h*i,e-.3*s);l.push(`M ${n.x} ${n.y}\n                        L ${t.x} ${t.y}\n                        L ${r.x} ${r.y}\n                        L ${a.x} ${a.y}\n                        Z`)}else l.push(`M ${n.x} ${n.y}\n                        L ${r.x} ${r.y}`)}})),`<path \n            d="${l.join(" ")}"\n            stroke="white"\n            stroke-width="${n}"\n            fill="none"\n            stroke-linejoin="round"\n            stroke-linecap="round"\n        />`}}const a=s},2577:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={petals:{min:5,max:24,default:12},layers:{min:2,max:6,default:4},innerRadius:{min:10,max:80,default:30},outerRadius:{min:50,max:150,default:100}};generatePetalPath(t,e,n,i,s,a){const r=(s+a)/2,o=0*(i-n),h=t+n*Math.cos(s),l=e+n*Math.sin(s),d=t+i*Math.cos(r),c=e+i*Math.sin(r),u=t+n*Math.cos(a),m=e+n*Math.sin(a);return`M ${h} ${l}\n                Q ${h+o*Math.cos(r)} ${l+o*Math.sin(r)} ${d} ${c}\n                Q ${d-o*Math.cos(r)} ${c-o*Math.sin(r)} ${u} ${m}`}generateShape(){const t=[],e=Math.PI/180;this.petals=Math.round(this.petals);for(let n=0;n<this.layers;n++){const i=this.innerRadius+n*(this.outerRadius-this.innerRadius)/this.layers,s=i+(this.outerRadius-this.innerRadius)/this.layers,a=2*Math.PI/this.petals,r=e+n*Math.PI/this.petals;for(let e=0;e<this.petals;e++){const n=e*a+r,o=n+a,h=this.generatePetalPath(0,0,i,s,n,o);t.push(`<path d="${h}" fill="white"/>`)}}return t.join("")}}const a=s},2600:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:3,max:12,default:6},lineWidth:{min:1,max:10,default:4}};generateMaze(){this.resetRNG();const t=[];for(let e=0;e<this.gridSize;e++){t[e]=[];for(let n=0;n<this.gridSize;n++)t[e][n]={visited:!1,walls:{top:!0,right:!0,bottom:!0,left:!0}}}const e=[];let n=0,i=0;for(t[n][i].visited=!0;;){const s=[];if(n>0&&!t[n-1][i].visited&&s.push({y:n-1,x:i,dir:"top"}),i<this.gridSize-1&&!t[n][i+1].visited&&s.push({y:n,x:i+1,dir:"right"}),n<this.gridSize-1&&!t[n+1][i].visited&&s.push({y:n+1,x:i,dir:"bottom"}),i>0&&!t[n][i-1].visited&&s.push({y:n,x:i-1,dir:"left"}),s.length>0){const a=s[Math.floor(this.random()*s.length)];"top"===a.dir?(t[n][i].walls.top=!1,t[a.y][a.x].walls.bottom=!1):"right"===a.dir?(t[n][i].walls.right=!1,t[a.y][a.x].walls.left=!1):"bottom"===a.dir?(t[n][i].walls.bottom=!1,t[a.y][a.x].walls.top=!1):"left"===a.dir&&(t[n][i].walls.left=!1,t[a.y][a.x].walls.right=!1),e.push({y:n,x:i}),n=a.y,i=a.x,t[n][i].visited=!0}else{if(!(e.length>0))break;{const t=e.pop();n=t.y,i=t.x}}}return t[0][0].walls.top=!1,t[this.gridSize-1][this.gridSize-1].walls.bottom=!1,t}generateShape(){const t=this.generateMaze(),e=[],n=160/this.gridSize;for(let i=0;i<this.gridSize;i++)for(let s=0;s<this.gridSize;s++){const a=t[i][s],r=s*n-80,o=i*n-80,h=r+n,l=o+n;a.walls.top&&e.push(`<line x1="${r}" y1="${o}" x2="${h}" y2="${o}" stroke="white" stroke-width="${this.lineWidth}" stroke-linecap="square" />`),a.walls.right&&e.push(`<line x1="${h}" y1="${o}" x2="${h}" y2="${l}" stroke="white" stroke-width="${this.lineWidth}" stroke-linecap="square" />`),a.walls.bottom&&e.push(`<line x1="${r}" y1="${l}" x2="${h}" y2="${l}" stroke="white" stroke-width="${this.lineWidth}" stroke-linecap="square" />`),a.walls.left&&e.push(`<line x1="${r}" y1="${o}" x2="${r}" y2="${l}" stroke="white" stroke-width="${this.lineWidth}" stroke-linecap="square" />`)}return e.join("")}}const a=s},2665:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:25,max:100,default:80},height:{min:50,max:200,default:150},cutDepth:{min:20,max:70,default:40},cutStart:{min:50,max:100,default:80},rounding:{min:0,max:100,default:50}};generateShape(){this.width=this.width/100,this.height=this.height/100,this.cutDepth=this.cutDepth/100,this.cutStart=this.cutStart/100,this.rounding=this.rounding/100;const t=50*this.height,e=-t+100*this.height*this.cutStart,n=50*this.width,i=[{x:-n,y:-t},{x:n,y:-t},{x:n,y:t},{x:n,y:e},{x:0,y:t-100*this.height*this.cutDepth},{x:-n,y:e},{x:-n,y:t}];if(0===this.rounding)return`<path d="${i.map(((t,e)=>(0===e?"M":"L")+` ${t.x} ${t.y}`)).join("")} Z" fill="white" />`;const s=.2*Math.min(2*n,Math.abs(i[0].y-i[6].y))*this.rounding;let a=`M ${i[0].x} ${i[0].y}`;for(let t=0;t<i.length;t++){const n=i[t],r=i[(t+1)%i.length],o=i[0===t?i.length-1:t-1];if(0===n.x||n.y===e&&0===r.x||n.y===e&&0===o.x){a+=` L ${n.x} ${n.y}`;continue}const h={x:o.x-n.x,y:o.y-n.y},l={x:r.x-n.x,y:r.y-n.y},d=Math.sqrt(h.x*h.x+h.y*h.y),c=Math.sqrt(l.x*l.x+l.y*l.y),u={x:h.x/d,y:h.y/d},m={x:l.x/c,y:l.y/c},p={x:n.x+u.x*s,y:n.y+u.y*s},f={x:n.x+m.x*s,y:n.y+m.y*s};a+=` L ${p.x} ${p.y}`,a+=` Q ${n.x} ${n.y} ${f.x} ${f.y}`}return`<path d="${a} Z" fill="white" />`}}const a=s},2672:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={edges:{min:4,max:16,default:10},growth:{min:3,max:6,default:5},skew:{min:-90,max:90,default:0},amplitude:{min:0,max:5,default:5},frequency:{min:.5,max:4,default:6}};toRad(t){return t*(Math.PI/180)}divide(t){const e=360/t;return Array.from({length:t},((t,n)=>n*e))}randomDouble(t){const e=4294967295;let n=123456789+t&e,i=987654321-t&e;return()=>(i=36969*(65535&i)+(i>>16)&e,n=18e3*(65535&n)+(n>>16)&e,((i<<16)+(65535&n)|0)/4294967295)}magicPoint(t,e,n){let i=e+t*(n-e);if(this.amplitude>0){const t=n-e,s=Math.min(this.amplitude,4.5);i+=Math.sin(this.currentAngle*this.frequency)*s*t*.4+Math.sin(this.currentAngle*this.frequency*2.7)*s*t*.15+Math.sin(this.currentAngle*this.frequency*.5)*s*t*.1}return i>n?i=n:i<e&&(i=e),i}point(t,e,n,i){const s=this.toRad(this.skew),a=this.toRad(i)+s;return{x:t+n*Math.cos(a),y:e+n*Math.sin(a)}}createPoints(t,e,n,i){const s=t/2,a=e*(s/10),r=this.divide(n),o=this.randomDouble(i);return r.map((t=>{this.currentAngle=this.toRad(t);const e=this.magicPoint(o(),a,s);return this.point(0,0,e,t)}))}generateShape(){const t=this.createPoints(250,this.growth,this.edges,this.seed);if(t.length<3)return'<circle cx="0" cy="0" r="100" fill="white" />';try{const e=[],n={x:(t[0].x+t[1].x)/2,y:(t[0].y+t[1].y)/2};e.push(`M${n.x.toFixed(2)},${n.y.toFixed(2)}`);for(let n=0;n<t.length;n++){const i=t[(n+1)%t.length],s=t[(n+2)%t.length];if(isNaN(i.x)||isNaN(i.y)||isNaN(s.x)||isNaN(s.y))continue;const a={x:(i.x+s.x)/2,y:(i.y+s.y)/2};e.push(`Q${i.x.toFixed(2)},${i.y.toFixed(2)},${a.x.toFixed(2)},${a.y.toFixed(2)}`)}return e.push("Z"),`<path \n                d="${e.join("")}"\n                fill="white"\n            />`}catch(t){return'<circle cx="0" cy="0" r="100" fill="white" />'}}}const a=s},2713:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:20,max:100,default:80},points:{min:6,max:24,default:12},thickness:{min:1,max:10,default:4},lengthVariation:{min:.1,max:.9,default:.3},rotation:{min:0,max:360,default:0}};generateShape(){this.resetRNG();const t=[],e=this.rotation*Math.PI/180,n=2*Math.PI/this.points;for(let i=0;i<this.points;i++){const s=i*n+e,a=1+(2*this.random()-1)*this.lengthVariation,r=this.radius*a,o=Math.cos(s)*(.05*this.radius),h=Math.sin(s)*(.05*this.radius),l=Math.cos(s)*r,d=Math.sin(s)*r;t.push(`<line \n                x1="${o}" \n                y1="${h}" \n                x2="${l}" \n                y2="${d}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="round"\n            />`)}return t.join("")}}const a=s},2714:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={nucleusRadius:{min:5,max:30,default:18},orbitCount:{min:2,max:4,default:3},orbitRadius:{min:40,max:120,default:80},orbitEccentricity:{min:.2,max:.6,default:.4},strokeWidth:{min:1,max:10,default:4},symmetryAngle:{min:15,max:60,default:40}};generateShape(){this.orbitCount=Math.round(this.orbitCount);const t=[];t.push(`<circle\n      cx="0"\n      cy="0"\n      r="${this.nucleusRadius}"\n      fill="white"\n    />`);const e=180/this.orbitCount;for(let n=0;n<this.orbitCount;n++){const i=n*e;t.push(`<ellipse\n        cx="0"\n        cy="0"\n        rx="${this.orbitRadius}"\n        ry="${this.orbitRadius*this.orbitEccentricity}"\n        transform="rotate(${i})"\n        fill="none"\n        stroke="white"\n        stroke-width="${this.strokeWidth}"\n      />`)}return t.join("")}}const a=s},2736:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:20,max:150,default:80},thickness:{min:1,max:100,default:18},rotation:{min:-360,max:360,default:0},offset:{min:0,max:100,default:57}};generateShape(){const t=this.rotation*Math.PI/180,e=this.offset/100*this.radius*Math.cos(t),n=this.offset/100*this.radius*Math.sin(t),i=this.radius-this.thickness,s=`crescent-mask-${Math.random().toString(36).substr(2,9)}`;return`\n            <defs>\n                <mask id="${s}">\n                    <circle \n                        cx="0" \n                        cy="0" \n                        r="${this.radius}"\n                        fill="white"\n                    />\n                    <circle \n                        cx="${e}" \n                        cy="${n}" \n                        r="${i}"\n                        fill="black"\n                    />\n                </mask>\n            </defs>\n            <rect \n                x="-200" \n                y="-200" \n                width="400" \n                height="400"\n                fill="white"\n                mask="url(#${s})"\n            />\n        `}}const a=s},2765:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:100,max:200,default:200},rows:{min:3,max:12,default:6},columns:{min:3,max:12,default:6},dashWidth:{min:10,max:40,default:25},dashHeight:{min:3,max:12,default:6},spacing:{min:10,max:40,default:25},cornerRadius:{min:0,max:10,default:0}};generateShape(){const t=[],e=-(this.columns-1)*this.spacing/2,n=-(this.rows-1)*this.spacing/2;for(let i=0;i<this.rows;i++)for(let s=0;s<this.columns;s++){const a=e+s*this.spacing,r=n+i*this.spacing;i%2==0&&s%2==1||i%2==1&&s%2==0?t.push(`<rect \n            x="${a-this.dashHeight/2}" \n            y="${r-this.dashWidth/2}" \n            width="${this.dashHeight}" \n            height="${this.dashWidth}" \n            rx="${this.cornerRadius}"\n            ry="${this.cornerRadius}"\n            fill="white"\n          />`):t.push(`<rect \n            x="${a-this.dashWidth/2}" \n            y="${r-this.dashHeight/2}" \n            width="${this.dashWidth}" \n            height="${this.dashHeight}" \n            rx="${this.cornerRadius}"\n            ry="${this.cornerRadius}"\n            fill="white"\n          />`)}return t.join("")}}const a=s},2781:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={nodeSize:{min:5,max:40,default:15},nodes:{min:4,max:12,default:6},spread:{min:20,max:120,default:80},rotation:{min:-180,max:180,default:0},centerSize:{min:5,max:30,default:10}};generateShape(){const t=[],e=Math.round(this.nodes),n=this.rotation*Math.PI/180;for(let i=0;i<e;i++){const s=2*i*Math.PI/e+n,a=Math.cos(s)*this.spread,r=Math.sin(s)*this.spread;t.push({x:a,y:r})}const i=[];t.forEach((t=>{i.push(`<line \n                x1="0" \n                y1="0" \n                x2="${t.x}" \n                y2="${t.y}"\n                stroke="white"\n                stroke-width="${this.nodeSize/3}"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n            />`)}));for(let e=0;e<t.length;e++){const n=t[e],s=t[(e+1)%t.length];i.push(`<line \n                x1="${n.x}" \n                y1="${n.y}" \n                x2="${s.x}" \n                y2="${s.y}"\n                stroke="white"\n                stroke-width="${this.nodeSize/3}"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n            />`)}return t.forEach((t=>{i.push(`<circle \n                cx="${t.x}" \n                cy="${t.y}" \n                r="${this.nodeSize/1.5}"\n                fill="white"\n            />`)})),i.push(`<circle \n            cx="0" \n            cy="0" \n            r="${this.centerSize/2}"\n            stroke="white"\n            stroke-width="${this.nodeSize/3}"\n            fill="none"\n        />`),i.join("")}}const a=s},2861:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={rows:{min:1,max:6,default:4},columns:{min:2,max:8,default:6},segmentWidth:{min:20,max:60,default:25},thickness:{min:4,max:20,default:10},rowSpacing:{min:20,max:80,default:35}};generateShape(){const t=[],e=this.segmentWidth,n=-this.columns*this.segmentWidth/2,i=-(this.rows-1)*this.rowSpacing/2;for(let s=0;s<this.rows;s++){const a=i+s*this.rowSpacing,r=[];for(let t=0;t<=this.columns;t++){const i=n+t*this.segmentWidth,s=t%2==0?0:e;r.push(`${i},${a+s}`)}t.push(`<polyline \n                points="${r.join(" ")}"\n                fill="none"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="square"\n                stroke-linejoin="miter"\n            />`)}return t.join("")}}const a=s},2891:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={frequency:{min:.5,max:4,default:1},amplitude:{min:0,max:100,default:40},phase:{min:-180,max:180,default:0},chaos:{min:0,max:1,default:.2}};generateShape(){const t=[],e=this.phase*Math.PI/180;for(let n=0;n<=100;n++){const i=n/100,s=i*Math.PI*2*this.frequency+e,a=200*i-100,r=Math.sin(s)*this.amplitude+this.chaos*(.3*Math.sin(i*Math.PI*7.3)+.2*Math.sin(i*Math.PI*15.7)+.1*Math.sin(i*Math.PI*25.1))*this.amplitude;t.push([a,r])}let n="M -100 100";for(const[e,i]of t)n+=` L ${e} ${i}`;return n+=" L 100 100",n+=" Z",`<path \n            d="${n}"\n            fill="white"\n        />`}}const a=s},2933:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:100,max:200,default:150},count:{min:1,max:6,default:2},spacing:{min:10,max:50,default:25}};generateShape(){let t="";const e=Math.cos(Math.PI/4);for(let n=0;n<this.count;n++){let i=this.size-n*this.spacing;if(i<=0)break;n%2!=0&&(i*=e);const s=45*n;t+=this.getSquarePath(i,s)}return`<path \n            d="${t}"\n            fill="white"\n            fill-rule="evenodd"\n        />`}getSquarePath(t,e){const n=t/2,i=e*Math.PI/180,s=Math.cos(i),a=Math.sin(i),r=[[-n,-n],[n,-n],[n,n],[-n,n]].map((([t,e])=>[t*s-e*a,t*a+e*s])),[o,h,l,d]=r;return` M ${o[0]},${o[1]} L ${h[0]},${h[1]} L ${l[0]},${l[1]} L ${d[0]},${d[1]} Z`}}const a=s},2964:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={mainSize:{min:40,max:120,default:120},endSize:{min:20,max:100,default:55},spacing:{min:-20,max:20,default:-12},overlap:{min:0,max:40,default:25}};createCircle(t,e,n){return`<circle \n            cx="${t}" \n            cy="${e}" \n            r="${n/2}"\n            fill="white"\n        />`}createStack(t,e,n,i){const s=[];return s.push(this.createCircle(t,0,e)),s.push(this.createCircle(t,-(e/2+n/2+i),n)),s.push(this.createCircle(t,e/2+n/2+i,n)),s}generateShape(){const t=.8,e=this.mainSize*t,n=this.endSize*t,i=this.spacing*t,s=this.overlap*t,a=[],r=-e/2+s/2;a.push(...this.createStack(r,e,n,i));const o=e/2-s/2;return a.push(...this.createStack(o,e,n,i)),a.join("\n")}}const a=s},3040:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={innerRadius:{min:0,max:100,default:39},outerRadius:{min:50,max:150,default:77},count:{min:3,max:16,default:8},width:{min:10,max:60,default:30},sharpness:{min:10,max:90,default:50},skew:{min:-90,max:90,default:0},mode:{options:["fill","stroke"],default:"fill"},thickness:{min:1,max:10,default:2}};generateTriangle(t){const e=t+this.skew*Math.PI/180,n=this.innerRadius*Math.cos(t),i=this.innerRadius*Math.sin(t),s=this.width/this.outerRadius*(this.sharpness/100);return`M ${n},${i} \n                L ${this.outerRadius*Math.cos(e-s)},${this.outerRadius*Math.sin(e-s)} \n                L ${this.outerRadius*Math.cos(e+s)},${this.outerRadius*Math.sin(e+s)} Z`}generateShape(){const t=[],e=2*Math.PI/this.count;for(let n=0;n<this.count;n++){const i=n*e;t.push(`<path \n                d="${this.generateTriangle(i)}"\n                fill="${"fill"===this.mode?"white":"none"}"\n                stroke="${"stroke"===this.mode?"white":"none"}"\n                stroke-width="${"stroke"===this.mode?this.thickness:0}"\n                stroke-linejoin="miter"\n            />`)}return`<g>${t.join("")}</g>`}}const a=s},3123:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={growthRate:{min:1.1,max:2,default:1.2},density:{min:8,max:32,default:16},dotSize:{min:4,max:20,default:6},rotation:{min:-180,max:180,default:0}};generateShape(){const t=[],e=2*Math.PI/this.density,n=this.rotation*Math.PI/180;let i=2*this.dotSize,s=0,a=0;for(;i<100&&a<200;){for(let a=0;a<this.density;a++){const r=s+a*e+n,o=i*Math.cos(r),h=i*Math.sin(r);t.push(`<circle \n                    cx="${o}" \n                    cy="${h}" \n                    r="${this.dotSize/2}"\n                    fill="white"\n                />`)}i*=this.growthRate,s+=e/2,a++}return t.join("")}}const a=s},3128:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={segments:{min:3,max:32,default:8},radius:{min:20,max:150,default:100},thickness:{min:1,max:10,default:2},rotation:{min:-180,max:180,default:0}};generateShape(){const t=[],e=2*Math.PI/this.segments,n=this.rotation*Math.PI/180;t.push(`<circle \n            cx="0" \n            cy="0" \n            r="${this.radius}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`);for(let i=0;i<this.segments;i++){const s=i*e+n,a=this.radius*Math.cos(s),r=this.radius*Math.sin(s);t.push(`<line \n                x1="0" \n                y1="0" \n                x2="${a}" \n                y2="${r}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="butt"\n            />`)}return t.join("")}}const a=s},3186:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={innerRadius:{min:0,max:100,default:25},ringSpacing:{min:10,max:100,default:20},ringCount:{min:2,max:6,default:4},lineCount:{min:3,max:48,default:40},thickness:{min:1,max:10,default:5},lineCap:{options:["butt","round"],default:"butt"}};generateShape(){const t=[],e=2*Math.PI/this.lineCount,n=[];for(let t=0;t<this.ringCount;t++)n.push(this.innerRadius+t*this.ringSpacing);for(let i=0;i<this.ringCount-1;i++){const s=n[i],a=n[i+1];for(let n=0;n<this.lineCount;n++){const r=n*e;if(n%2==i%2){const e=s*Math.cos(r),n=s*Math.sin(r),i=a*Math.cos(r),o=a*Math.sin(r);t.push(`<line \n                        x1="${e}" \n                        y1="${n}" \n                        x2="${i}" \n                        y2="${o}"\n                        stroke="white"\n                        stroke-width="${this.thickness}"\n                        stroke-linecap="${this.lineCap}"\n                    />`)}}}return t.join("")}}const a=s},3249:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={waistWidth:{min:.1,max:.8,default:.3},topWidth:{min:.3,max:1,default:.8},curvature:{min:.1,max:2,default:.8},verticalStretch:{min:.5,max:1.2,default:1}};generateShape(){const t=160*this.verticalStretch,e=0-t/2,n=0+t/2,i=160*this.waistWidth,s=160*this.topWidth,a=t/4*this.curvature;return`<path\n            d="${[`M ${0-s/2} ${e}`,`C ${0-s/2} ${e+a}, \n               ${0-i/2} ${0-a}, \n               ${0-i/2} 0`,`C ${0-i/2} ${0+a},\n               ${0-s/2} ${n-a},\n               ${0-s/2} ${n}`,`L ${0+s/2} ${n}`,`C ${0+s/2} ${n-a},\n               ${0+i/2} ${0+a},\n               ${0+i/2} 0`,`C ${0+i/2} ${0-a},\n               ${0+s/2} ${e+a},\n               ${0+s/2} ${e}`,"Z"].join(" ")}"\n            fill="white"\n        />`}}const a=s},3385:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={wavelength:{min:50,max:100,default:100},amplitude:{min:10,max:100,default:80},segments:{min:1,max:5,default:2},depth:{min:10,max:100,default:60},rotationX:{min:-180,max:180,default:-45},rotationY:{min:-180,max:180,default:0},rotationZ:{min:-180,max:180,default:-90}};generateShape(){const t=this.rotationX*Math.PI/180,e=this.rotationY*Math.PI/180,n=this.rotationZ*Math.PI/180,i=this.generateExtrudedWave().map((i=>this.rotate3D(i.x,i.y,i.z,t,e,n)));return`<path d="${this.pointsToSvgPath(i)}" fill="white" stroke="none" />`}generateExtrudedWave(){const t=[],e=this.wavelength*this.segments,n=-e/2,i=e/2,s=Math.max(100,50*this.segments);for(let e=0;e<s;e++){const a=e/(s-1),r=n+a*(i-n),o=Math.sin(a*Math.PI*this.segments)*this.amplitude,h=this.depth/2;t.push({x:r,y:o,z:h})}const a=t[t.length-1],r={x:a.x,y:a.y,z:-this.depth/2};t.push(r);for(let e=s-1;e>=0;e--){const a=e/(s-1),r=n+a*(i-n),o=Math.sin(a*Math.PI*this.segments)*this.amplitude,h=-this.depth/2;t.push({x:r,y:o,z:h})}const o=t[t.length-1],h={x:o.x,y:o.y,z:this.depth/2};return t.push(h),t}pointsToSvgPath(t){if(t.length<3)return"";let e=`M ${t[0].x},${t[0].y}`;for(let n=1;n<t.length;n++)e+=` L ${t[n].x},${t[n].y}`;return e+=" Z",e}rotate3D(t,e,n,i,s,a){const r=t*Math.cos(a)-e*Math.sin(a),o=t*Math.sin(a)+e*Math.cos(a),h=o*Math.cos(i)-n*Math.sin(i),l=o*Math.sin(i)+n*Math.cos(i);return{x:r*Math.cos(s)+l*Math.sin(s),y:h,z:-r*Math.sin(s)+l*Math.cos(s)}}}const a=s},3424:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:10,max:100,default:100},layers:{min:2,max:20,default:5},spacing:{min:1,max:20,default:10},thickness:{min:.5,max:5,default:3},rotationX:{min:-60,max:60,default:45},rotationY:{min:-60,max:60,default:45},rotationZ:{min:-60,max:60,default:0}};generateShape(){const t=[],e=this.size,n=this.rotationX*Math.PI/180,i=this.rotationY*Math.PI/180,s=this.rotationZ*Math.PI/180,a=[[0,1],[1,2],[2,3],[3,0],[4,5],[5,6],[6,7],[7,4],[0,4],[1,5],[2,6],[3,7]];t.push(`<g stroke="white" stroke-width="${this.thickness}" fill="none" stroke-linejoin="round" stroke-linecap="round">`);for(let r=0;r<this.layers;r++){const o=e-r*this.spacing*2;if(o<=0)continue;const h=o/2,l=[[-h,-h,-h],[h,-h,-h],[h,h,-h],[-h,h,-h],[-h,-h,h],[h,-h,h],[h,h,h],[-h,h,h]].map((([t,e,a])=>{let r=t,o=e*Math.cos(n)-a*Math.sin(n),h=e*Math.sin(n)+a*Math.cos(n),l=r*Math.cos(i)+h*Math.sin(i),d=o,c=-r*Math.sin(i)+h*Math.cos(i),u=l*Math.cos(s)-d*Math.sin(s),m=l*Math.sin(s)+d*Math.cos(s),p=c;return{x:Math.round(1e3*u)/1e3,y:Math.round(1e3*m)/1e3,z:Math.round(1e3*p)/1e3}}));let d=[...[...a].sort(((t,e)=>{const n=(l[t[0]].z+l[t[1]].z)/2;return(l[e[0]].z+l[e[1]].z)/2-n}))];const c=[];for(;d.length>0;){const t=[d[0]];d.splice(0,1);let e=!0;for(;e;){e=!1;const n=t[t.length-1][1];for(let i=0;i<d.length;i++){if(d[i][0]===n){t.push(d[i]),d.splice(i,1),e=!0;break}if(d[i][1]===n){t.push([d[i][1],d[i][0]]),d.splice(i,1),e=!0;break}}}c.push(t)}for(const e of c){const n=e.map(((t,e)=>{const n=l[t[0]],i=l[t[1]];return`${0===e?"M":"L"}${n.x},${n.y} L${i.x},${i.y}`})).join(" ");t.push(`<path d="${n}" />`)}}return t.push("</g>"),t.join("")}}const a=s},3485:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={innerRatio:{min:.3,max:.9,default:.65},cornerSize:{min:5,max:100,default:35}};generateShape(){const t=150,e=t*this.innerRatio,n=e/2,i=Math.min(this.cornerSize,75),s=i*(e/t);return`<path \n            d="${this.createOctagonPath(-75,-75,t,t,i)} ${this.createOctagonPath(-n,-n,e,e,s,!0)}"\n            fill="white"\n            fill-rule="evenodd"\n        />`}createOctagonPath(t,e,n,i,s,a=!1){const r=[[t+s,e],[t+n-s,e],[t+n,e+s],[t+n,e+i-s],[t+n-s,e+i],[t+s,e+i],[t,e+i-s],[t,e+s]];return a&&r.reverse(),r.map(((t,e)=>0===e?`M ${t[0]} ${t[1]}`:`L ${t[0]} ${t[1]}`)).join(" ")+" Z"}}const a=s},3499:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:100,max:200,default:200},height:{min:50,max:150,default:90},spacing:{min:-50,max:50,default:5}};createPillPath(t){const e={x:0,y:t},n=e.x-this.width/2,i=e.y,s=e.x+this.width/2,a=e.y;return`M ${n},${i}\n                C ${e.x-this.width/4},${e.y-this.height/2} \n                  ${e.x+this.width/4},${e.y-this.height/2} \n                  ${s},${a}\n                C ${e.x+this.width/4},${e.y+this.height/2} \n                  ${e.x-this.width/4},${e.y+this.height/2} \n                  ${n},${i}`}generateShape(){const t=-this.spacing/2-this.height/2,e=this.spacing/2+this.height/2;return`<path \n            d="${this.createPillPath(t)} ${this.createPillPath(e)}"\n            fill="white"\n        />`}}const a=s},3509:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={outerRadius:{min:50,max:100,default:80},innerRadius:{min:10,max:50,default:30},modulation:{min:0,max:20,default:0},thickness:{min:1,max:10,default:4},offset:{min:0,max:360,default:45},petals:{min:1,max:2,default:1}};generateShape(){const t=[],e=parseInt(this.petals),n=this.offset*Math.PI/180;for(let i=0;i<2*Math.PI;i+=Math.PI/e){let e="",s=null;for(let t=0;t<2*Math.PI;t+=2*Math.PI/200){const a=n,r=Math.sin(t-a)*Math.cos(t+i-a)*this.outerRadius+(this.innerRadius+this.modulation*Math.sin(t+i+a))*Math.sin(t+i+a),o=Math.cos(t-a)*Math.cos(t+i-a)*this.outerRadius+(this.innerRadius+this.modulation*Math.sin(t+i+a))*Math.cos(t+i+a);0===t?(e=`M ${r},${o}`,s={x:r,y:o}):e+=` L ${r},${o}`}t.push(`<path \n                d="${e}" \n                fill="none"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n            />`)}return t.join("")}}const a=s},3590:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={segmentCount:{min:3,max:24,default:12},innerRadius:{min:2,max:100,default:30},outerRadius:{min:50,max:150,default:90},bladeWidth:{min:1,max:90,default:45},twist:{min:-90,max:90,default:0}};generateShape(){const t=[],e=2*Math.PI/this.segmentCount,n=this.bladeWidth*Math.PI/180,i=this.twist*Math.PI/180;for(let s=0;s<this.segmentCount;s++){const a=s*e,r=a+i,o=a-n/2,h=a+n/2,l=this.innerRadius*Math.cos(o),d=this.innerRadius*Math.sin(o),c=this.innerRadius*Math.cos(h),u=this.innerRadius*Math.sin(h),m=`\n                M ${l} ${d}\n                L ${this.outerRadius*Math.cos(r)} ${this.outerRadius*Math.sin(r)}\n                L ${c} ${u}\n                A ${this.innerRadius} ${this.innerRadius} 0 0 0 ${l} ${d}\n                Z\n            `;t.push(`<path d="${m}" fill="white"/>`)}return t.join("")}}const a=s},3738:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={boardWidth:{min:100,max:200,default:200},boardHeight:{min:100,max:200,default:200},cornerRadius:{min:0,max:60,default:20},traceThickness:{min:1,max:10,default:2},nodeRadius:{min:2,max:10,default:4},spacing:{min:10,max:100,default:50}};generateShape(){const t=.8,e=this.boardWidth*t,n=this.boardHeight*t,i=this.traceThickness*t,s=this.nodeRadius*t,a=this.spacing*t,r=Math.floor(e/a),o=Math.floor(n/a),h=-r*a/2,l=-o*a/2,d=[];for(let t=0;t<=o;t++)for(let e=0;e<=r;e++){const n=h+e*a,i=l+t*a;d.push({x:n,y:i})}const c=r+1,u=[];for(let t=0;t<=o;t++)for(let e=0;e<=r;e++){const n=t*c+e,s=d[n];if(e<r){const t=d[n+1];u.push(`<line\n                       x1="${s.x}"\n                       y1="${s.y}"\n                       x2="${t.x}"\n                       y2="${t.y}"\n                       stroke="white"\n                       stroke-width="${i}"\n                   />`)}if(t<o){const t=d[n+c];u.push(`<line\n                       x1="${s.x}"\n                       y1="${s.y}"\n                       x2="${t.x}"\n                       y2="${t.y}"\n                       stroke="white"\n                       stroke-width="${i}"\n                   />`)}if(e<r&&t<o){const t=d[n+c+1];u.push(`<line\n                       x1="${s.x}"\n                       y1="${s.y}"\n                       x2="${t.x}"\n                       y2="${t.y}"\n                       stroke="white"\n                       stroke-width="${i}"\n                   />`)}if(e>0&&t<o){const t=d[n+c-1];u.push(`<line\n                       x1="${s.x}"\n                       y1="${s.y}"\n                       x2="${t.x}"\n                       y2="${t.y}"\n                       stroke="white"\n                       stroke-width="${i}"\n                   />`)}}for(const t of d)u.push(`<circle\n               cx="${t.x}"\n               cy="${t.y}"\n               r="${s}"\n               fill="white"\n           />`);return u.join("")}}const a=s},3785:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={barCount:{min:3,max:8,default:5},spacing:{min:2,max:15,default:8},minHeight:{min:10,max:40,default:20},maxHeight:{min:30,max:200,default:180},barWidth:{min:5,max:25,default:15},cornerRadius:{min:0,max:10,default:0},style:{options:["square","rounded"],default:"square"},splitStyle:{options:["standard","wifi"],default:"standard"}};generateShape(){this.resetRNG();const t=this.calculateBarHeights(),e=-(this.barCount*this.barWidth+(this.barCount-1)*this.spacing)/2,n=[];if("wifi"===this.splitStyle){const i=Math.ceil(this.barCount/2),s=this.barCount-i;for(let s=0;s<i;s++){const i=t[s],a=e+s*(this.barWidth+this.spacing),r=-i/2;n.push(`<rect \n                    x="${a}" \n                    y="${r}" \n                    width="${this.barWidth}" \n                    height="${i}"\n                    fill="white"\n                />`)}for(let a=0;a<s;a++){const s=a+i,r=t[s],o=e+s*(this.barWidth+this.spacing),h=-r/2;n.push(`<rect \n                    x="${o}" \n                    y="${h}" \n                    width="${this.barWidth}" \n                    height="${r}"\n                    rx="${"square"===this.style?0:Math.min(this.barWidth/2,8)}" \n                    ry="${"square"===this.style?0:Math.min(this.barWidth/2,8)}"\n                    fill="white"\n                />`)}}else for(let i=0;i<this.barCount;i++){const s=t[i],a=e+i*(this.barWidth+this.spacing),r=-s/2,o="rounded"===this.style?Math.min(this.cornerRadius,this.barWidth/2):0;n.push(`<rect \n                    x="${a}" \n                    y="${r}" \n                    width="${this.barWidth}" \n                    height="${s}"\n                    rx="${o}" \n                    ry="${o}"\n                    fill="white"\n                />`)}return`<g transform="rotate(90)">${n.join("")}</g>`}calculateBarHeights(){const t=[],e=this.maxHeight-this.minHeight;for(let n=0;n<this.barCount;n++){const i=n/(this.barCount-1),s=this.minHeight+e*i;t.push(s)}return t}}const a=s},3895:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={spacing:{min:10,max:100,default:40},thickness:{min:2,max:50,default:15},angle:{min:20,max:50,default:45},width:{min:100,max:300,default:200}};generateShape(){const t=this.angle*Math.PI/180,e=this.width*Math.tan(t)/2,n=0-this.spacing/2,i=[{x:0-this.width/2,y:n+e/2},{x:0,y:n-e/2},{x:0+this.width/2,y:n+e/2}],s=0+this.spacing/2,a=[{x:0-this.width/2,y:s+e/2},{x:0,y:s-e/2},{x:0+this.width/2,y:s+e/2}];return`<path \n            d="M ${i[0].x},${i[0].y} \n                        L ${i[1].x},${i[1].y} \n                        L ${i[2].x},${i[2].y} M ${a[0].x},${a[0].y} \n                           L ${a[1].x},${a[1].y} \n                           L ${a[2].x},${a[2].y}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="square"\n            stroke-linejoin="miter"\n        />`}}const a=s},3908:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={branchAngle:{min:10,max:45,default:30},lengthRatio:{min:.5,max:.8,default:.7},depth:{min:2,max:8,default:5},thickness:{min:1,max:5,default:2}};calculateBoundingBox(t,e,n){let i=0,s=100,a=0;for(let r=0;r<t;r++)a=s*Math.sin(e*Math.PI/180)*2,i=Math.max(i,a),s*=n;return i}drawBranch(t,e,n,i,s){if(i<=0)return;const a={x:t.x+e*Math.cos(n*Math.PI/180),y:t.y-e*Math.sin(n*Math.PI/180)};s.push(`M ${t.x},${t.y} L ${a.x},${a.y}`);const r=e*this.lengthRatio;this.drawBranch(a,r,n+this.branchAngle,i-1,s),this.drawBranch(a,r,n-this.branchAngle,i-1,s)}generateShape(){const t=this.calculateBoundingBox(this.depth,this.branchAngle,this.lengthRatio),e=100*(1-Math.pow(this.lengthRatio,this.depth))/(1-this.lengthRatio),n=200/(1.2*Math.max(t,e)),i={x:0,y:e/2*n},s=[];return this.drawBranch(i,100*n,90,this.depth,s),`<path \n            d="${s.join(" ")}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n        />`}}const a=s},3969:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={outerRadius:{min:20,max:100,default:100},innerRadius:{min:15,max:100,default:50},points:{min:3,max:16,default:6},cornerRadius:{min:25,max:65,default:50},rotation:{min:-180,max:180,default:0}};generateShape(){const t=this.rotation*Math.PI/180,e=Math.round(this.points),n=2*Math.PI/e,i=n/2,s=[],a=Math.min(1,6/e),r=this.cornerRadius*Math.tan(Math.PI/8)*a,o=this.cornerRadius*Math.tan(Math.PI/8)*a;for(let a=0;a<e;a++){const e=a*n-Math.PI/2+t,h=e+i,l=this.outerRadius*Math.cos(e),d=this.outerRadius*Math.sin(e),c=this.innerRadius*Math.cos(h),u=this.innerRadius*Math.sin(h),m=l-r*Math.sin(e),p=d+r*Math.cos(e),f=c+o*Math.sin(h),x=u-o*Math.cos(h);0===a&&s.push(`M ${l},${d}`),s.push(`C ${m},${p} ${f},${x} ${c},${u}`);const g=e+n,y=this.outerRadius*Math.cos(g),$=this.outerRadius*Math.sin(g),M=c-o*Math.sin(h),w=u+o*Math.cos(h),k=y+r*Math.sin(g),S=$-r*Math.cos(g);s.push(`C ${M},${w} ${k},${S} ${y},${$}`)}return s.push("Z"),`<path \n            d="${s.join(" ")}"\n            fill="white"\n        />`}}const a=s},3972:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={rows:{min:1,max:6,default:3},columns:{min:1,max:6,default:3},radius:{min:10,max:50,default:30},spacing:{min:0,max:20,default:0},thickness:{min:1,max:10,default:4},lineCap:{options:["butt","round"],default:"round"}};generateShape(){const t=[],e=this.columns*(2*this.radius+this.spacing)-this.spacing,n=this.rows*(2*this.radius+this.spacing)-this.spacing,i=-e/2+this.radius,s=-n/2.5+this.radius;for(let e=0;e<this.rows;e++)for(let n=0;n<this.columns;n++){const a=i+n*(2*this.radius+this.spacing),r=s+e*(2*this.radius+this.spacing),o=[`M ${a-this.radius} ${r}`,`A ${this.radius} ${this.radius} 0 0 1 ${a+this.radius} ${r}`].join(" ");t.push(`<path \n                    d="${o}"\n                    fill="none"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    stroke-linecap="${this.lineCap}"\n                />`)}return t.join("")}}const a=s},3985:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={innerRatio:{min:.3,max:.9,default:.65},cornerRadius:{min:5,max:100,default:30}};generateShape(){const t=180*Math.sqrt(3)/2,e=[[0,2*-t/3],[90,t/3],[-90,t/3]],n=this.innerRatio,i=e.map((([t,e])=>[t*n,e*n]));return`<path \n            d="${this.createRoundedPath(e,this.cornerRadius)} ${this.createRoundedPath(i,this.cornerRadius*n)}"\n            fill="white"\n            fill-rule="evenodd"\n        />`}createRoundedPath(t,e){const n=[],i=t.length;for(let s=0;s<i;s++){const a=t[s],r=t[(s+1)%i],o=t[(s-1+i)%i],h=Math.min(e,this.getDistance(a,r)/2,this.getDistance(a,o)/2),l=this.adjustPoint(a,o,h),d=this.adjustPoint(a,r,h);0===s&&n.push(`M ${l[0]} ${l[1]}`),n.push(`L ${l[0]} ${l[1]}`),n.push(`Q ${a[0]} ${a[1]} ${d[0]} ${d[1]}`)}return n.push("Z"),n.join(" ")}adjustPoint(t,e,n){const i=[e[0]-t[0],e[1]-t[1]],s=n/Math.sqrt(i[0]*i[0]+i[1]*i[1]);return[t[0]+i[0]*s,t[1]+i[1]*s]}getDistance(t,e){return Math.sqrt((t[0]-e[0])**2+(t[1]-e[1])**2)}}const a=s},4022:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={points:{min:4,max:12,default:6},innerRadius:{min:.2,max:.8,default:.4},branchWidth:{min:2,max:15,default:8},segmentCount:{min:2,max:8,default:4},subCrystalSize:{min:.1,max:2,default:.25},phase:{min:-180,max:180,default:-180}};createBranch(t,e,n,i,s,a,r){const o=[],h=t.x+n*Math.cos(e),l=t.y+n*Math.sin(e),d=t.x+i*Math.cos(e),c=t.y+i*Math.sin(e);o.push(`M ${h},${l} L ${d},${c}`),this.points=Math.round(this.points);const u=(i-n)/a;for(let i=1;i<=a;i++){const s=n+u*i,a={x:t.x+s*Math.cos(e),y:t.y+s*Math.sin(e)},h=e+Math.PI/3,l=e-Math.PI/3,d=u*r,c={x:a.x+d*Math.cos(h),y:a.y+d*Math.sin(h)},m={x:a.x+d*Math.cos(l),y:a.y+d*Math.sin(l)};o.push(`M ${a.x},${a.y} L ${c.x},${c.y}`,`M ${a.x},${a.y} L ${m.x},${m.y}`)}return o}generateShape(){const t={x:0,y:0},e=100*this.innerRadius*.8,n=this.phase*(Math.PI/180),i=[];for(let s=0;s<this.points;s++){const a=2*s*Math.PI/this.points+n,r=this.createBranch(t,a,e,96,.8*this.branchWidth,this.segmentCount,this.subCrystalSize);i.push(...r)}const s=.3*e;return i.push(`M ${t.x+s},${t.y} A ${s},${s} 0 1,0 ${t.x-s},${t.y} A ${s},${s} 0 1,0 ${t.x+s},${t.y}`),`<path \n           d="${i.join(" ")}"\n           fill="none"\n           stroke="white"\n           stroke-width="${.8*this.branchWidth}"\n           stroke-linecap="round"\n           stroke-linejoin="round"\n       />`}}const a=s},4034:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={hexSize:{min:50,max:100,default:100},diamondWidth:{min:10,max:100,default:40},diamondHeight:{min:10,max:150,default:80}};generateShape(){const t=[];for(let e=0;e<6;e++){const n=e*Math.PI/3;t.push({x:0+Math.cos(n)*this.hexSize,y:0+Math.sin(n)*this.hexSize})}const e=[{x:0,y:0-this.diamondHeight/2},{x:0+this.diamondWidth/2,y:0},{x:0,y:0+this.diamondHeight/2},{x:0-this.diamondWidth/2,y:0}],n=`M ${t[0].x},${t[0].y} `+t.slice(1).map((t=>`L ${t.x},${t.y}`)).join(" ")+" Z";let i;return i=`M ${e[0].x},${e[0].y} `+e.slice(1).map((t=>`L ${t.x},${t.y}`)).join(" ")+" Z",`<path \n            d="${n} ${i}"\n            fill="white"\n            fill-rule="evenodd"\n        />`}}const a=s},4119:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={armLength:{min:50,max:100,default:120},centerGap:{min:0,max:60,default:0},armWidth:{min:20,max:100,default:60}};generateShape(){const t=.8*this.armLength,e=.8*this.centerGap,n=.8*this.armWidth,i=[];for(let s=0;s<4;s++){const a=0+s*Math.PI/2,r={x:0+e*Math.cos(a),y:0+e*Math.sin(a)},o={x:r.x+t*Math.cos(a),y:r.y+t*Math.sin(a)},h={x:o.x+n*Math.cos(a+Math.PI/2),y:o.y+n*Math.sin(a+Math.PI/2)},l={x:r.x+n*Math.cos(a+Math.PI/2),y:r.y+n*Math.sin(a+Math.PI/2)};i.push(`M ${r.x} ${r.y} L ${o.x} ${o.y} L ${h.x} ${h.y} L ${l.x} ${l.y} Z`)}return`<path d="${i.join(" ")}" fill="white"/>`}}const a=s},4143:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={containerRadius:{min:50,max:200,default:100},ellipseCount:{min:3,max:30,default:6},minRadius:{min:5,max:15,default:5},maxRadius:{min:15,max:30,default:40},minRatio:{min:.3,max:1,default:.6},maxRatio:{min:1,max:2.5,default:1.8},spacing:{min:0,max:20,default:2},centerBias:{min:0,max:1,default:.4}};generateSizes(){const t=[],e=this.minRadius+(this.maxRadius-this.minRadius)*(.3+.7*this.random());if(t.push(e),this.ellipseCount>1){const n=e*(.5+.4*this.random());t.push(n)}for(let e=2;e<this.ellipseCount;e++){const e=Math.pow(this.random(),1.5),n=this.minRadius+(.6*this.maxRadius-this.minRadius)*e;t.push(n)}return t.sort(((t,e)=>e-t))}tryPlaceEllipse(t,e,n){const i=e,s=e/(this.minRatio+(this.maxRatio-this.minRatio)*this.random());let a,r;if(0===n)a=.5*this.containerRadius*this.centerBias*this.random(),r=2*this.random()*Math.PI;else if(1===n&&this.ellipseCount>2){const e=t[0];r=Math.atan2(e.y,e.x)+Math.PI+(this.random()-.5)*Math.PI*.5,a=this.containerRadius*(.3*this.centerBias+.2*this.random())}else{const e=Math.PI*(3-Math.sqrt(5));let n=0;if(t.length>0){const e=t[t.length-1];n=Math.atan2(e.y,e.x)}r=n+e+.5*(this.random()-.5);const i=Math.pow(this.random(),1-this.centerBias);a=this.containerRadius*i*.7}const o=a*Math.cos(r),h=a*Math.sin(r),l=2*this.random()*Math.PI;return this.isValidPlacement(t,o,h,i,s,l)?{x:o,y:h,rx:i,ry:s,rotation:l}:null}isValidPlacement(t,e,n,i,s,a){const r=Math.max(i,s);if(Math.sqrt(e*e+n*n)+r>this.containerRadius)return!1;for(const a of t){const t=a.x-e,r=a.y-n;if(Math.sqrt(t*t+r*r)<Math.max(i,s)+Math.max(a.rx,a.ry)+this.spacing)return!1}return!0}getEllipsePlacements(){this.resetRNG(this.seed);const t=this.generateSizes(),e=[];for(let n=0;n<t.length;n++){let i=!1;for(let s=0;s<50&&!i;s++){const s=this.tryPlaceEllipse(e,t[n],n);s&&(e.push(s),i=!0)}}return e}generateShape(){const t=this.getEllipsePlacements();return this.renderShape(t)}renderShape(t){const e=`ellipse-mask-${Math.floor(1e4*Math.random())}`,n=t.map((t=>`<ellipse \n                cx="${t.x}" \n                cy="${t.y}" \n                rx="${t.rx}" \n                ry="${t.ry}"\n                transform="rotate(${t.rotation*(180/Math.PI)} ${t.x} ${t.y})"\n                fill="black"\n            />`));return`\n            <defs>\n                <mask id="${e}">\n                    <rect x="-${2*this.containerRadius}" y="-${2*this.containerRadius}" \n                          width="${4*this.containerRadius}" height="${4*this.containerRadius}" \n                          fill="white" />\n                    ${n.join("")}\n                </mask>\n            </defs>\n            <circle \n                cx="0" \n                cy="0" \n                r="${this.containerRadius}"\n                fill="white"\n                mask="url(#${e})"\n            />\n        `}}const a=s},4154:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={circleCount:{min:3,max:12,default:6},minRadius:{min:5,max:40,default:20},maxRadius:{min:70,max:100,default:100},thickness:{min:1,max:8,default:3},minGapCount:{min:1,max:8,default:1},maxGapCount:{min:2,max:12,default:6},minGapAngle:{min:5,max:90,default:25},maxGapAngle:{min:15,max:90,default:90},randomizeEach:{options:[!0,!1],default:!0},lineCap:{options:["butt","round"],default:"round"}};getRandomInRange(t,e){return t+this.random()*(e-t)}getRandomIntInRange(t,e){return Math.floor(this.getRandomInRange(t,e+1))}createArcPath(t,e,n){const i=t*Math.cos(e),s=t*Math.sin(e),a=t*Math.cos(n),r=t*Math.sin(n);return`M ${i},${s} A ${t},${t} 0 ${n-e>Math.PI?1:0} 1 ${a},${r}`}generateCircleWithGaps(t,e,n,i){const s=n*Math.PI/180,a=i*Math.PI/180,r=[];let o=0;for(let t=0;t<e;t++){const t=this.getRandomInRange(s,a),e=this.getRandomInRange(0,2*Math.PI-t);r.push({start:e,end:e+t}),o+=t}r.sort(((t,e)=>t.start-e.start));const h=[];let l=r[0];for(let t=1;t<r.length;t++)r[t].start<=l.end?l.end=Math.max(l.end,r[t].end):(h.push(l),l=r[t]);h.push(l);const d=[];let c=h[h.length-1].end-2*Math.PI;for(const e of h)e.start>c&&d.push(this.createArcPath(t,c,e.start)),c=e.end;return h[0].start+2*Math.PI>c&&d.push(this.createArcPath(t,c,h[0].start+2*Math.PI)),d}generateShape(){this.resetRNG(),this.randomizeEach=!!this.randomizeEach;const t=[],e=(this.maxRadius-this.minRadius)/(this.circleCount-1);let n,i,s;this.randomizeEach||(n=this.getRandomIntInRange(this.minGapCount,this.maxGapCount),i=this.minGapAngle,s=this.maxGapAngle);for(let a=0;a<this.circleCount;a++){const r=this.maxRadius-a*e;let o,h,l;this.randomizeEach?(o=this.getRandomIntInRange(this.minGapCount,this.maxGapCount),h=this.minGapAngle,l=this.maxGapAngle):(o=n,h=i,l=s),this.generateCircleWithGaps(r,o,h,l).forEach((e=>{t.push(`<path\n                    d="${e}"\n                    fill="none"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    stroke-linecap="${this.lineCap}"\n                />`)}))}return t.join("\n")}}const a=s},4242:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:20,max:300,default:100},rotationX:{min:-60,max:60,default:45},rotationY:{min:-60,max:60,default:45},rotationZ:{min:-60,max:60,default:0},thickness:{min:1,max:10,default:2}};generateShape(){const t=[],e=this.size/2,n=this.rotationX*Math.PI/180,i=this.rotationY*Math.PI/180,s=this.rotationZ*Math.PI/180,a=[[-e,-e,-e],[e,-e,-e],[e,e,-e],[-e,e,-e],[-e,-e,e],[e,-e,e],[e,e,e],[-e,e,e]].map((([t,e,a])=>{let r=t,o=e*Math.cos(n)-a*Math.sin(n),h=e*Math.sin(n)+a*Math.cos(n),l=r*Math.cos(i)+h*Math.sin(i),d=o,c=-r*Math.sin(i)+h*Math.cos(i),u=l*Math.cos(s)-d*Math.sin(s),m=l*Math.sin(s)+d*Math.cos(s),p=c;return{x:Math.round(1e3*u)/1e3,y:Math.round(1e3*m)/1e3,z:Math.round(1e3*p)/1e3}})),r=[[0,1],[1,2],[2,3],[3,0],[4,5],[5,6],[6,7],[7,4],[0,4],[1,5],[2,6],[3,7]].sort(((t,e)=>{const n=(a[t[0]].z+a[t[1]].z)/2;return(a[e[0]].z+a[e[1]].z)/2-n}));t.push(`<g stroke="white" stroke-width="${this.thickness}" fill="none" stroke-linejoin="round" stroke-linecap="round">`);const o=[];let h=[...r];for(;h.length>0;){const t=[h[0]];h.splice(0,1);let e=!0;for(;e;){e=!1;const n=t[t.length-1][1];for(let i=0;i<h.length;i++){if(h[i][0]===n){t.push(h[i]),h.splice(i,1),e=!0;break}if(h[i][1]===n){t.push([h[i][1],h[i][0]]),h.splice(i,1),e=!0;break}}}o.push(t)}for(const e of o){const n=e.map(((t,e)=>{const n=a[t[0]],i=a[t[1]];return`${0===e?"M":"L"}${n.x},${n.y} L${i.x},${i.y}`})).join(" ");t.push(`<path d="${n}" />`)}return t.push("</g>"),t.join("")}}const a=s},4310:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={points:{min:3,max:10,default:6},innerRadius:{min:.1,max:.9,default:.4},thickness:{min:1,max:10,default:3},curvature:{min:0,max:.6,default:.2},rotation:{min:-180,max:180,default:0}};generateShape(){const t=[],e=Math.round(this.points),n=this.rotation*Math.PI/180,i=90,s=this.innerRadius*i;for(let a=0;a<e;a++){const r=2*a*Math.PI/e+n,o=2*(a+1)*Math.PI/e+n,h=(r+o)/2,l={x:0+i*Math.cos(r),y:0+i*Math.sin(r)},d={x:0+i*Math.cos(o),y:0+i*Math.sin(o)},c={x:0+i*(1+this.curvature)*Math.cos(h),y:0+i*(1+this.curvature)*Math.sin(h)},u={x:0+s*Math.cos(r),y:0+s*Math.sin(r)},m={x:0+s*Math.cos(o),y:0+s*Math.sin(o)},p={x:0+s*(1-this.curvature)*Math.cos(h),y:0+s*(1-this.curvature)*Math.sin(h)};t.push(`<path \n                d="M ${l.x} ${l.y} \n                   Q ${c.x} ${c.y} ${d.x} ${d.y}\n                   L ${m.x} ${m.y}\n                   Q ${p.x} ${p.y} ${u.x} ${u.y}\n                   Z"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linejoin="round"\n                fill="none"\n            />`)}return t.join("")}}const a=s},4367:(t,e,n)=>{var i={"./AlternatingSquaresPattern.js":1235,"./ArcConnectorShape.js":5668,"./ArchShape.js":233,"./ArrowShape.js":1028,"./AtomShape.js":2714,"./BarcodeShape.js":5515,"./BasicAsteriskShape.js":5737,"./BasicSpiral.js":6795,"./BlobShape.js":2672,"./BookmarkShape.js":2665,"./BowTieShape.js":8903,"./BrickWall.js":641,"./ChaliceShape.js":84,"./CheckerPattern.js":4693,"./CircleComposition.js":2482,"./CirclePacking.js":6791,"./CircleStack.js":2964,"./CirclesComposition.js":4543,"./ClassicSmileyShape.js":9198,"./CloverCross.js":1483,"./ConcaveStarShape.js":308,"./ConcentricEllipses.js":821,"./ConcentricFlow.js":9050,"./ConcentricRectangles.js":9240,"./ConcentricSphereShape.js":66,"./ConcentricTarget.js":2283,"./ConicalShape.js":8328,"./ConnectedPillsShape.js":7914,"./CrescentShape.js":2736,"./CrossShape.js":6487,"./CrossSqrdShape.js":6005,"./CrosshairShape.js":7759,"./CrystalShard.js":4376,"./CubeShape.js":4242,"./CurvedHourglass.js":3249,"./CurvedPetalFlower.js":5436,"./CurvedSplit.js":2891,"./CutoutPill.js":9793,"./DNASpiral.js":5612,"./DandelionShape.js":8381,"./DendriteShape.js":1680,"./DiagonalCircleShape.js":1752,"./DiagonalGrid.js":8561,"./DiagonalStripes.js":107,"./DiagonalTechShape.js":1748,"./DiamondArrowShape.js":1678,"./DiamondHexShape.js":4034,"./DiamondPairShape.js":811,"./DiamondStarShape.js":1543,"./Dice.js":7229,"./DotSpiral.js":9638,"./DoubleChevronShape.js":3895,"./DoubleXShape.js":7586,"./DualLensShape.js":3499,"./EllipseGrid.js":8634,"./EllipsePacking.js":4143,"./EllipsesStackShape.js":6164,"./ExpandArrowsShape.js":5879,"./EyeShape.js":9376,"./FingerprintShape.js":8407,"./FlatWave.js":7020,"./FloralSprayShape.js":5846,"./FlowField.js":9808,"./FlowFieldShape.js":7371,"./FlowerMandala.js":2577,"./FlowerPetalsShape.js":1915,"./FractalFlowerShape.js":2241,"./FractalTreeShape.js":3908,"./FrostRaysShape.js":4022,"./FunnelShape.js":8585,"./GeometricEmblem.js":7443,"./GeometricLogo.js":8990,"./GeometricPetalFlower.js":8490,"./GlitchPattern.js":6017,"./Globe.js":6865,"./Goblet.js":7455,"./HexagonalCluster.js":7387,"./HollowEllipse.js":4623,"./HorizontalRects.js":6099,"./Hourglass.js":7178,"./HourglassEllipse.js":6910,"./IncreasingRadialShape.js":5253,"./Keyhole.js":1861,"./KochCurve.js":9128,"./LanternShape.js":9299,"./LayeredBlob.js":9611,"./LayeredBlobsMaskShape.js":2493,"./LayeredChevron.js":6729,"./LayeredCubeShape.js":3424,"./LayeredFlowShape.js":8079,"./LayeredMountains.js":9918,"./LayeredPolygon.js":1488,"./LeafVeinsShape.js":5898,"./LineGrid.js":5324,"./LinesBurst.js":2713,"./LissajousCurve.js":7816,"./LogarithmicDots.js":3123,"./LotusShape.js":4310,"./MazeShape.js":2600,"./MeepleShape.js":5925,"./MeshGridShape.js":5414,"./MessageBubble.js":8153,"./MetaBall.js":4634,"./MetaBalls.js":9241,"./Meteor.js":7582,"./MirroredCurveShape.js":312,"./ModulatedGridShape.js":7268,"./MoleculeShape.js":2781,"./MondrianShape.js":8581,"./MultiRadialLinesShape.js":3186,"./NestedCrossShape.js":816,"./NestedSquares.js":2933,"./NestedTriangles.js":9956,"./NodedRect.js":3738,"./NodesNetworkShape.js":6842,"./NotchForm.js":6244,"./OctagonalFrame.js":3485,"./OrbitalShape.js":6440,"./ParallelStripesCircle.js":8191,"./PedestalShape.js":7175,"./PerspectiveGridShape.js":1505,"./PieSegments.js":3128,"./PinwheelShape.js":4119,"./PixelPattern.js":752,"./Plant.js":769,"./PlugShape.js":6777,"./PolarLineBurst.js":438,"./PolygonalBang.js":4997,"./PrismaShape.js":5913,"./PuzzlePieceShape.js":613,"./QuantumWavesShape.js":7346,"./RadialGridShape.js":4644,"./RadialLines.js":8882,"./RadialTriangles.js":3040,"./RainbowArcs.js":5727,"./RectangleGrid.js":4813,"./RecursiveCrescent.js":7235,"./RecursiveSqrdCircles.js":9601,"./RhombusPattern.js":904,"./RhythmicWaves.js":4710,"./RibbonShape.js":393,"./RoundedInnerStarShape.js":8936,"./RoundedPolygon.js":751,"./RoundedRect.js":5955,"./RoundedRectangles.js":9616,"./RoundedStar.js":3969,"./RoundedTriangle.js":3985,"./RoundedTrianglesGrid.js":5536,"./RoundedTruchet.js":714,"./SemicirclePattern.js":3972,"./SerratedFrame.js":217,"./SierpinskiTriangle.js":1169,"./SignalShape.js":3785,"./Spikes.js":5825,"./SpiralWave.js":1758,"./SpiroPetal.js":3509,"./SprocketShape.js":908,"./SquareBoxShape.js":4863,"./SquaresPyramid.js":6990,"./SquiggleShape.js":6592,"./Squircle.js":5296,"./StackedCircles.js":9576,"./StampShape.js":7806,"./Star.js":9894,"./StarCircle.js":482,"./StarCluster.js":2534,"./StarburstRingsShape.js":4154,"./StarburstShape.js":9741,"./StitchPattern.js":2765,"./StitchedFrame.js":6125,"./StylizedOShape.js":6272,"./Sun.js":3590,"./SwirlingVortex.js":7643,"./SymmetricGridPattern.js":4553,"./SymmetricLines.js":4812,"./SymmetricTotem.js":8790,"./SymmetricalPattern.js":6710,"./ThreadedShape.js":8730,"./Tornado.js":8697,"./TorusShape.js":680,"./TriangleRays.js":119,"./TriangularPortal.js":9,"./TribalArrow.js":4465,"./TribalPattern.js":7250,"./TripleRoundedShape.js":928,"./TruchetPattern.js":7905,"./TwistedStems.js":6090,"./Vase.js":1711,"./VoronoiShape.js":9921,"./Wave.js":8039,"./WaveField.js":7571,"./WaveFlower.js":6636,"./WaveFrame.js":4726,"./WavePattern.js":2861,"./WavyLine.js":3385,"./WavyLine3D.js":5258};function s(t){var e=a(t);return n(e)}function a(t){if(!n.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}s.keys=function(){return Object.keys(i)},s.resolve=a,t.exports=s,s.id=4367},4376:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={blades:{min:3,max:12,default:6},serration:{min:1,max:8,default:1},taper:{min:.2,max:1,default:.3},skew:{min:-1,max:1,default:.2}};generateShape(){this.blades=Math.round(this.blades);const t=2*Math.PI/this.blades,e=[];for(let n=0;n<this.blades;n++){const i=t*n;for(let n=0;n<=this.serration;n++){const s=n/this.serration,a=100*(1-s*this.taper),r=i+this.skew*(s-.5)+Math.PI/2,o=a*Math.cos(r),h=a*Math.sin(r);if(e.push([o,h]),n<this.serration){const n=.85*a,i=r+t/(2*this.serration);e.push([n*Math.cos(i),n*Math.sin(i)])}}}let n=`M ${e[0][0]} ${e[0][1]}`;for(let t=1;t<e.length;t++)if(n+=` L ${e[t][0]} ${e[t][1]}`,t%(2*this.serration)==0){const i=(t+1)%e.length;n+=` L ${(e[t][0]+e[i][0])/2} ${(e[t][1]+e[i][1])/2}`}return n+=" Z",`<path \n            d="${n}"\n            fill="white"\n        />`}}const a=s},4417:t=>{"use strict";t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},4465:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:50,max:200,default:100},height:{min:50,max:200,default:120},pointDepth:{min:.1,max:.5,default:.3},wingSpread:{min:.3,max:1,default:.7}};generateShape(){const t=1.2*this.width,e=1.2*this.height,n=this.pointDepth,i=this.wingSpread,s=0-e/2,a=0+e/2,r=0-t/2,o=0+t/2;return`<path \n            d="${[`M 0 ${s}`,`L ${o} ${s+e*n}`,`L ${0+t*i/2} 0`,`L ${o} ${a-e*n}`,`L 0 ${a}`,`L ${r} ${a-e*n}`,`L ${0-t*i/2} 0`,`L ${r} ${s+e*n}`,"Z"].join(" ")}"\n            fill="white"\n            stroke="white"\n            stroke-width="2"\n            stroke-linejoin="round"\n        />`}}const a=s},4543:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={circleCount:{min:3,max:12,default:6},circleSize:{min:40,max:80,default:60},lineThickness:{min:2,max:10,default:4},spacing:{min:40,max:120,default:80},innerRadius:{min:.3,max:.8,default:.5}};createCircle(t,e,n){return`<circle \n            cx="${t}" \n            cy="${e}" \n            r="${n/2}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.lineThickness}"\n            stroke-linecap="round"\n        />`}createLine(t,e,n,i){return`<line \n            x1="${t}" \n            y1="${e}" \n            x2="${n}" \n            y2="${i}"\n            stroke="white"\n            stroke-width="${this.lineThickness}"\n            stroke-linecap="round"\n        />`}generateShape(){const t=[],e=Math.round(this.circleCount),n=.8*this.circleSize,i=.8*this.spacing,s=this.innerRadius*i;for(let a=0;a<e;a++){const r=a/e*2*Math.PI,o=(a+1)/e*2*Math.PI,h=Math.cos(r)*i,l=Math.sin(r)*i,d=Math.cos(o)*i,c=Math.sin(o)*i,u=Math.cos(r)*s,m=Math.sin(r)*s;t.push(this.createCircle(h,l,n)),t.push(this.createLine(h,l,u,m)),t.push(this.createLine(h,l,d,c))}return t.push(this.createCircle(0,0,n)),t.join("\n")}}const a=s},4553:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={lines:{min:6,max:24,default:6},spacing:{min:6,max:20,default:12},radius:{min:40,max:120,default:80},rotation:{min:-180,max:180,default:45},thickness:{min:1,max:6,default:4}};generateShape(){const t=[],e=this.rotation*Math.PI/180,n=t=>{const e=[],n=Math.PI/2/(this.lines-1);for(let i=0;i<this.lines;i++){const s=t+i*n,a=0,r=0,o=this.radius*Math.cos(s),h=this.radius*Math.sin(s);for(let t=0;t<=this.lines;t++){const n=t/this.lines,i=a+(o-a)*n,l=r+(h-r)*n,d=s+Math.PI/2,c=this.spacing*(1-n),u=i+c*Math.cos(d),m=l+c*Math.sin(d);e.push(`\n                        <line \n                            x1="${i}" \n                            y1="${l}" \n                            x2="${u}" \n                            y2="${m}"\n                            stroke="white"\n                            stroke-width="${this.thickness}"\n                            stroke-linecap="round"\n                        />\n                    `)}}return e};for(let i=0;i<4;i++){const s=n(i*Math.PI/2+e);t.push(...s)}return t.join("")}}const a=s},4623:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={outerRadiusX:{min:50,max:100,default:100},outerRadiusY:{min:50,max:100,default:100},innerRadiusX:{min:25,max:50,default:40},innerRadiusY:{min:25,max:50,default:40},innerOffsetX:{min:-50,max:50,default:0},innerOffsetY:{min:-50,max:50,default:0}};validateInnerEllipseBounds(){this.innerRadiusX=Math.min(this.innerRadiusX,.9*this.outerRadiusX),this.innerRadiusY=Math.min(this.innerRadiusY,.9*this.outerRadiusY);const t=Math.max(1,this.outerRadiusX-this.innerRadiusX),e=Math.max(1,this.outerRadiusY-this.innerRadiusY),n=.9;this.innerOffsetX=Math.max(-t*n,Math.min(t*n,this.innerOffsetX)),this.innerOffsetY=Math.max(-e*n,Math.min(e*n,this.innerOffsetY));const i=Math.sqrt(Math.pow(this.innerOffsetX/t,2)+Math.pow(this.innerOffsetY/e,2));if(i>.7){const t=1-.5*(i-.7);this.innerRadiusX*=t,this.innerRadiusY*=t}}generateShape(){this.validateInnerEllipseBounds();const t=`hollow-ellipse-mask-${Math.floor(1e4*Math.random())}`;return`\n            <defs>\n                <mask id="${t}">\n                    <rect x="-200" y="-200" width="400" height="400" fill="black" />\n                    <ellipse \n                        cx="0" \n                        cy="0" \n                        rx="${this.outerRadiusX}" \n                        ry="${this.outerRadiusY}"\n                        fill="white"\n                    />\n                    <ellipse \n                        cx="${this.innerOffsetX}" \n                        cy="${this.innerOffsetY}" \n                        rx="${this.innerRadiusX}" \n                        ry="${this.innerRadiusY}"\n                        fill="black"\n                    />\n                </mask>\n            </defs>\n        \n            <ellipse \n                cx="0" \n                cy="0" \n                rx="${this.outerRadiusX}" \n                ry="${this.outerRadiusY}"\n                fill="white"\n                mask="url(#${t})"\n            />\n        `}}const a=s},4634:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:40,max:150,default:100},lobeSize:{min:.2,max:.8,default:.5},twist:{min:-90,max:90,default:0}};generateShape(){const t=this.radius/150*100,e=this.twist*Math.PI/180,n=[];for(let i=0;i<=100;i++){const s=i/100,a=2*Math.PI*s,r=t*(1+this.lobeSize*Math.cos(2*a+e)),o=r*Math.cos(a),h=r*Math.sin(a);n.push(`${o},${h}`)}return`<path \n            d="M ${n[0]} L ${n.slice(1).join(" L ")} Z"\n            fill="white"\n        />`}}const a=s},4644:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:3,max:6,default:6},maxRadius:{min:5,max:30,default:15},minRadius:{min:1,max:15,default:2},spacing:{min:20,max:60,default:33},gridRound:{min:0,max:1,default:.3},patternOffsetX:{min:-50,max:50,default:0},patternOffsetY:{min:-50,max:50,default:0},radiusFalloff:{min:.5,max:2.5,default:1.5}};generateShape(){const t=[],e=(this.gridSize-1)/2,n=this.patternOffsetX,i=this.patternOffsetY;for(let s=0;s<this.gridSize;s++)for(let a=0;a<this.gridSize;a++){const r=(a-e)*this.spacing,o=(s-e)*this.spacing,h=Math.sqrt(Math.pow(r,2)+Math.pow(o,2)),l=e*this.spacing;if(h>l*(1+this.gridRound))continue;const d=Math.atan2(o,r),c=this.gridRound*Math.min(1,h/l),u=r*(1-c)+Math.cos(d)*h*c,m=o*(1-c)+Math.sin(d)*h*c,p=Math.sqrt(Math.pow(u-n,2)+Math.pow(m-i,2)),f=Math.sqrt(2)*(e*this.spacing),x=Math.max(0,1-p/f),g=this.minRadius+(this.maxRadius-this.minRadius)*Math.pow(x,this.radiusFalloff);t.push(`<circle \n                    cx="${u}" \n                    cy="${m}" \n                    r="${g}"\n                    fill="white"\n                />`)}return t.join("")}}const a=s},4693:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:25,max:50,default:40},count:{min:2,max:12,default:4},scaleY:{min:0,max:100,default:1}};generateShape(){const t=[],e=-this.count*this.size/2;let n=e;for(let i=0;i<this.count;i++){const s=1-i/(this.count-1)*this.scaleY/100;for(let a=0;a<this.count;a++)if((i+a)%2==0){const i=e+a*this.size,r=this.size*s;t.push(`<rect \n                        x="${i}" \n                        y="${n}" \n                        width="${this.size}"\n                        height="${r}"\n                        fill="white"\n                    />`)}n+=this.size*s}return t.join("")}}const a=s},4710:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={archHeight:{min:50,max:200,default:180},rootCount:{min:3,max:12,default:6},rootThickness:{min:2,max:15,default:8},rootCurve:{min:.1,max:1,default:.6},rootSpread:{min:.2,max:.8,default:.3},rootPhase:{min:-90,max:90,default:0}};generateShape(){const t=[],e=400*this.rootSpread,n=0+this.archHeight/2,i=0-this.archHeight/2;for(let s=0;s<this.rootCount;s++){const a=s/(this.rootCount-1),r=this.rootPhase*Math.PI/180*Math.sin(a*Math.PI),o=0-e/2+e*a,h={x:o,y:n},l={x:o,y:i},d={x:o+100*this.rootCurve*Math.cos(r),y:n-.4*this.archHeight},c={x:o-60*this.rootCurve*Math.cos(r),y:i+.4*this.archHeight};t.push(`<path \n                d="M ${h.x} ${h.y} \n                   C ${d.x} ${d.y} \n                     ${c.x} ${c.y} \n                     ${l.x} ${l.y}"\n                stroke="white"\n                stroke-width="${this.rootThickness}"\n                stroke-linecap="round"\n                fill="none"\n            />`)}return t.join("")}}const a=s},4726:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:150,default:150},sides:{min:3,max:12,default:6},amplitude:{min:1,max:50,default:20},frequency:{min:1,max:20,default:2},phase:{min:-180,max:180,default:0},smoothness:{min:.1,max:1,default:1}};generateShape(){this.sides=Math.round(this.sides),this.phaseRad=this.phase*Math.PI/180,this.freq2Pi=2*this.frequency*Math.PI,this.startPhase=Math.PI/2;const t=Math.min(2*this.frequency,12),e=Math.max(4,t),n=2*Math.PI/this.sides,i=this.size/2,s=[];for(let t=0;t<=this.sides;t++){const e=t%this.sides*n,a=i*Math.cos(e),r=i*Math.sin(e);s.push([a,r])}let a="";for(let t=0;t<this.sides;t++)s[t]&&s[t+1]&&(a+=this.generateWaveEdge(s[t],s[t+1],e));return`<path d="${a} Z" fill="white"/>`}generateWaveEdge(t,e,n){if(!t||!e||!Array.isArray(t)||!Array.isArray(e)||t.length<2||e.length<2)return"";const i=e[0]-t[0],s=e[1]-t[1],a=Math.sqrt(i*i+s*s);if(a<1)return"";const r=1/a,o=[-s*r,i*r],h=[i*r,s*r],l=a/n*this.smoothness;let d="";const c=e=>{const n=this.startPhase+e*this.freq2Pi+this.phaseRad,a=Math.sin(n),l=Math.cos(n),d=a*this.amplitude,c=l*this.amplitude*this.freq2Pi,u=t[0]+i*e,m=t[1]+s*e;return{point:[u+o[0]*d,m+o[1]*d],tangent:[h[0]-o[0]*c*r,h[1]-o[1]*c*r]}};for(let t=0;t<n;t++){const e=(t+1)/n,i=c(t/n),s=c(e),a=i.point[0]+i.tangent[0]*l,r=i.point[1]+i.tangent[1]*l,o=s.point[0]-s.tangent[0]*l,h=s.point[1]-s.tangent[1]*l;0===t&&(d=`M ${i.point[0]},${i.point[1]}`),d+=` C ${a},${r} ${o},${h} ${s.point[0]},${s.point[1]}`}return d}}const a=s},4812:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={count:{min:3,max:16,default:7},spacing:{min:10,max:50,default:22},minHeight:{min:20,max:200,default:20},maxHeight:{min:50,max:250,default:166},thickness:{min:2,max:30,default:8},variation:{min:0,max:100,default:100},lineCap:{options:["butt","round","square"],default:"square"}};generateShape(){this.viewportSize=150;const t=[],e=this.spacing*(this.count-1),n=Math.min(1,2*this.viewportSize/e),i=this.spacing*n,s=-e*n/2,a=(this.count-1)/2;for(let e=0;e<this.count;e++){const r=s+e*i,o=1-Math.abs(e-a)/a*(this.variation/100),h=(this.minHeight+(this.maxHeight-this.minHeight)*o)*n/2;t.push(`<line \n                x1="${r}"\n                y1="${-h}"\n                x2="${r}"\n                y2="${h}"\n                stroke="white"\n                stroke-width="${this.thickness*n}"\n                stroke-linecap="${this.lineCap}"\n            />`)}return`<g>${t.join("")}</g>`}}const a=s},4813:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:100,max:200,default:150},height:{min:100,max:200,default:150},rows:{min:1,max:8,default:5},columns:{min:1,max:8,default:5},thickness:{min:1,max:10,default:2},spacing:{min:0,max:20,default:0},mode:{options:["stroke","fill"],default:"stroke"}};generateShape(){const t=[],e=(this.width-this.spacing*(this.columns-1))/this.columns,n=(this.height-this.spacing*(this.rows-1))/this.rows,i=-this.width/2,s=-this.height/2;for(let a=0;a<this.rows;a++)for(let r=0;r<this.columns;r++){const o=i+r*(e+this.spacing),h=s+a*(n+this.spacing);t.push(`<rect \n                    x="${o}"\n                    y="${h}"\n                    width="${e}"\n                    height="${n}"\n                    fill="${"fill"===this.mode?"white":"none"}"\n                    stroke="${"stroke"===this.mode?"white":"none"}"\n                    stroke-width="${this.thickness}"\n                />`)}return t.join("")}}const a=s},4863:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:200,default:100},outerRadius:{min:0,max:50,default:0},innerRadius:{min:0,max:25,default:0},innerWidth:{min:5,max:50,default:20},padding:{min:5,max:30,default:15},xOffset:{min:0,max:100,default:0}};generateShape(){const t=this.size-2*this.padding,e=-this.size/2,n=(this.size-this.innerWidth-2*this.padding)*this.xOffset/100;return`<rect \n            x="${e}"\n            y="${e}"\n            width="${this.size}"\n            height="${this.size}"\n            rx="${this.outerRadius}"\n            ry="${this.outerRadius}"\n            fill="white"\n        /><rect \n            x="${e+this.padding+n}"\n            y="${e+this.padding}"\n            width="${this.innerWidth}"\n            height="${t}"\n            rx="${this.innerRadius}"\n            ry="${this.innerRadius}"\n            fill="black"\n        />`}}const a=s},4997:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:40,max:60,default:60},points:{min:8,max:16,default:12},spikeHeight:{min:.2,max:.5,default:.35},innerRadius:{min:.6,max:.9,default:.75},irregularity:{min:.1,max:.8,default:.4},positionChaos:{min:.1,max:.4,default:.2}};generatePoints(){this.resetRNG(),this.points=Math.round(this.points);const t=[],e=2*Math.PI/this.points;for(let n=0;n<this.points;n++){const i=n*e+e*this.positionChaos*(this.random()-.5),s=1+this.irregularity*(this.random()-.5),a=this.radius*this.innerRadius*s,r={x:a*Math.cos(i),y:a*Math.sin(i)},o=i+e/2+e*this.irregularity*(this.random()-.5)*.5,h=1+this.irregularity*(this.random()-.5)*2,l=this.radius*(1+this.spikeHeight*h),d={x:l*Math.cos(o),y:l*Math.sin(o)};t.push(r),t.push(d)}return t}generateShape(){const t=this.generatePoints();let e="";return t.forEach(((t,n)=>{e+=0===n?`M ${t.x} ${t.y}`:` L ${t.x} ${t.y}`})),e+=" Z",`<path\n            d="${e}"\n            fill="white"\n            stroke="none"\n        />`}}const a=s},5056:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},5072:t=>{"use strict";var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var a={},r=[],o=0;o<t.length;o++){var h=t[o],l=i.base?h[0]+i.base:h[0],d=a[l]||0,c="".concat(l," ").concat(d);a[l]=d+1;var u=n(c),m={css:h[1],media:h[2],sourceMap:h[3],supports:h[4],layer:h[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=s(m,i);i.byIndex=o,e.splice(o,0,{identifier:c,updater:p,references:1})}r.push(c)}return r}function s(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,s){var a=i(t=t||[],s=s||{});return function(t){t=t||[];for(var r=0;r<a.length;r++){var o=n(a[r]);e[o].references--}for(var h=i(t,s),l=0;l<a.length;l++){var d=n(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=h}}},5253:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={minRadius:{min:0,max:100,default:100},lineCount:{min:4,max:72,default:26},minThickness:{min:1,max:10,default:1},maxThickness:{min:1,max:20,default:13},lineCap:{options:["butt","round"],default:"butt"},rotation:{min:-180,max:180,default:0},spread:{min:0,max:360,default:360}};generateShape(){const t=[],e=-Math.PI/2+this.rotation*Math.PI/180,n=this.spread*Math.PI/180;for(let i=0;i<this.lineCount;i++){const s=i/(this.lineCount-1),a=e+n*s,r=this.minRadius,o=0,h=0,l=r*Math.cos(a),d=r*Math.sin(a),c=this.minThickness+(this.maxThickness-this.minThickness)*s;t.push(`<line \n                x1="${o}" \n                y1="${h}" \n                x2="${l}" \n                y2="${d}"\n                stroke="white"\n                stroke-width="${c}"\n                stroke-linecap="${this.lineCap}"\n            />`)}return t.join("")}}const a=s},5258:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>r});var i=n(1965),s=n(6987);class a extends i.y{static parameters={thickness:{min:.5,max:10,default:1.5},wavelength:{min:50,max:200,default:120},amplitude:{min:10,max:100,default:50},segments:{min:3,max:12,default:4},lines:{min:3,max:20,default:12},depth:{min:10,max:100,default:40},noiseScale:{min:.1,max:2,default:.6},noiseStrength:{min:0,max:100,default:15},curvature:{min:.1,max:1,default:.8},rotationX:{min:-180,max:180,default:20},rotationY:{min:-180,max:180,default:10},rotationZ:{min:-180,max:180,default:0}};getNoise(t,e,n){return s.A.noise(t*this.noiseScale+this.seed,e*this.noiseScale+this.seed,n*this.noiseScale+this.seed)}generateShape(){const t=this.rotationX*Math.PI/180,e=this.rotationY*Math.PI/180,n=this.rotationZ*Math.PI/180,i=[];for(let t=0;t<this.lines;t++){const e=t/(this.lines-1),n=(e-.5)*this.amplitude*2,s=this.generateHorizontalPath(e,n);i.push(s)}const s=i.map((i=>i.map((i=>({...i,rotated:this.rotate3D(i.x-0,i.y-0,i.z-0,t,e,n)}))))).map((t=>{const e=t.reduce(((t,e)=>t+e.rotated.z),0)/t.length;return{path:t,avgZ:e}}));s.sort(((t,e)=>e.avgZ-t.avgZ));const a=[];for(const{path:t}of s){const e=this.pointsToSvgPath(t),n=(t.reduce(((t,e)=>t+e.rotated.z),0)/t.length+50)/100,i=(this.thickness*(.5+n)).toFixed(2);a.push(`<path\n        d="${e}"\n        stroke="white"\n        stroke-width="${i}"\n        fill="none"\n        stroke-linejoin="round"\n        stroke-linecap="round"\n      />`)}return a.join("")}generateHorizontalPath(t,e){const n=[],i=this.wavelength*this.segments,s=-i/2,a=i/2,r=16*this.segments+1;for(let i=0;i<r;i++){const o=i/(r-1),h=s+o*(a-s),l=.2*t,d=o*o*(3-2*o),c=Math.sin((d+l)*Math.PI*this.segments)*this.amplitude,u=this.getNoise(3*d,2*t,this.seed/500)*this.noiseStrength*(.3+.4*Math.sin(t*Math.PI)),m=.8-.4*Math.abs(t-.5)*2,p=Math.cos((d+l)*Math.PI*this.segments)*this.depth*.5*m+this.getNoise(2*d,1.5*t,this.seed/400)*this.noiseStrength*.3,f=this.getNoise(2*d,t,this.seed/300)*this.noiseStrength*.2,x=c+u+e;n.push({x:h+f,y:x,z:p})}return n}pointsToSvgPath(t){if(t.length<2)return"";let e=`M ${t[0].rotated.x},${t[0].rotated.y}`;if(t.length<=3)for(let n=0;n<t.length-1;n++){const i=t[n].rotated,s=t[n+1].rotated,a=s.x-i.x,r=s.y-i.y,o=.4*this.curvature;e+=` C ${i.x+a*o},${i.y+r*o} ${s.x-a*o},${s.y-r*o} ${s.x},${s.y}`}else for(let n=0;n<t.length-1;n++){const i=t[Math.max(0,n-1)].rotated,s=t[n].rotated,a=t[n+1].rotated,r=t[Math.min(t.length-1,n+2)].rotated,o=1-.8*this.curvature;e+=` C ${s.x+(a.x-i.x)/6*o},${s.y+(a.y-i.y)/6*o} ${a.x-(r.x-s.x)/6*o},${a.y-(r.y-s.y)/6*o} ${a.x},${a.y}`}return e}rotate3D(t,e,n,i,s,a){const r=t*Math.cos(a)-e*Math.sin(a),o=t*Math.sin(a)+e*Math.cos(a),h=o*Math.cos(i)-n*Math.sin(i),l=o*Math.sin(i)+n*Math.cos(i);return{x:r*Math.cos(s)+l*Math.sin(s),y:h,z:-r*Math.sin(s)+l*Math.cos(s)}}}const r=a},5296:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={cornerRadius:{min:0,max:150,default:80},smoothness:{min:.1,max:1,default:.6},inset:{min:0,max:100,default:20},cornerBalance:{min:.1,max:2,default:1}};generateShape(){const t=Math.min(1*this.cornerRadius,200/3),e=Math.min(1*this.inset,50),n=t*this.smoothness,i=t*this.cornerBalance,s=(200-2*e)/2,a=0-s,r=0+s,o=0-s,h=0+s;return`<path \n            d="${[`M ${a+i} ${o}`,`L ${r-i} ${o}`,`C ${r-i+n} ${o}`,`${r} ${o+i-n}`,`${r} ${o+i}`,`L ${r} ${h-i}`,`C ${r} ${h-i+n}`,`${r-i+n} ${h}`,`${r-i} ${h}`,`L ${a+i} ${h}`,`C ${a+i-n} ${h}`,`${a} ${h-i+n}`,`${a} ${h-i}`,`L ${a} ${o+i}`,`C ${a} ${o+i-n}`,`${a+i-n} ${o}`,`${a+i} ${o}`,"Z"].join(" ")}"\n            fill="white"\n        />`}}const a=s},5324:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:100,max:250,default:200},rows:{min:1,max:8,default:3},columns:{min:1,max:8,default:3},lengthRatio:{min:.2,max:2,default:.8},rotation:{min:0,max:360,default:45},thickness:{min:1,max:10,default:6},lineCap:{options:["butt","round","square"],default:"round"}};generateShape(){const t=[],e=this.size/this.columns,n=this.size/this.rows,i=-this.size/2,s=-this.size/2,a=Math.min(e,n)*this.lengthRatio/2;for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++){const h=i+o*e+e/2,l=s+r*n+n/2;t.push(`<line \n                    x1="-${a}" \n                    y1="0"\n                    x2="${a}" \n                    y2="0"\n                    transform="translate(${h} ${l}) rotate(${this.rotation})"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    stroke-linecap="${this.lineCap}"\n                />`)}return`<g>${t.join("")}</g>`}}const a=s},5414:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:2,max:5,default:5},cellSize:{min:10,max:30,default:18},distortion:{min:25,max:100,default:55},noiseScale:{min:5,max:12,default:6},lineThickness:{min:1,max:4,default:1.5},gridStyle:{options:["square","radial"],default:"radial"},fadeEdges:{min:0,max:100,default:60},smoothness:{min:1,max:10,default:6}};noise(t,e,n=0){const i=this.seed;return.35*Math.sin(.13*(t+.7*e)+.31*i)+.25*Math.sin(.23*(1.1*t-.5*e)+1.51*i)+.22*Math.cos(.19*(.81*t+.62*e)+.47*i)+.18*Math.sin(.18*(.31*t+1.1*e)+.69*i)}smoothedNoise(t,e,n=0){if(this.smoothness<=1)return this.noise(t,e,n);const i=Math.min(.1*this.smoothness,.8);let s=0,a=0;const r=Math.max(3,Math.floor(this.smoothness));for(let o=-i;o<=i;o+=2*i/(r-1))for(let h=-i;h<=i;h+=2*i/(r-1))s+=this.noise(t+o,e+h,n),a++;return s/a}getDistanceAttenuation(t,e){const n=140+3*this.gridSize,i=Math.sqrt(t*t+e*e),s=Math.min(1,(i/n)**1.5);if(this.fadeEdges>0){const t=this.fadeEdges/100;return Math.max(0,1-Math.pow(s*t,1.3))}return 1-.2*s}distortPoint(t,e){const n=this.getDistanceAttenuation(t,e),i=190-Math.abs(t),s=190-Math.abs(e),a=Math.min(i,s),r=Math.max(5,.6*a),o=Math.min(this.distortion*n,r),h=Math.atan2(e,t),l=.25+.1*Math.min(1,Math.sqrt(t*t+e*e)/160);return{x:t+this.smoothedNoise(t/this.noiseScale+Math.cos(1.3*h)*l,e/this.noiseScale+Math.sin(1.3*h)*l,1)*o,y:e+this.smoothedNoise(t/this.noiseScale+Math.cos(1.8*h)*l,e/this.noiseScale+Math.sin(1.8*h)*l,2.5)*o}}generateRadialGrid(){const t=[],e=Math.min(this.gridSize*this.cellSize,170),n=36+4*Math.max(3,Math.min(12,Math.floor(.75*this.gridSize))),i=Math.max(4,this.gridSize+1),s=[];for(let t=1;t<=i;t++){const a=t/i,r=e*Math.pow(a,.9),o=[];for(let t=0;t<=n;t++){const e=t/n*Math.PI*2,i=Math.cos(e)*r,s=Math.sin(e)*r,a=this.distortPoint(i,s);o.push(a)}s.push(o)}for(const e of s)for(let i=0;i<e.length-1;i++)i%Math.max(1,Math.floor(n/120))!=0&&i!==e.length-2||t.push(`<line \n                    x1="${e[i].x}" \n                    y1="${e[i].y}" \n                    x2="${e[i+1].x}" \n                    y2="${e[i+1].y}"\n                    stroke="white"\n                    stroke-width="${this.lineThickness}"\n                    stroke-linecap="round"\n                />`);const a=Math.max(12,3*this.gridSize),r=Math.ceil(n/a);for(let e=0;e<n;e+=r){const n=[];for(let t=0;t<s.length;t++)n.push(s[t][e]);for(let e=0;e<n.length-1;e++)t.push(`<line \n                    x1="${n[e].x}" \n                    y1="${n[e].y}" \n                    x2="${n[e+1].x}" \n                    y2="${n[e+1].y}"\n                    stroke="white"\n                    stroke-width="${this.lineThickness}"\n                    stroke-linecap="round"\n                />`)}return t.join("")}generateSquareGrid(){const t=[],e=this.gridSize,n=Math.min(this.cellSize,168/e),i=[];for(let t=-e;t<=e;t++){const s=[],a=t*n;for(let t=-e;t<=e;t++){const e=t*n,i=this.distortPoint(e,a);s.push(i)}i.push(s)}for(let e=0;e<i.length;e++)for(let n=0;n<i[e].length-1;n++){const s=i[e][n],a=i[e][n+1],r=Math.sqrt(((s.x+a.x)/2)**2+((s.y+a.y)/2)**2),o=this.lineThickness*(1-Math.min(.35,(r/420)**1.2));t.push(`<line \n                    x1="${s.x}" \n                    y1="${s.y}" \n                    x2="${a.x}" \n                    y2="${a.y}"\n                    stroke="white"\n                    stroke-width="${o}"\n                    stroke-linecap="round"\n                />`)}for(let e=0;e<i[0].length;e++)for(let n=0;n<i.length-1;n++){const s=i[n][e],a=i[n+1][e],r=Math.sqrt(((s.x+a.x)/2)**2+((s.y+a.y)/2)**2),o=this.lineThickness*(1-Math.min(.35,(r/420)**1.2));t.push(`<line \n                    x1="${s.x}" \n                    y1="${s.y}" \n                    x2="${a.x}" \n                    y2="${a.y}"\n                    stroke="white"\n                    stroke-width="${o}"\n                    stroke-linecap="round"\n                />`)}return t.join("")}generateShape(){return this.resetRNG(),"radial"===this.gridStyle?this.generateRadialGrid():this.generateSquareGrid()}}const a=s},5436:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={petalCount:{min:3,max:24,default:12},outerRadius:{min:40,max:100,default:90},innerRadius:{min:10,max:50,default:35},centerSize:{min:0,max:100,default:25},petalSpread:{min:0,max:100,default:50},petalPointiness:{min:0,max:100,default:50}};generatePetalPath(t){this.petalCount=Math.round(this.petalCount);const e=2*Math.PI/this.petalCount/2,n=Math.cos(t)*this.innerRadius,i=Math.sin(t)*this.innerRadius,s=Math.cos(t)*this.outerRadius,a=Math.sin(t)*this.outerRadius,r=this.petalSpread/100,o=this.petalPointiness/100,h=this.innerRadius+(this.outerRadius-this.innerRadius)*(.2+.3*o),l=this.innerRadius+(this.outerRadius-this.innerRadius)*(.5+.3*o),d=e*(.3+.7*r),c=e*(.1+.5*r)*(1-.5*o),u=Math.cos(t-d)*h,m=Math.sin(t-d)*h,p=Math.cos(t-c)*l,f=Math.sin(t-c)*l,x=Math.cos(t+d)*h,g=Math.sin(t+d)*h;return`M ${n} ${i} \n                C ${u} ${m}, ${p} ${f}, ${s} ${a}\n                C ${Math.cos(t+c)*l} ${Math.sin(t+c)*l}, ${x} ${g}, ${n} ${i}`}generateShape(){this.petalCount=Math.round(this.petalCount);const t=2*Math.PI/this.petalCount,e=Math.PI/2;let n=[];for(let i=0;i<this.petalCount;i++){const s=i*t+e;n.push(this.generatePetalPath(s))}if(this.centerSize>0){const t=this.innerRadius*this.centerSize/100;n.push(`\n                <circle \n                    cx="0" \n                    cy="0" \n                    r="${t}"\n                    fill="white"\n                />\n            `)}return`\n            <g>\n                <path \n                    d="${n.filter((t=>!t.includes("circle"))).join(" ")}"\n                    fill="white"\n                />\n                ${n.filter((t=>t.includes("circle"))).join("")}\n            </g>\n        `}}const a=s},5515:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={linesCount:{min:4,max:16,default:12},minThickness:{min:1,max:10,default:2},maxThickness:{min:1,max:30,default:12},spacing:{min:1,max:25,default:12},height:{min:50,max:150,default:200},pattern:{options:["random","alternating","increasing","fibonacci"],default:"random"},lineCap:{options:["butt","round"],default:"butt"}};getThickness(t){switch(this.pattern){case"random":return this.minThickness+(this.maxThickness-this.minThickness)*this.random();case"alternating":return t%2==0?this.minThickness:this.maxThickness;case"increasing":const e=(this.maxThickness-this.minThickness)/(this.linesCount-1||1);return this.minThickness+t*e;case"fibonacci":{let e=0,n=0,i=1;for(let s=0;s<=t%10;s++){e=n;const t=n+i;n=i,i=t}const s=e%21/20;return this.minThickness+s*(this.maxThickness-this.minThickness)}default:return this.minThickness}}generateShape(){this.resetRNG();const t=[],e=-this.linesCount*this.spacing/2;for(let n=0;n<this.linesCount;n++){const i=e+n*this.spacing,s=this.getThickness(n);t.push(`<line \n                x1="${i}" \n                y1="${-this.height/2}" \n                x2="${i}" \n                y2="${this.height/2}"\n                stroke="white"\n                stroke-width="${s}"\n                stroke-linecap="${this.lineCap}"\n            />`)}return t.join("")}}const a=s},5536:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:100,max:250,default:220},height:{min:100,max:250,default:200},rows:{min:1,max:8,default:3},columns:{min:1,max:8,default:1},thickness:{min:1,max:10,default:2},spacing:{min:0,max:20,default:0},cornerRadius:{min:0,max:150,default:100},mode:{options:["stroke","fill"],default:"fill"}};calculateIntersection(t,e,n,i,s,a,r,o){const h=(t-n)*(a-o)-(e-i)*(s-r);return 0===h?null:[((t*i-e*n)*(s-r)-(t-n)*(s*o-a*r))/h,((t*i-e*n)*(a-o)-(e-i)*(s*o-a*r))/h]}calculateRoundedCorner(t,e,n,i){const s=Math.atan2(e[1]-t[1],e[0]-t[0]),a=Math.atan2(n[1]-e[1],n[0]-e[0]),r=-Math.sin(s)*i,o=Math.cos(s)*i,h=-Math.sin(a)*i,l=Math.cos(a)*i,d=t[0]+r,c=t[1]+o,u=e[0]+r,m=e[1]+o,p=e[0]+h,f=e[1]+l,x=n[0]+h,g=n[1]+l,y=this.calculateIntersection(d,c,u,m,p,f,x,g);return y?{center:y,startAngle:s-Math.PI/2,endAngle:a-Math.PI/2}:null}generateRoundedTrianglePath(t,e,n,i,s){const a=[[t+n/2,e],[t+n,e+i],[t,e+i]],r=s/100*(Math.min(n,i)/6);if(0===r)return`M ${a[0][0]},${a[0][1]} \n                    L ${a[1][0]},${a[1][1]} \n                    L ${a[2][0]},${a[2][1]} Z`;const o=[this.calculateRoundedCorner(a[1],a[2],a[0],r),this.calculateRoundedCorner(a[2],a[0],a[1],r),this.calculateRoundedCorner(a[0],a[1],a[2],r)];return o.some((t=>!t))?`M ${a[0][0]},${a[0][1]} \n                    L ${a[1][0]},${a[1][1]} \n                    L ${a[2][0]},${a[2][1]} Z`:`M ${o[0].center[0]+r*Math.cos(o[0].startAngle)},${o[0].center[1]+r*Math.sin(o[0].startAngle)}\n                A ${r},${r} 0 0 1 \n                  ${o[0].center[0]+r*Math.cos(o[0].endAngle)},\n                  ${o[0].center[1]+r*Math.sin(o[0].endAngle)}\n                L ${o[1].center[0]+r*Math.cos(o[1].startAngle)},\n                  ${o[1].center[1]+r*Math.sin(o[1].startAngle)}\n                A ${r},${r} 0 0 1 \n                  ${o[1].center[0]+r*Math.cos(o[1].endAngle)},\n                  ${o[1].center[1]+r*Math.sin(o[1].endAngle)}\n                L ${o[2].center[0]+r*Math.cos(o[2].startAngle)},\n                  ${o[2].center[1]+r*Math.sin(o[2].startAngle)}\n                A ${r},${r} 0 0 1 \n                  ${o[2].center[0]+r*Math.cos(o[2].endAngle)},\n                  ${o[2].center[1]+r*Math.sin(o[2].endAngle)}\n                Z`}generateShape(){const t=[],e=(this.width-this.spacing*(this.columns-1))/this.columns,n=(this.height-this.spacing*(this.rows-1))/this.rows,i=-this.width/2,s=-this.height/2;for(let a=0;a<this.rows;a++)for(let r=0;r<this.columns;r++){const o=i+r*(e+this.spacing),h=s+a*(n+this.spacing),l=this.generateRoundedTrianglePath(o,h,e,n,this.cornerRadius);t.push(`<path \n                    d="${l}"\n                    fill="${"fill"===this.mode?"white":"none"}"\n                    stroke="${"stroke"===this.mode?"white":"none"}"\n                    stroke-width="${this.thickness}"\n                />`)}return t.join("")}}const a=s},5612:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={height:{min:50,max:150,default:150},width:{min:10,max:100,default:100},segments:{min:5,max:60,default:32},thickness:{min:1,max:5,default:1},boxWidth:{min:4,max:50,default:32},boxHeight:{min:3,max:30,default:12},twist:{min:1,max:10,default:1},rotationX:{min:0,max:360,default:0},rotationY:{min:0,max:360,default:0}};generateShape(){const t=[],{height:e,width:n,segments:i,thickness:s,boxWidth:a,boxHeight:r,twist:o,rotationX:h,rotationY:l}=this,d=e/i,c=2*Math.PI*o/i,u=h*Math.PI/180,m=l*Math.PI/180,p=[];for(let t=0;t<i;t++){const i=t*c,o=t*d-e/2,h=Math.sin(i)*(n/2),l=Math.cos(i)*(n/2),f=Math.sin(i+Math.PI)*(n/2),x=Math.cos(i+Math.PI)*(n/2),g=a,y=a,$=this.rotate3D(h,o,l,u,m),M=this.rotate3D(f,o,x,u,m);p.push({svg:this.createProjectedRect($.x,$.y,$.z,g,r,s),z:$.z}),p.push({svg:this.createProjectedRect(M.x,M.y,M.z,y,r,s),z:M.z})}return p.sort(((t,e)=>t.z-e.z)),p.forEach((e=>{t.push(e.svg)})),t.join("")}rotate3D(t,e,n,i,s){const a=Math.cos(i),r=Math.sin(i),o=e*a-n*r,h=e*r+n*a,l=Math.cos(s),d=Math.sin(s);return{x:t*l+h*d,y:o,z:-t*d+h*l}}project(t,e,n){const i=400/(400+n);return{x:t*i,y:e*i,scale:i}}createProjectedRect(t,e,n,i,s,a){const r=this.project(t,e,n),o=i*r.scale,h=s*r.scale,l=r.x-o/2,d=r.y-h/2,c=.5*h,u="white",m="white";if(n>0)return`<rect \n                x="${l}" \n                y="${d}" \n                width="${o}" \n                height="${h}" \n                fill="${m}" \n                stroke="black" \n                stroke-width="${a}"\n            />`;{let t=`<rect \n                x="${l}" \n                y="${d}" \n                width="${o}" \n                height="${h}" \n                fill="${m}" \n                stroke="black" \n                stroke-width="${a}"\n            />`;const e=l-.3*c,n=d-.15*c;return t+=`<line \n                x1="${l}" \n                y1="${d}" \n                x2="${e}" \n                y2="${n}" \n                stroke="black" \n                stroke-width="${a}"\n            />`,t+=`<line \n                x1="${l+o}" \n                y1="${d}" \n                x2="${e+o}" \n                y2="${n}" \n                stroke="${u}" \n                stroke-width="${a}"\n            />`,t+=`<line \n                x1="${l}" \n                y1="${d+h}" \n                x2="${e}" \n                y2="${n+h}" \n                stroke="${u}" \n                stroke-width="${a}"\n            />`,t+=`<line \n                x1="${l+o}" \n                y1="${d+h}" \n                x2="${e+o}" \n                y2="${n+h}" \n                stroke="${u}" \n                stroke-width="${a}"\n            />`,t+=`<rect \n                x="${e}" \n                y="${n}" \n                width="${o}" \n                height="${h}" \n                fill="${m}" \n                stroke="black" \n                stroke-width="${a}"\n            />`,t}}}const a=s},5668:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:20,max:150,default:100},arcCount:{min:3,max:24,default:8},arcSpan:{min:0,max:120,default:5},connectorLength:{min:1,max:100,default:1},rotation:{min:-180,max:180,default:0}};generateShape(){this.arcCount=Math.round(this.arcCount);const t=[],e=2*Math.PI/this.arcCount,n=this.arcSpan*Math.PI/180,i=this.rotation*Math.PI/180;for(let s=0;s<this.arcCount;s++){const a=s*e+i,r=a-n/2,o=a+n/2,h=this.radius*Math.cos(r),l=this.radius*Math.sin(r),d=this.radius*Math.cos(o),c=this.radius*Math.sin(o),u=this.arcSpan>180?1:0,m=`M ${h} ${l} A ${this.radius} ${this.radius} 0 ${u} 1 ${d} ${c}`;if(t.push(`<path \n                d="${m}"\n                fill="white"\n            />`),this.connectorLength>0){const r=(s+1)%this.arcCount*e+i-n/2,o=this.radius*Math.cos(r),h=this.radius*Math.sin(r),l=`M ${d} ${c} Q ${this.connectorLength*Math.cos(a)} ${this.connectorLength*Math.sin(a)} ${o} ${h}`;t.push(`<path \n                    d="${l}"\n                    fill="white"\n                />`)}}return t.join("")}}const a=s},5727:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:50,max:100,default:90},arcCount:{min:2,max:12,default:5},spacing:{min:5,max:50,default:15},thickness:{min:1,max:10,default:8},startAngle:{min:-180,max:180,default:-135},endAngle:{min:-180,max:180,default:135},cornerRadius:{min:0,max:1,default:0},direction:{options:["right","down-right","down","down-left","left","up-left","up","up-right"],default:"up"}};generateShape(){const t=[],e=t=>t*Math.PI/180;let n=0;switch(this.direction){case"right":n=0;break;case"down-right":n=45;break;case"down":n=90;break;case"down-left":n=135;break;case"left":n=180;break;case"up-left":n=225;break;case"up":n=270;break;case"up-right":n=315}const i=this.radius,s=Math.max(10,.2*i),a=i-s,r=this.arcCount>1?a/(this.arcCount-1):0,o=Math.min(this.spacing,r);t.push(`<g transform="rotate(${n})">`);const h=e(this.startAngle),l=e(this.endAngle),d=l>h?1:0,c=Math.abs(this.endAngle-this.startAngle)>180?1:0;for(let e=0;e<this.arcCount;e++){let n;if(n=this.arcCount>1?i-e*o:i,n<s)break;const a=this.thickness,r=`<path \n                d="M ${Math.cos(h)*n} ${Math.sin(h)*n} A ${n} ${n} 0 ${c} ${d} ${Math.cos(l)*n} ${Math.sin(l)*n}"\n                stroke="white"\n                stroke-width="${a}"\n                fill="none"\n                stroke-linecap="${this.cornerRadius>0?"round":"butt"}"\n            />`;t.push(r)}return t.push("</g>"),t.join("")}}const a=s},5737:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={arms:{min:4,max:12,default:8},armLength:{min:20,max:120,default:100},armWidth:{min:5,max:30,default:30},innerRadius:{min:0,max:50,default:0}};generateShape(){this.arms=Math.round(this.arms);const t=[],e=2*Math.PI/this.arms;for(let n=0;n<this.arms;n++){const i=n*e,s=i+Math.PI/2,a=this.armWidth/2,r=this.innerRadius*Math.cos(i),o=this.innerRadius*Math.sin(i),h=this.armLength*Math.cos(i),l=this.armLength*Math.sin(i),d={x:r+a*Math.cos(s),y:o+a*Math.sin(s)},c={x:r-a*Math.cos(s),y:o-a*Math.sin(s)},u={x:h-a*Math.cos(s),y:l-a*Math.sin(s)},m={x:h+a*Math.cos(s),y:l+a*Math.sin(s)},p=`<path d="M ${d.x} ${d.y} \n                L ${c.x} ${c.y} \n                L ${u.x} ${u.y} \n                L ${m.x} ${m.y} Z"\n                fill="white"\n            />`;t.push(p)}return t.join("")}}const a=s},5825:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:400,default:200},segments:{min:2,max:8,default:4},skew:{min:-90,max:90,default:0}};generateShape(){const t=this.size/2,e=this.size/(2*this.segments),n=[],i=e/2,s=this.skew/45*i;n.push(`M ${-t} ${-t}`);for(let i=0;i<=2*this.segments;i++){const a=i%2==0,r=i*e-t+(a?0:s),o=-t+(a?0:this.size);n.push(`L ${r} ${o}`)}return n.push(`L ${t} ${t}`),n.push(`L ${-t} ${t}`),n.push("Z"),`<path \n            d="${n.join(" ")}"\n            fill="white"\n        />`}}const a=s},5846:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={branchLength:{min:40,max:150,default:80},branchCount:{min:3,max:8,default:5},thickness:{min:2,max:12,default:6},spread:{min:30,max:120,default:75},bulbSize:{min:5,max:25,default:15}};generateShape(){this.branchCount=Math.round(this.branchCount);const t=.25*this.branchLength,e=.4*+this.branchLength,n=.6*t+e,i={x:0,y:e},s=`M 0 ${n} \n                     C 0 ${n-.3*t}, \n                       ${i.x} ${i.y+.1*t}, \n                       ${i.x} ${i.y}`,a=[];if(this.branchCount>0){const t=this.spread*Math.PI/180,e=-Math.PI/2-t/2;for(let n=0;n<this.branchCount;n++){const s=n/Math.max(1,this.branchCount-1),r=e+s*t,o=1-.15*Math.pow(2*(s-.5),2),h=this.branchLength*o,l=1-.2*Math.pow(2*(s-.5),2),d=this.bulbSize*l,c=this.createBranch(i,r,h,this.thickness*(.9+.1*o),d);a.push(c)}}return`\n            <g>\n                <path \n                    d="${s}"\n                    stroke="white"\n                    stroke-width="${2.5*this.thickness}"\n                    stroke-linecap="round"\n                    stroke-linejoin="round"\n                    fill="none"\n                />\n                ${a.join("\n")}\n            </g>\n        `}createBranch(t,e,n,i,s){const a=t.x+n*Math.cos(e),r=t.y+n*Math.sin(e),o=t.x+.35*n*Math.cos(e),h=t.y+.35*n*Math.sin(e),l=t.x+.65*n*Math.cos(e),d=t.y+.65*n*Math.sin(e);return`\n            <path \n                d="M ${t.x} ${t.y} \n                           C ${o} ${h}, \n                             ${l} ${d}, \n                             ${a} ${r}"\n                stroke="white"\n                stroke-width="${i}"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n                fill="none"\n            />\n            <circle \n                cx="${a}"\n                cy="${r}"\n                r="${s}"\n                fill="white"\n            />\n        `}}window.Shape=s;const a=s},5879:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:200,default:150},cornerLength:{min:20,max:80,default:40},thickness:{min:1,max:20,default:10}};generateShape(){const t=this.size/2,e=this.cornerLength,n=[];return n.push(`<path\n            d="M ${-t} ${-t+e} L ${-t} ${-t} L ${-t+e} ${-t}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n            stroke-linejoin="miter"\n        />`),n.push(`<path\n            d="M ${t-e} ${-t} L ${t} ${-t} L ${t} ${-t+e}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n            stroke-linejoin="miter"\n        />`),n.push(`<path\n            d="M ${t} ${t-e} L ${t} ${t} L ${t-e} ${t}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n            stroke-linejoin="miter"\n        />`),n.push(`<path\n            d="M ${-t+e} ${t} L ${-t} ${t} L ${-t} ${t-e}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n            stroke-linejoin="miter"\n        />`),n.push(`<path\n            d="M ${-t} ${-t} L ${t} ${t}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`),n.push(`<path\n            d="M ${t} ${-t} L ${-t} ${t}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`),n.join("")}}const a=s},5898:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={length:{min:100,max:250,default:180},width:{min:50,max:150,default:100},veins:{min:4,max:12,default:8},curvature:{min:0,max:1,default:.6},veinAngle:{min:20,max:70,default:45},thickness:{min:1,max:5,default:3}};generateShape(){const t=[],e=0+this.length/2,n=0-this.length/2;t.push(`<line \n            x1="0" \n            y1="${e}" \n            x2="0" \n            y2="${n}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n        />`);for(let n=0;n<this.veins;n++){const i=n/(this.veins-1),s=e-i*this.length,a=-this.veinAngle*(Math.PI/180),r=this.width*Math.sin(Math.PI*i),o={x:0,y:s},h={x:0-r*Math.cos(a),y:s+r*Math.sin(a)},l={x:o.x-r*this.curvature,y:o.y+r*this.curvature*.5},d={x:0+r*Math.cos(a),y:s+r*Math.sin(a)},c={x:o.x+r*this.curvature,y:o.y+r*this.curvature*.5};t.push(`<path \n                d="M ${o.x} ${o.y} Q ${l.x} ${l.y} ${h.x} ${h.y}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="round"\n                fill="none"\n            />`),t.push(`<path \n                d="M ${o.x} ${o.y} Q ${c.x} ${c.y} ${d.x} ${d.y}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="round"\n                fill="none"\n            />`)}return t.join("")}}const a=s},5913:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={cubeSize:{min:50,max:200,default:120},pyramidHeight:{min:20,max:150,default:80},perspective:{min:.1,max:.5,default:.3},thickness:{min:1,max:5,default:2},rotation:{min:-45,max:45,default:15}};rotatePoint(t,e,n){const i=n*Math.PI/180,s=t.x-e.x,a=t.y-e.y,r=s*Math.cos(i)-a*Math.sin(i),o=s*Math.sin(i)+a*Math.cos(i);return{x:e.x+r,y:e.y+o}}generateShape(){const t={x:0,y:0},e=this.cubeSize,n=this.pyramidHeight,i=e*this.perspective,s={x:t.x-e/2,y:t.y+e/2},a={x:t.x+e/2,y:t.y+e/2},r={x:s.x-i,y:s.y-i},o={x:a.x-i,y:a.y-i},h=this.rotatePoint(s,t,this.rotation),l=this.rotatePoint(a,t,this.rotation),d=this.rotatePoint(r,t,this.rotation),c=this.rotatePoint(o,t,this.rotation),u=this.rotatePoint({x:t.x-i/2,y:t.y-n},t,this.rotation),m=[];return m.push(`<path d="\n            M ${h.x} ${h.y}\n            L ${l.x} ${l.y}\n            L ${c.x} ${c.y}\n            L ${d.x} ${d.y}\n            Z"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n            fill="none"\n        />`),m.push(`<path d="\n            M ${h.x} ${h.y}\n            L ${u.x} ${u.y}\n            L ${l.x} ${l.y}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n            fill="none"\n        />`),m.push(`<path d="\n            M ${d.x} ${d.y}\n            L ${u.x} ${u.y}\n            L ${c.x} ${c.y}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n            fill="none"\n        />`),m.join("")}}const a=s},5925:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={bodyWidth:{min:40,max:200,default:100},bodyHeight:{min:40,max:200,default:120},headSize:{min:20,max:100,default:50},shoulderWidth:{min:40,max:250,default:160},legSpread:{min:0,max:60,default:30}};generateShape(){const t=1*this.bodyWidth,e=1*this.bodyHeight,n=1*this.headSize,i=1*this.shoulderWidth,s=1*this.legSpread,a=[`${0-t/2-s},${0+e/2}`,`${0-i/2},${0-e/6}`,`${0-n/2},${0-e/6}`,`${0-n/2},${0-e/2}`,`${0+n/2},${0-e/2}`,`${0+n/2},${0-e/6}`,`${0+i/2},${0-e/6}`,`${0+t/2+s},${0+e/2}`];return`<path \n            d="M ${a[0]} L ${a[1]} L ${a[2]} L ${a[3]} L ${a[4]} L ${a[5]} L ${a[6]} L ${a[7]} Z"\n            fill="white"\n        />`}}const a=s},5955:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={innerRatio:{min:.7,max:.9,default:.65},cornerRadius:{min:5,max:100,default:35}};generateShape(){const t=150*this.innerRatio,e=t/2,n=Math.min(this.cornerRadius,37.5),i=n/2;return`<path d="${this.createRoundedRectPath(-75,-75,150,150,n)} ${this.createRoundedRectPath(-e,-e,t,t,i)}"\n                  fill="white"\n                  fill-rule="evenodd"/>`}createRoundedRectPath(t,e,n,i,s){const a=Math.min(s,n/2,i/2);return[`M ${t+a} ${e}`,"h "+(n-2*a),`a ${a} ${a} 0 0 1 ${a} ${a}`,"v "+(i-2*a),`a ${a} ${a} 0 0 1 -${a} ${a}`,"h -"+(n-2*a),`a ${a} ${a} 0 0 1 -${a} -${a}`,"v -"+(i-2*a),`a ${a} ${a} 0 0 1 ${a} -${a}`,"Z"].join(" ")}}const a=s},6005:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:200,default:100},spacing:{min:0,max:100,default:30},cornerRadius:{min:0,max:50,default:20}};createRoundedRect(t,e,n,i,s){return[`M ${t+s} ${e}`,"H "+(t+n-s),`A ${s} ${s} 0 0 1 ${t+n} ${e+s}`,"V "+(e+i-s),`A ${s} ${s} 0 0 1 ${t+n-s} ${e+i}`,`H ${t+s}`,`A ${s} ${s} 0 0 1 ${t} ${e+i-s}`,`V ${e+s}`,`A ${s} ${s} 0 0 1 ${t+s} ${e}`,"Z"].join(" ")}generateShape(){const t=.8*this.size,e=.8*this.spacing,n=.8*this.cornerRadius;return[[0,-1],[1,0],[0,1],[-1,0]].map((([i,s])=>{const a=0+i*e-t/2,r=0+s*e-t/2;return this.createRoundedRect(a,r,t,t,n)})).map((t=>`\n            <path \n                d="${t}"\n                fill="none"\n                stroke="white"\n                stroke-width="2"\n            />\n        `)).join("\n")}}const a=s},6017:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:4,max:12,default:8},fillPercentage:{min:20,max:80,default:60},cornerRadius:{min:0,max:8,default:2},gapSize:{min:2,max:10,default:4},uniformity:{min:0,max:100,default:30},complexity:{min:1,max:5,default:3},emphasis:{options:["horizontal","vertical","balanced"],default:"balanced"},symmetry:{min:0,max:100,default:0}};generateShape(){this.resetRNG();const t=(180-(this.gridSize-1)*this.gapSize)/this.gridSize,e=Array(this.gridSize).fill().map((()=>Array(this.gridSize).fill(!1)));this.generateTechPattern(e);const n=[];for(let i=0;i<this.gridSize;i++)for(let s=0;s<this.gridSize;s++)if(e[i][s]){const a=s*(t+this.gapSize)-90,r=i*(t+this.gapSize)-90;let o=t,h=t;"vertical"!==this.emphasis&&(o=this.extendHorizontally(e,s,i)*(t+this.gapSize)-this.gapSize),"horizontal"!==this.emphasis&&(h=this.extendVertically(e,s,i)*(t+this.gapSize)-this.gapSize),n.push(`<rect \n                        x="${a}" \n                        y="${r}" \n                        width="${o}" \n                        height="${h}"\n                        rx="${this.cornerRadius}"\n                        ry="${this.cornerRadius}"\n                        fill="white"\n                    />`);const l=o/(t+this.gapSize)+.1,d=h/(t+this.gapSize)+.1;for(let t=0;t<d;t++)for(let n=0;n<l;n++)s+n<this.gridSize&&i+t<this.gridSize&&(e[i+t][s+n]=!1);e[i][s]=!0}return n.join("")}generateTechPattern(t){for(let e=0;e<this.gridSize;e++)for(let n=0;n<this.gridSize;n++){if(this.symmetry>0&&100*this.random()<this.symmetry){const i=this.gridSize/2,s=this.gridSize/2,a=Math.floor(2*i)-n,r=Math.floor(2*s)-e;if(a>=0&&a<this.gridSize&&r>=0&&r<this.gridSize){t[e][n]=t[r][a];continue}}let i=this.fillPercentage;if(this.uniformity<100){const t=(100-this.uniformity)/100,s=this.getPatternFactor(n,e);i=this.fillPercentage*(1-t)+s*t*100}t[e][n]=100*this.random()<i}this.addComplexityFeatures(t)}getPatternFactor(t,e){const n=this.gridSize/2,i=this.gridSize/2,s=(t-n)/this.gridSize,a=(e-i)/this.gridSize,r=2*Math.sqrt(s*s+a*a),o=Math.atan2(a,s)/Math.PI,h=1-e/this.gridSize,l=1-r,d=(Math.sin(4*o)+1)/2,c=t%2*.5+e%3*.3;switch(this.seed%4){case 0:return.6*h+.4*d;case 1:return.7*l+.3*c;case 2:return.5*d+.5*c;case 3:return.4*h+.6*l;default:return h}}addComplexityFeatures(t){if(this.complexity<=1)return;const e=Math.max(1,Math.floor((this.complexity-1)*this.gridSize/2));for(let n=0;n<e;n++){const e=Math.floor(4*this.random()),n=Math.floor(this.random()*(this.gridSize-2)),i=Math.floor(this.random()*(this.gridSize-2));switch(e){case 0:t[i][n]=!0,t[i+1][n]=!0,t[i+1][n+1]=!0;break;case 1:t[i][n]=!0,t[i][n+1]=!0,t[i+1][n+1]=!0;break;case 2:n>0&&i>0&&n<this.gridSize-1&&i<this.gridSize-1&&(t[i][n]=!0,t[i-1][n]=!0,t[i+1][n]=!0,t[i][n-1]=!0,t[i][n+1]=!0);break;case 3:t[i][n]=!0,t[i][n+1]=!0,t[i+1][n]=!0,t[i+1][n+1]=!0}}}extendHorizontally(t,e,n){let i=1,s=e+1;for(;s<this.gridSize&&t[n][s];)i++,s++;return i}extendVertically(t,e,n){let i=1,s=n+1;for(;s<this.gridSize&&t[s][e];)i++,s++;return i}}const a=s},6090:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={branches:{min:4,max:8,default:6},depth:{min:2,max:6,default:3},spread:{min:30,max:100,default:60},curvature:{min:60,max:120,default:60},thickness:{min:1,max:6,default:3}};drawBranch(t,e,n,i,s){const a={x:t.x+n*Math.cos(e),y:t.y+n*Math.sin(e)},r=n*Math.min(.5,(this.curvature-60)/120),o=t.x+.5*n*Math.cos(e)-r*Math.sin(e),h=t.y+.5*n*Math.sin(e)+r*Math.cos(e);if(s.push(`M ${t.x} ${t.y}`),s.push(`Q ${o} ${h}, ${a.x} ${a.y}`),i>1){const t=.6*n,r=Math.PI/6;this.drawBranch(a,e-r,t,i-1,s),this.drawBranch(a,e+r,t,i-1,s)}}generateShape(){const t=200/(this.spread*(this.depth+1)),e=this.spread*t,n=[],i=Math.round(this.branches),s=2*Math.PI/i,a={x:0,y:0};for(let t=0;t<i;t++){const i=t*s;this.drawBranch(a,i,e,Math.round(this.depth),n)}return`<path \n            d="${n.join(" ")}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n        />`}}const a=s},6099:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={count:{min:3,max:12,default:5},spacing:{min:5,max:50,default:24},width:{min:100,max:200,default:169},direction:{min:-1,max:1,default:.9,step:.1},minHeight:{min:2,max:20,default:9},maxHeight:{min:20,max:80,default:80},mode:{options:["fill","stroke"],default:"fill"},thickness:{min:1,max:10,default:2}};calculateHeights(){const t=new Array(this.count),e=this.maxHeight-this.minHeight;if(Math.abs(this.direction)<=.1){const n=Math.floor((this.count-1)/2);for(let i=0;i<this.count;i++){const s=Math.abs(i-n)/(this.count-1);t[i]=this.maxHeight-s*e*2}}else for(let n=0;n<this.count;n++){const i=this.direction>0?n/(this.count-1):1-n/(this.count-1);t[n]=this.minHeight+i*e}return t}generateShape(){this.boundary=200;const t=this.calculateHeights(),e=(this.count-1)*this.spacing+t.reduce(((t,e)=>t+e),0),n=Math.min(1,this.boundary/e),i=e*n,s=this.spacing*n;let a=-i/2;return t.map((t=>{const e=t*n,i=`<rect \n                x="${-this.width/2}"\n                y="${a}"\n                width="${this.width}"\n                height="${e}"\n                fill="${"fill"===this.mode?"white":"none"}"\n                stroke="${"stroke"===this.mode?"white":"none"}"\n                stroke-width="${"stroke"===this.mode?this.thickness:0}"\n            />`;return a+=e+s,i})).join("")}}const a=s},6125:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={zigzagDepth:{min:5,max:40,default:13},zigzagCount:{min:3,max:12,default:6},thickness:{min:1,max:10,default:2}};generateShape(){const t=(t,e)=>{const n=e.x-t.x,i=e.y-t.y;return Math.sqrt(n*n+i*i)},e=.8*this.zigzagDepth,n=Math.round(this.zigzagCount),i=(200-2*e-.8*this.thickness*2)/2;let s=[];for(let a=0;a<4;a++){const r=a*Math.PI/2,o={x:0+Math.cos(r)*i,y:0+Math.sin(r)*i},h=(a+1)*Math.PI/2,l={x:0+Math.cos(h)*i,y:0+Math.sin(h)*i},d=t(o,l),c=d/n,u={x:(l.x-o.x)/d,y:(l.y-o.y)/d},m={x:-u.y,y:u.x};for(let t=0;t<n;t++){const i={x:o.x+u.x*c*t,y:o.y+u.y*c*t},r={x:i.x+u.x*(c/2)+m.x*e,y:i.y+u.y*(c/2)+m.y*e};if(0===t&&0===a&&s.push(["M",i.x,i.y]),s.push(["L",r.x,r.y]),t<n-1||a<3){const e={x:o.x+u.x*c*(t+1),y:o.y+u.y*c*(t+1)};s.push(["L",e.x,e.y])}}}return s.push(["Z"]),`<path \n            d="${s.map((t=>t.join(" "))).join(" ")}"\n            fill="white"\n        />`}}const a=s},6164:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={count:{min:2,max:12,default:5},spacing:{min:5,max:50,default:24},width:{min:100,max:300,default:169},direction:{min:-.5,max:.5,default:.5},minHeight:{min:2,max:20,default:9},maxHeight:{min:20,max:80,default:80}};calculateHeights(){const t=new Array(this.count).fill(0),e=(this.count-1)/2,n=this.maxHeight-this.minHeight,i=1-Math.min(1,3*Math.abs(this.direction));for(let s=0;s<this.count;s++){const a=Math.abs(s-e)/e,r=this.maxHeight-a*n,o=this.direction>0?s/(this.count-1):1-s/(this.count-1),h=this.minHeight+o*n;t[s]=r*i+h*(1-i)}return t}generateShape(){const t=this.calculateHeights(),e=(this.count-1)*this.spacing+t.reduce(((t,e)=>t+e),0),n=200/this.width,i=200/e,s=.8*Math.min(n,i),a=this.width*s,r=this.spacing*s,o=t.map((t=>t*s)),h=-a/2;let l=-((this.count-1)*r+o.reduce(((t,e)=>t+e),0))/2;const d=[];for(let t=0;t<o.length;t++){const e=o[t];d.push(`<ellipse\n                cx="${h+a/2}"\n                cy="${l+e/2}"\n                rx="${a/2}"\n                ry="${e/2}"\n                fill="white"\n            />`),l+=e+r}return d.join("\n")}}const a=s},6244:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:200,default:150},notchDepth:{min:5,max:40,default:20},notchWidth:{min:10,max:60,default:30},cornerRadius:{min:0,max:40,default:15}};generateShape(){const t=this.size/2,e=(this.size-2*this.cornerRadius)/4;let n="";const i=(t,i)=>{const s=i.x-t.x,a=i.y-t.y,r=Math.sqrt(s*s+a*a),o=s/r,h=a/r,l=-h,d=o;n+=`L ${t.x+e*o} ${t.y+e*h} `;for(let i=0;i<3;i++){const s={x:t.x+e*(i+1)*o,y:t.y+e*(i+1)*h};n+=`L ${s.x-this.notchWidth/2*o} ${s.y-this.notchWidth/2*h} `,n+=`L ${s.x+this.notchDepth*l} ${s.y+this.notchDepth*d} `,n+=`L ${s.x+this.notchWidth/2*o} ${s.y+this.notchWidth/2*h} `}n+=`L ${i.x} ${i.y} `};this.cornerRadius>0?(n=`M ${-t} ${-t+this.cornerRadius} `,n+=`A ${this.cornerRadius} ${this.cornerRadius} 0 0 0 ${-t+this.cornerRadius} ${-t} `):n=`M ${-t+this.cornerRadius} ${-t} `;const s={x:-t+this.cornerRadius,y:-t},a={x:t-this.cornerRadius,y:-t},r={x:t-this.cornerRadius,y:t},o={x:-t+this.cornerRadius,y:t};return i(s,a),this.cornerRadius>0&&(n+=`A ${this.cornerRadius} ${this.cornerRadius} 0 0 0 ${t} ${-t+this.cornerRadius} `),i({x:t,y:-t+this.cornerRadius},{x:t,y:t-this.cornerRadius}),this.cornerRadius>0&&(n+=`A ${this.cornerRadius} ${this.cornerRadius} 0 0 0 ${t-this.cornerRadius} ${t} `),i(r,o),this.cornerRadius>0&&(n+=`A ${this.cornerRadius} ${this.cornerRadius} 0 0 0 ${-t} ${t-this.cornerRadius} `),i({x:-t,y:t-this.cornerRadius},{x:-t,y:-t+this.cornerRadius}),this.cornerRadius>0&&(n+=`A ${this.cornerRadius} ${this.cornerRadius} 0 0 0 ${-t} ${-t+this.cornerRadius} `),n+="Z",`\n            <path\n                d="${n}"\n                fill="white"\n            />\n        `}}const a=s},6272:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:50,max:200,default:120},height:{min:80,max:250,default:160},cutoutHeight:{min:10,max:60,default:30},cornerRadius:{min:0,max:40,default:20},sideWidth:{min:20,max:80,default:40}};generateShape(){const t=1*this.width,e=1*this.height,n=1*this.cutoutHeight,i=1*this.cornerRadius,s=t-1*this.sideWidth*2,a=this.roundedRectPath(-t/2,-e/2,t,e,i),r=this.roundedRectPath(-s/2,-n/2,s,n,i),o=`mask-${Math.random().toString(36).substr(2,9)}`;return`\n            <defs>\n                <mask id="${o}">\n                    <path \n                        d="${a}"\n                        fill="white"\n                    />\n                    <path \n                        d="${r}"\n                        fill="black"\n                    />\n                </mask>\n            </defs>\n            <rect \n                x="${-t/2}"\n                y="${-e/2}"\n                width="${t}"\n                height="${e}"\n                fill="white"\n                mask="url(#${o})"\n            />`}roundedRectPath(t,e,n,i,s){const a=Math.min(s,Math.min(n/2,i/2));return`M${t+a},${e}\n            h${n-2*a}\n            a${a},${a} 0 0 1 ${a},${a}\n            v${i-2*a}\n            a${a},${a} 0 0 1 -${a},${a}\n            h-${n-2*a}\n            a${a},${a} 0 0 1 -${a},-${a}\n            v-${i-2*a}\n            a${a},${a} 0 0 1 ${a},-${a}\n            z`}}const a=s},6314:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,s,a){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(i)for(var o=0;o<this.length;o++){var h=this[o][0];null!=h&&(r[h]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);i&&r[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),s&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=s):d[4]="".concat(s)),e.push(d))}},e}},6440:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={circleCount:{min:3,max:12,default:4},circleSize:{min:40,max:80,default:40},thickness:{min:2,max:10,default:4},spacing:{min:25,max:85,default:60},innerRadius:{min:20,max:60,default:20}};generateShape(){this.circleCount=Math.round(this.circleCount);const t=[],e=2*Math.PI/this.circleCount;for(let n=0;n<this.circleCount;n++){const i=n*e,s=(n+1)%this.circleCount*e,a=this.spacing*Math.cos(i),r=this.spacing*Math.sin(i),o=this.spacing*Math.cos(s),h=this.spacing*Math.sin(s),l=this.innerRadius*Math.cos(i),d=this.innerRadius*Math.sin(i);t.push(`<circle \n                cx="${a}" \n                cy="${r}" \n                r="${this.circleSize/2}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                fill="none"\n            />`),t.push(`<line \n                x1="${a}" \n                y1="${r}" \n                x2="${l}" \n                y2="${d}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="round"\n            />`),t.push(`<line \n                x1="${a}" \n                y1="${r}" \n                x2="${o}" \n                y2="${h}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="round"\n            />`)}return t.push(`<circle \n            cx="0" \n            cy="0" \n            r="${this.circleSize/2}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`),t.join("")}}const a=s},6487:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={armLength:{min:20,max:100,default:60},armWidth:{min:10,max:100,default:30},endRadius:{min:0,max:50,default:0}};generateArmPoints(t){const e=this.armLength,n=this.armWidth/2,i=Math.min(this.endRadius,n);return[[n,n],[n,e-i],[n-i,e],[-n+i,e],[-n,e-i],[-n,n]].map((([e,n])=>{const i=t*Math.PI/180;return[e*Math.cos(i)-n*Math.sin(i),e*Math.sin(i)+n*Math.cos(i)]}))}generateShape(){const t=[],e=[0,90,180,270],n=Math.min(this.endRadius,this.armWidth/2);for(let i=0;i<e.length;i++){const s=this.generateArmPoints(e[i]);0===i&&t.push(`M ${s[0][0]},${s[0][1]}`),t.push(`L ${s[1][0]},${s[1][1]}`),n>0?t.push(`A ${n} ${n} 0 0 1 ${s[2][0]},${s[2][1]}`,`L ${s[3][0]},${s[3][1]}`,`A ${n} ${n} 0 0 1 ${s[4][0]},${s[4][1]}`):t.push(`L ${s[2][0]},${s[2][1]}`,`L ${s[3][0]},${s[3][1]}`,`L ${s[4][0]},${s[4][1]}`),t.push(`L ${s[5][0]},${s[5][1]}`)}return t.push("Z"),`<path d="${t.join(" ")}" fill="white"/>`}}const a=s},6592:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={points:{min:3,max:10,default:8},radius:{min:10,max:150,default:78},thickness:{min:1,max:20,default:15},amplitude:{min:0,max:100,default:56},frequency:{min:1,max:8,default:4},phase:{min:-180,max:180,default:2},tension:{min:0,max:100,default:50},noise:{min:0,max:100,default:20}};generateShape(){const t=[],e=this.points,n=this.phase*Math.PI/180;for(let i=0;i<e;i++){const s=i/(e-1),a=(2*s-1)*this.radius;let r=Math.sin(s*Math.PI*2*this.frequency+n)*this.amplitude;if(this.noise>0){const t=this.noise/100*this.amplitude*.5;r+=Math.sin(12.9898*s+n)*Math.sin(78.233*s+n)*t}t.push([a,r])}let i=`M ${t[0][0]},${t[0][1]}`;const s=1-this.tension/100;for(let e=1;e<t.length;e++){const n=t[e-1],a=t[e],r=a[0]-n[0],o=(a[1],n[1],Math.min(.5*Math.abs(r),30)*s),h=[n[0]+o,n[1]],l=[a[0]-o,a[1]];i+=` C ${h[0]},${h[1]} ${l[0]},${l[1]} ${a[0]},${a[1]}`}return`<path \n            d="${i}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n        />`}}const a=s},6636:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={ringCount:{min:4,max:12,default:6},radius:{min:50,max:150,default:40},thickness:{min:1,max:8,default:5},spacing:{min:10,max:50,default:30},phase:{min:-180,max:180,default:45},waveAmplitude:{min:0,max:50,default:20},waveFrequency:{min:5,max:10,default:6}};getRadius(t,e,n,i,s){return e+s*Math.cos(t*n+i*Math.PI/180)}generateShape(){const t=.8,e=100-this.thickness*t,n=this.radius*t*.5,i=this.thickness*t,s=this.spacing*t*.5,a=this.waveAmplitude*t*.5,r=[];for(let t=0;t<this.ringCount;t++){const o=t/Math.max(1,this.ringCount-1),h=n+s*t,l=Math.min(h,e-a),d=360,c=2*Math.PI/d,u=[];for(let t=0;t<=d;t++){const e=t*c,n=this.getRadius(e,l,this.waveFrequency,this.phase+180*o,a),i=n*Math.cos(e),s=n*Math.sin(e);0===t?u.push(`M ${i} ${s}`):u.push(`L ${i} ${s}`)}u.push("Z"),r.push(`<path \n                d="${u.join(" ")}"\n                fill="none"\n                stroke="white"\n                stroke-width="${i}"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n            />`)}return r.join("\n")}}const a=s},6710:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={edgesMax:{min:5,max:20,default:12},edgesAttempts:{min:5,max:30,default:25},strokeWidth:{min:1,max:5,default:3},symmetry:{options:["reflect","rotate"],default:"rotate"}};generatePoints(){const t=[[1,1]],e=Math.min(this.edgesMax,this.edgesAttempts);for(let n=0;n<e;n++){const e=t[t.length-1],[n,i]=e;let s=!1,a=0;for(;!s&&a<this.edgesAttempts;){const e=Math.floor(3*this.random())-1,r=Math.floor(3*this.random())-1,o=n+e,h=i+r;o>=0&&o<=2&&h>=0&&h<=2&&(0!==e||0!==r)&&(t.push([o,h]),s=!0),a++}if(!s)break}return t}generateQuadrant(t,e){const n=e/2;return t.map(((i,s)=>{if(0===s)return"";const a=t[s-1];if(!a||!i)return"";const[r,o]=a,[h,l]=i;return`<line\n                x1="${r*n-e}"\n                y1="${o*n-e}"\n                x2="${h*n-e}"\n                y2="${l*n-e}"\n                stroke="white"\n                stroke-width="${this.strokeWidth}"\n                stroke-linecap="round"\n            />`})).join("")}generateShape(){this.resetRNG();const t=this.generatePoints(),e=this.generateQuadrant(t,60);return"reflect"===this.symmetry?`\n                <g>\n                    ${e}\n                    <g transform="scale(1, -1)">${e}</g>\n                    <g transform="scale(-1, 1)">${e}</g>\n                    <g transform="scale(-1, -1)">${e}</g>\n                </g>\n            `:`\n                <g>\n                    ${e}\n                    <g transform="rotate(90, 0, 0)">${e}</g>\n                    <g transform="rotate(180, 0, 0)">${e}</g>\n                    <g transform="rotate(270, 0, 0)">${e}</g>\n                </g>\n            `}}const a=s},6729:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={layers:{min:2,max:8,default:4},spacing:{min:10,max:50,default:25},pointiness:{min:.2,max:.8,default:.5},thickness:{min:1,max:10,default:3},lineCap:{options:["butt","round"],default:"round"}};generateShape(){const t=[];for(let e=0;e<this.layers;e++){const n=100-e*this.spacing;if(n<=0)continue;const i={x:0,y:0-n},s={x:0-n,y:0+n},a={x:0+n,y:0+n},r={x:0-n*this.pointiness,y:0},o={x:0+n*this.pointiness,y:0};t.push(`<line \n                x1="${i.x}" \n                y1="${i.y}" \n                x2="${r.x}" \n                y2="${r.y}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.lineCap}"\n            />`),t.push(`<line \n                x1="${r.x}" \n                y1="${r.y}" \n                x2="${s.x}" \n                y2="${s.y}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.lineCap}"\n            />`),t.push(`<line \n                x1="${i.x}" \n                y1="${i.y}" \n                x2="${o.x}" \n                y2="${o.y}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.lineCap}"\n            />`),t.push(`<line \n                x1="${o.x}" \n                y1="${o.y}" \n                x2="${a.x}" \n                y2="${a.y}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.lineCap}"\n            />`)}return t.join("")}}const a=s},6777:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={baseWidth:{min:40,max:120,default:80},baseHeight:{min:30,max:100,default:60},prongLength:{min:20,max:100,default:60},prongSpacing:{min:10,max:50,default:25},prongWidth:{min:4,max:20,default:8},cornerRadius:{min:0,max:20,default:5}};generateShape(){const t=1.5,e=this.baseWidth*t,n=this.baseHeight*t,i=this.prongLength*t,s=this.prongSpacing*t,a=this.prongWidth*t,r=this.cornerRadius*t,o=-n/2-i/3,h=o+n;return`\n            <g fill="white">\n                <path \n                    d="\n                        M ${-e/2+r} ${o}\n                        h ${e-2*r}\n                        q ${r} 0 ${r} ${r}\n                        v ${n-2*r}\n                        q 0 ${r} -${r} ${r}\n                        h -${e-2*r}\n                        q -${r} 0 -${r} -${r}\n                        v -${n-2*r}\n                        q 0 -${r} ${r} -${r}\n                        Z\n                    "\n                />\n                <rect\n                    x="${-s/2-a}"\n                    y="${h}"\n                    width="${a}"\n                    rx="${r}"\n                    ry="${r}"\n                    height="${i}"\n                />\n                <rect\n                    x="${s/2}"\n                    y="${h}"\n                    width="${a}"\n                    rx="${r}"\n                    ry="${r}"\n                    height="${i}"\n                />\n            </g>\n        `}}const a=s},6791:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={containerRadius:{min:50,max:100,default:80},circleCount:{min:3,max:50,default:10},minRadius:{min:5,max:15,default:10},maxRadius:{min:15,max:80,default:50},spacing:{min:0,max:10,default:2},placementAttempts:{min:50,max:1e3,default:200}};canPlaceCircle(t,e,n,i){if(Math.sqrt(e*e+n*n)+i>this.containerRadius)return!1;for(const s of t){const t=s.x-e,a=s.y-n;if(Math.sqrt(t*t+a*a)<s.radius+i+this.spacing)return!1}return!0}tryPlaceCircle(t,e){for(let n=0;n<this.placementAttempts;n++){const n=2*this.random()*Math.PI,i=this.random()*(this.containerRadius-e),s=i*Math.cos(n),a=i*Math.sin(n);if(this.canPlaceCircle(t,s,a,e))return{x:s,y:a,radius:e}}return null}getCirclePlacements(){this.resetRNG();const t=[];let e=3*this.circleCount;for(;t.length<this.circleCount&&e>0;){e--;const n=.3+t.length/this.circleCount*.7,i=this.maxRadius-(this.maxRadius-this.minRadius)*Math.pow(this.random(),1-n),s=this.tryPlaceCircle(t,i);s&&t.push(s)}return t}validateCirclesWithSpacing(t){for(const e of t)if(Math.sqrt(e.x*e.x+e.y*e.y)+e.radius>this.containerRadius)return!1;for(let e=0;e<t.length;e++)for(let n=e+1;n<t.length;n++){const i=t[e],s=t[n],a=i.x-s.x,r=i.y-s.y;if(Math.sqrt(a*a+r*r)<i.radius+s.radius+this.spacing)return!1}return!0}generateShape(){this.circlePlacements||(this.circlePlacements=this.getCirclePlacements());const t=JSON.parse(JSON.stringify(this.circlePlacements));if(!this.validateCirclesWithSpacing(t)){this.circlePlacements=this.getCirclePlacements();const t=JSON.parse(JSON.stringify(this.circlePlacements));if(!this.validateCirclesWithSpacing(t)){t.sort(((t,e)=>e.radius-t.radius));const e=[];for(const n of t)if(this.canPlaceCircle(e,n.x,n.y,n.radius)&&e.push(n),e.length>=this.circleCount)break;return this.renderCircles(e)}return this.renderCircles(t)}return this.renderCircles(t)}renderCircles(t){return t.map((t=>`<circle \n                cx="${t.x}" \n                cy="${t.y}" \n                r="${t.radius}"\n                fill="white"\n            />`)).join("")}}const a=s},6795:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={revolutions:{min:1,max:5,default:4},spacing:{min:10,max:50,default:20},thickness:{min:1,max:10,default:5},lineCap:{options:["butt","round"],default:"round"}};generateShape(){const t=[],e=Math.floor(50*this.revolutions);for(let n=0;n<=e;n++){const i=n/e*(2*this.revolutions*Math.PI),s=i/(2*Math.PI)*this.spacing,a=s*Math.cos(i),r=s*Math.sin(i);t.push([a,r])}return`<path \n            d="${t.reduce(((t,[e,n],i)=>t+(0===i?`M ${e} ${n}`:` L ${e} ${n}`)),"")}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="${this.lineCap}"\n        />`}}const a=s},6842:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={boardWidth:{min:100,max:200,default:200},boardHeight:{min:100,max:200,default:200},lineThickness:{min:1,max:10,default:3},nodeRadius:{min:2,max:10,default:4},chipSize:{min:20,max:80,default:40}};generateShape(){const t=.8,e=this.boardWidth*t,n=this.boardHeight*t,i=this.lineThickness*t,s=this.nodeRadius*t,a=this.chipSize*t,r=[],o=0-e/2,h=0-n/2,l=0-a/2,d=0-a/2;return r.push(`<rect\n           x="${l}"\n           y="${d}" \n           width="${a}"\n           height="${a}"\n           stroke="white"\n           stroke-width="${i}"\n           fill="none"\n       />`),[{x:o+8,y:h+8},{x:o+e-a-8,y:h+8},{x:o+8,y:h+n-a-8},{x:o+e-a-8,y:h+n-a-8}].forEach((t=>{r.push(`<rect\n               x="${t.x}"\n               y="${t.y}"\n               width="${a}"\n               height="${a}"\n               stroke="white" \n               stroke-width="${i}"\n               fill="none"\n           />`);const e=t.x+a/2,n=t.y+a/2;r.push(`<line\n               x1="${e}"\n               y1="${n}"\n               x2="0"\n               y2="0"\n               stroke="white"\n               stroke-width="${i}"\n               stroke-linecap="round"\n           />`),r.push(`<circle\n               cx="${e}"\n               cy="${n}"\n               r="${s}"\n               stroke="white"\n               stroke-width="${i}"\n               fill="none"\n           />`)})),r.push(`<circle\n           cx="0"\n           cy="0"\n           r="${s}"\n           stroke="white"\n           stroke-width="${i}"\n           fill="none"\n       />`),r.join("")}}const a=s},6865:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:50,max:100,default:100},meridians:{min:0,max:24,default:0},parallels:{min:0,max:24,default:7},thickness:{min:1,max:10,default:3}};generateShape(){const t=[];if(this.meridians>0){const e=Math.PI/(this.meridians+1);for(let n=1;n<=this.meridians;n++){const i=e*n,s=Math.abs(Math.cos(i));t.push(`<ellipse\n                    cx="0"\n                    cy="0"\n                    rx="${this.radius}"\n                    ry="${this.radius*s}"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    fill="none"\n                />`)}}if(this.parallels>0){const e=Math.PI/(this.parallels+1);for(let n=1;n<=this.parallels;n++){const i=e*n,s=Math.abs(Math.cos(i));t.push(`<ellipse\n                    cx="0"\n                    cy="0"\n                    rx="${this.radius*s}"\n                    ry="${this.radius}"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    fill="none"\n                />`)}}return t.push(`<circle \n            cx="0" \n            cy="0" \n            r="${this.radius}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n        />`),t.join("")}}const a=s},6910:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={waistWidth:{min:10,max:100,default:60},waistHeight:{min:10,max:100,default:30},endWidth:{min:25,max:100,default:80}};validateParams(t){const e={...t};return"waistWidth"in t&&(e.waistWidth=Math.min(t.waistWidth,t.endWidth||this.endWidth)),e}generateShape(){this.waistWidth=this.waistWidth/100,this.waistHeight=this.waistHeight/100,this.endWidth=this.endWidth/100;const t=75*this.endWidth,e=75*this.waistWidth,n=75*this.waistHeight;return`\n            <path d="M ${-t} -75 \n                     L 0 ${-n}\n                     L ${t} -75 Z" \n                  fill="white" />\n            <ellipse cx="0" cy="0" \n                     rx="${e}" ry="${n}" \n                     fill="white" />\n            <path d="M ${-t} 75\n                     L 0 ${n}\n                     L ${t} 75 Z" \n                  fill="white" />\n        `}}const a=s},6987:(t,e,n)=>{"use strict";n.d(e,{A:()=>i});const i=function(){function t(t,e,n){this.x=t,this.y=e,this.z=n}t.prototype.dot2=function(t,e){return this.x*t+this.y*e};const e=[new t(1,1,0),new t(-1,1,0),new t(1,-1,0),new t(-1,-1,0),new t(1,0,1),new t(-1,0,1),new t(1,0,-1),new t(-1,0,-1),new t(0,1,1),new t(0,-1,1),new t(0,1,-1),new t(0,-1,-1)],n=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],i=new Array(512),s=new Array(512);function a(t){t>0&&t<1&&(t*=65536),(t=Math.floor(t))<256&&(t|=t<<8);for(let a=0;a<256;a++){let r;r=1&a?n[a]^255&t:n[a]^t>>8&255,i[a]=i[a+256]=r,s[a]=s[a+256]=e[r%12]}}function r(t){return t*t*t*(t*(6*t-15)+10)}function o(t,e,n){return(1-n)*t+n*e}function h(t,e){const n=Math.floor(t),a=Math.floor(e);t-=n,e-=a;const h=255&n,l=255&a,d=s[h+i[l]].dot2(t,e),c=s[h+i[l+1]].dot2(t,e-1),u=s[h+1+i[l]].dot2(t-1,e),m=s[h+1+i[l+1]].dot2(t-1,e-1),p=r(t);return o(o(d,u,p),o(c,m,p),r(e))}return a(0),Math.sqrt(3),Math.sqrt(3),{seed:a,perlin2:h,noise:function(t,e){return h(t,e)}}}()},6990:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={rows:{min:1,max:8,default:3},squareSize:{min:10,max:50,default:50},thickness:{min:1,max:10,default:2},spacing:{min:0,max:20,default:8},fillStyle:{options:["stroke","fill"],default:"fill"}};generateShape(){const t=[],e=-this.rows*(this.squareSize+this.spacing)/2;for(let n=0;n<this.rows;n++){const i=n+1,s=-(i*(this.squareSize+this.spacing)-this.spacing)/2;for(let a=0;a<i;a++){const i=s+a*(this.squareSize+this.spacing),r=e+n*(this.squareSize+this.spacing);t.push(`<rect \n                    x="${i}"\n                    y="${r}"\n                    width="${this.squareSize}"\n                    height="${this.squareSize}"\n                    fill="${"fill"===this.fillStyle?"white":"none"}"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                />`)}}return t.join("")}}const a=s},7020:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={amplitude:{min:10,max:150,default:50},frequency:{min:1,max:10,default:2},phase:{min:-180,max:180,default:0},waveform:{options:["sine","smooth","sharp","bounce","clean","fluid"],default:"sine"},curve:{min:0,max:1,default:.5},pinch:{min:0,max:1,default:0},balance:{min:-1,max:1,default:0},tension:{min:0,max:1,default:.5}};getWaveValue(t,e){if(t=(t%1+1)%1,t=((t+=.2*this.balance)%1+1)%1,this.pinch>0){const e=1+2*this.pinch;t=Math.pow(t,e)/Math.pow(1,e-1)}let n=0;switch(e){case"sine":default:n=Math.sin(t*Math.PI*2);break;case"smooth":{const e=Math.sin(t*Math.PI*2),i=.5+1.5*this.tension;n=e*(1+.5*Math.pow(Math.abs(Math.sin(t*Math.PI)),i));break}case"sharp":{const e=1+4*this.curve;n=Math.pow(Math.sin(t*Math.PI*2),e);break}case"bounce":{const e=1+3*this.curve;n=Math.sin(t*Math.PI*2)*(1-Math.pow(Math.sin(t*Math.PI),e));break}case"clean":{const e=.5+.5*this.tension;n=Math.sin(t*Math.PI*2)*Math.pow(Math.sin(t*Math.PI),e);break}case"fluid":{this.curve;const e=Math.sin(t*Math.PI*2),i=Math.sin(t*Math.PI*4);n=e*(1-i*i*this.tension);break}}return this.curve>0&&(n=Math.sign(n)*Math.pow(Math.abs(n),1-.5*this.curve)),n}generateShape(){const t=this.phase*Math.PI/180,e=[];for(let n=0;n<=400;n++){const i=n/400,s=120*i-60,a=i*this.frequency+t/(2*Math.PI);let r=this.getWaveValue(a,this.waveform);r*=this.amplitude,e.push([s,r])}let n="M -60 0";for(let t=0;t<e.length;t++){const i=e[t],s=e[Math.max(0,t-1)];if(0===t)n+=` L ${i[0]} ${i[1]}`;else{const t=s[0]+(i[0]-s[0])/3,e=i[0]-(i[0]-s[0])/3;n+=` C ${t} ${s[1]} ${e} ${i[1]} ${i[0]} ${i[1]}`}}return n+=" L 60 0 Z",`<path \n            d="${n}"\n            fill="white"\n            stroke="none"\n        />`}}const a=s},7175:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={baseWidth:{min:100,max:200,default:200},columnWidth:{min:20,max:150,default:80},columnHeight:{min:50,max:150,default:120},baseHeight:{min:20,max:100,default:60},cornerRadius:{min:0,max:40,default:0}};generateShape(){const t=.8,e=this.baseWidth*t,n=this.columnWidth*t,i=this.columnHeight*t,s=this.baseHeight*t,a=this.cornerRadius*t,r=0-e/2,o=0-n/2,h=0+(i+s)/2-s,l=h-i,d=Math.min(a,e/2,s/2),c=Math.min(a,n/2,i/2);let u,m;return u=d>0?`\n                M ${r+d} ${h}\n                h ${e-2*d}\n                a ${d} ${d} 0 0 1 ${d} ${d}\n                v ${s-2*d}\n                a ${d} ${d} 0 0 1 -${d} ${d}\n                h -${e-2*d}\n                a ${d} ${d} 0 0 1 -${d} -${d}\n                v -${s-2*d}\n                a ${d} ${d} 0 0 1 ${d} -${d}\n                Z\n            `:`\n                M ${r} ${h}\n                h ${e}\n                v ${s}\n                h -${e}\n                v -${s}\n                Z\n            `,m=c>0?`\n                M ${o+c} ${l}\n                h ${n-2*c}\n                a ${c} ${c} 0 0 1 ${c} ${c}\n                v ${i-2*c}\n                a ${c} ${c} 0 0 1 -${c} ${c}\n                h -${n-2*c}\n                a ${c} ${c} 0 0 1 -${c} -${c}\n                v -${i-2*c}\n                a ${c} ${c} 0 0 1 ${c} -${c}\n                Z\n            `:`\n                M ${o} ${l}\n                h ${n}\n                v ${i}\n                h -${n}\n                v -${i}\n                Z\n            `,`<path d="${u.trim()} ${m.trim()}" fill="white"/>`}}const a=s},7178:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={waistWidth:{min:0,max:100,default:30},endWidth:{min:25,max:100,default:80},rounding:{min:0,max:100,default:0}};validateParams(t){const e={...t};if("waistWidth"in t){const n=t.endWidth||this.endWidth;e.waistWidth=Math.min(t.waistWidth,n-20)}return"endWidth"in t&&(e.endWidth=Math.max(t.endWidth,(t.waistWidth||this.waistWidth)+20)),e}generateShape(){this.waistWidth=this.waistWidth/100,this.endWidth=this.endWidth/100,this.rounding=this.rounding/100;const t=[{x:-75*this.endWidth,y:-75},{x:-75*this.waistWidth,y:0},{x:-75*this.endWidth,y:75},{x:75*this.endWidth,y:75},{x:75*this.waistWidth,y:0},{x:75*this.endWidth,y:-75}];if(0===this.rounding)return`<path d="${t.map(((t,e)=>(0===e?"M":"L")+` ${t.x} ${t.y}`)).join("")} Z" fill="white" />`;const e=.5*Math.min(Math.abs(t[0].y-t[1].y),Math.abs(t[1].y-t[2].y))*this.rounding;let n=`M ${t[0].x} ${t[0].y}`;for(let i=0;i<t.length;i++){const s=t[i],a=t[(i+1)%t.length],r=t[0===i?t.length-1:i-1],o={x:r.x-s.x,y:r.y-s.y},h={x:a.x-s.x,y:a.y-s.y},l=Math.sqrt(o.x*o.x+o.y*o.y),d=Math.sqrt(h.x*h.x+h.y*h.y),c={x:o.x/l,y:o.y/l},u={x:h.x/d,y:h.y/d},m={x:s.x+c.x*e,y:s.y+c.y*e},p={x:s.x+u.x*e,y:s.y+u.y*e};n+=` L ${m.x} ${m.y}`,n+=` Q ${s.x} ${s.y} ${p.x} ${p.y}`}return`<path d="${n} Z" fill="white" />`}}const a=s},7229:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:120,max:250,default:150},cornerRadius:{min:0,max:60,default:50},padding:{min:5,max:50,default:17},dotSize:{min:5,max:40,default:10},value:{min:1,max:9,default:5}};calculateOptimalParameters(){this.size;const t=this.size-2*this.padding,e=Math.min(t/5,this.dotSize);this.actualDotSize=e;const n=2.5*this.actualDotSize;this.dotOffset=Math.min((t-2*this.actualDotSize)/2,Math.max(n,(t-2*this.actualDotSize)/3))}getDotPositions(){const t={1:[[0,0]],2:[[-1,-1],[1,1]],3:[[-1,-1],[0,0],[1,1]],4:[[-1,-1],[1,-1],[-1,1],[1,1]],5:[[-1,-1],[1,-1],[0,0],[-1,1],[1,1]],6:[[-1,-1],[1,-1],[-1,0],[1,0],[-1,1],[1,1]],7:[[-1,-1],[1,-1],[-1,0],[0,0],[1,0],[-1,1],[1,1]],8:[[-1,-1],[0,-1],[1,-1],[-1,0],[1,0],[-1,1],[0,1],[1,1]],9:[[-1,-1],[0,-1],[1,-1],[-1,0],[0,0],[1,0],[-1,1],[0,1],[1,1]]};return t[this.value]||t[1]}generateShape(){this.calculateOptimalParameters();const t=this.size/2;return`\n            <path \n                d="${[`M${-t+this.cornerRadius},${-t}`,"h"+(this.size-2*this.cornerRadius),`q${this.cornerRadius},0 ${this.cornerRadius},${this.cornerRadius}`,"v"+(this.size-2*this.cornerRadius),`q0,${this.cornerRadius} ${-this.cornerRadius},${this.cornerRadius}`,"h"+(-this.size+2*this.cornerRadius),`q${-this.cornerRadius},0 ${-this.cornerRadius},${-this.cornerRadius}`,"v"+(-this.size+2*this.cornerRadius),`q0,${-this.cornerRadius} ${this.cornerRadius},${-this.cornerRadius}`,"Z"].join(" ")}"\n                fill="white"\n            />\n            ${this.getDotPositions().map((([t,e])=>`<circle cx="${t*this.dotOffset}" cy="${e*this.dotOffset}" r="${this.actualDotSize}" fill="black" />`)).join("")}\n        `}}const a=s},7235:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:20,max:150,default:80},rings:{min:1,max:8,default:4},thickness:{min:1,max:50,default:15},spacing:{min:5,max:50,default:20},rotation:{min:-360,max:360,default:-90},offset:{min:0,max:100,default:30}};generateShape(){const t=Math.min(this.rings,Math.floor(this.radius/this.spacing));if(t<=0)return"<g></g>";const e=[],n=this.rotation*Math.PI/180,i=`crescent-mask-${Math.random().toString(36).substr(2,9)}`;e.push(`\n            <defs>\n                <mask id="${i}">\n                    <rect x="-200" y="-200" width="400" height="400" fill="black"/>\n        `);for(let i=0;i<t;i++){const t=Math.pow(.85,i),s=Math.max(5,this.radius-i*this.spacing),a=Math.min(.8*s,this.thickness*t),r=n+i*Math.PI/16,o=Math.min(this.offset/100*s,.6*s),h=o*Math.cos(r),l=o*Math.sin(r),d=Math.max(1,s-a);e.push(`\n                <circle \n                    cx="0" \n                    cy="0" \n                    r="${s}"\n                    fill="white"\n                />\n                <circle \n                    cx="${h}" \n                    cy="${l}" \n                    r="${d}"\n                    fill="black"\n                />\n            `)}return e.push("\n                </mask>\n            </defs>\n        "),e.push(`\n            <rect \n                x="-200" \n                y="-200" \n                width="400" \n                height="400"\n                fill="white"\n                mask="url(#${i})"\n            />\n        `),e.join("")}}const a=s},7250:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={segments:{min:2,max:8,default:5},verticalWidth:{min:20,max:60,default:40},horizontalWidth:{min:60,max:200,default:135},thickness:{min:10,max:50,default:20},spacing:{min:30,max:80,default:40}};validateOptions(t){const e={...t};return"verticalWidth"in t&&"horizontalWidth"in t?t.verticalWidth>=t.horizontalWidth&&(e.verticalWidth=Math.min(t.verticalWidth,.5*t.horizontalWidth)):"verticalWidth"in t&&(e.verticalWidth=Math.min(t.verticalWidth,.5*this.horizontalWidth)),"thickness"in t&&"spacing"in t?e.spacing=Math.max(t.spacing,1.2*t.thickness):"thickness"in t&&(e.spacing=Math.max(this.spacing,1.2*t.thickness)),e}generateShape(){const t=[],e=(this.segments-1)*this.spacing,n=-e/2,i=`<rect \n            x="${-this.verticalWidth/2}"\n            y="${n-this.thickness/2}"\n            width="${this.verticalWidth}"\n            height="${e+this.thickness}"\n            fill="white"\n        />`;t.push(i);for(let e=0;e<this.segments;e++){const i=n+e*this.spacing,s=`<rect \n                x="${-this.horizontalWidth/2}"\n                y="${i-this.thickness/2}"\n                width="${this.horizontalWidth}"\n                height="${this.thickness}"\n                fill="white"\n            />`;t.push(s)}return t.join("")}}const a=s},7268:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={horizontalUnits:{min:3,max:8,default:4},verticalUnits:{min:3,max:8,default:4},padding:{min:10,max:40,default:20},symmetry:{min:0,max:2,default:1},variation:{min:0,max:2,default:1}};generateShape(){const t=Math.max(2,Math.round(this.horizontalUnits)),e=Math.max(2,Math.round(this.verticalUnits)),n=Math.max(0,this.padding),i=(200-2*n)/t,s=(200-2*n)/e,a=-i*t/2,r=-s*e/2,o=Array(e).fill().map((()=>Array(t).fill(!1)));this.applyPattern(o,t,e);const h=[];for(let n=0;n<e;n++)for(let e=0;e<t;e++)if(o[n][e]){const t=a+e*i,o=r+n*s;h.push(`M${t},${o} h${i} v${s} h${-i} Z`)}return`<path d="${h.join(" ")}" fill="white" />`}applyPattern(t,e,n){const i=Math.round(this.symmetry);switch(Math.round(this.variation)){case 0:for(let i=0;i<n;i++)for(let n=0;n<e;n++)t[i][n]=(i+n)%2==0;break;case 1:for(let i=0;i<n;i++)for(let n=0;n<e;n++)t[i][n]=n%2==0&&i%3!=1||n%2==1&&i%3==1;break;default:for(let i=0;i<n;i++)for(let n=0;n<e;n++)t[i][n]=(n+Math.floor(i/2))%2==0}i>0&&this.applySymmetry(t,e,n,i)}applySymmetry(t,e,n,i){const s=t.map((t=>[...t]));if(1===i){const i=Math.floor(n/2);for(let a=0;a<i;a++)for(let i=0;i<e;i++)t[n-1-a][i]=s[a][i]}else{const i=Math.floor(n/2),a=Math.floor(e/2);for(let r=0;r<i;r++)for(let i=0;i<a;i++)t[r][e-1-i]=s[r][i],t[n-1-r][i]=s[r][i],t[n-1-r][e-1-i]=s[r][i]}}}const a=s},7346:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>r});var i=n(1965),s=n(6987);class a extends i.y{static parameters={streamCount:{min:4,max:32,default:12},streamLength:{min:50,max:200,default:150},dropSpacing:{min:5,max:25,default:11},waveAmplitude:{min:0,max:50,default:30},waveFrequency:{min:.1,max:4,default:.5},dropSize:{min:1,max:8,default:5},phaseOffset:{min:-180,max:180,default:-180},noiseScale:{min:.01,max:.5,default:.31},noiseStrength:{min:0,max:100,default:100}};getNoise(t,e){return s.A.noise(t*this.noiseScale+this.seed,e*this.noiseScale+this.seed)}generateShape(){const{streamCount:t,streamLength:e,dropSpacing:n,waveAmplitude:i,waveFrequency:s,phaseOffset:a,noiseScale:r,noiseStrength:o,dropSize:h}=this,l=[],d=-t*n/2+n/2,c=Math.floor(e/n)+2;for(let r=0;r<t;r++){const u=d+r*n,m=a*Math.PI/180*r/t;for(let t=0;t<c;t++){const n=t/c,a=-e/2+n*e,d=i*Math.sin(2*Math.PI*n*s+m),p=Math.abs(n-.5);let f;f=p<.2?1:p<.35?1-5*(p-.2):.1;const x=u+d+this.getNoise(.2*r,2*n)*o*.05*f;let g=1;if(f>.5){const t=this.getNoise(.3*r+100,3*n+200);g=1+.3*(.7*Math.abs(Math.sin(2*Math.PI*n*s+m))+.3*t)*2}const y=Math.max(.5,h*g);l.push(`<circle \n                    cx="${x}" \n                    cy="${a}" \n                    r="${y/2}" \n                    fill="white"\n                />`)}}return l.join("")}}const r=a},7371:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={fieldSize:{min:60,max:150,default:150},gridSize:{min:4,max:16,default:16},noiseScale:{min:1,max:10,default:2},seed:{min:0,max:1e3,default:123}};getGridPoints(){const t=[],e=this.fieldSize/this.gridSize;for(let n=0;n<=this.gridSize;n++)for(let i=0;i<=this.gridSize;i++){const s=-this.fieldSize/2+i*e,a=-this.fieldSize/2+n*e;t.push({x:s,y:a})}return t}calculateFlowVectors(t){const e=[];for(let n=0;n<t.length;n++){const i=t[n];let s=Math.sin(.01*(i.x+this.seed)+this.noiseScale),a=Math.cos(.01*(i.y+this.seed)+this.noiseScale);if(n>0){const e=t[n-1];s+=Math.sin(.01*(e.x+this.seed)+this.noiseScale),a+=Math.cos(.01*(e.y+this.seed)+this.noiseScale)}const r=Math.atan2(a,s)+Math.PI/4,o={x:Math.cos(r)*this.flowStrength,y:Math.sin(r)*this.flowStrength};e.push(o)}return e}createParticleLines(t,e){const n=[],i=this.fieldSize/this.gridSize;for(let s=0;s<t.length;s++){const a=t[s],r=e[s],o=[];for(let t=0;t<=this.gridSize;t++){const e=t/this.gridSize,n=a.x+r.x*e*i,s=a.y+r.y*e*i;o.push({x:n,y:s})}let h="white";for(let t=0;t<o.length-1;t++)h=`hsl(${s/this.gridSize*Math.PI*2/(2*Math.PI)*360}, 80%, 60%)`,n.push(`<line \n                    x1="${o[t].x}" \n                    y1="${o[t].y}" \n                    x2="${o[t+1].x}" \n                    y2="${o[t+1].y}"\n                    stroke="white"\n                    stroke-width="2"\n                    stroke-linecap="round"\n                />`)}return n.join("")}generateShape(){this.flowStrength=1;const t=this.getGridPoints(),e=this.calculateFlowVectors(t);return`<g>\n            ${this.createParticleLines(t,e)}\n        </g>`}}const a=s},7387:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={complexity:{min:4,max:12,default:5},points:{min:5,max:16,default:8},hexSize:{min:20,max:40,default:28},cornerRadius:{min:0,max:60,default:10},cornerStyle:{min:0,max:3,default:0},distortion:{min:0,max:30,default:0}};generateShape(){this.resetRNG();const t=Math.sqrt(3),e=1.2*this.hexSize,n=Math.round(this.complexity),i=Math.max(3,Math.round(this.points)),s=1.2*this.cornerRadius;class a{constructor(t,e,n){this.q=t,this.r=e,this.s=n,this.neighbors=[]}equals(t){return this.q===t.q&&this.r===t.r&&this.s===t.s}}const r=(t,e)=>{if(e<=0)return t;const n=(this.random()-.5)*e,i=(this.random()-.5)*e;return{x:t.x+n,y:t.y+i}},o=(t=>{const e=new Map;for(let n=-t;n<=t;n++){const i=Math.max(-t,-n-t),s=Math.min(t,-n+t);for(let t=i;t<=s;t++){const i=-n-t,s=`${n},${t}`;e.set(s,new a(n,t,i))}}const n=[[1,0],[1,-1],[0,-1],[-1,0],[-1,1],[0,1]];return e.forEach((t=>{n.forEach((([n,i])=>{const s=`${t.q+n},${t.r+i}`,a=e.get(s);a&&t.neighbors.push(a)}))})),Array.from(e.values())})(n),h=((t,e)=>{const n=t[Math.floor(this.random()*t.length)],i=new Set([n]),s=[n];let a=n;for(;s.length<e;){const t=a.neighbors.filter((t=>!i.has(t)));t.length>0?(a=t[Math.floor(this.random()*t.length)],i.add(a),s.push(a)):a=s[Math.floor(this.random()*s.length)]}return s})(o,i);let l=h.map((n=>(n=>({x:e*(t*n.q+t/2*n.r),y:e*(1.5*n.r)}))(n)));const d=l.reduce(((t,e)=>({minX:Math.min(t.minX,e.x),maxX:Math.max(t.maxX,e.x),minY:Math.min(t.minY,e.y),maxY:Math.max(t.maxY,e.y)})),{minX:1/0,maxX:-1/0,minY:1/0,maxY:-1/0}),c=(d.maxX+d.minX)/2,u=(d.maxY+d.minY)/2;l=l.map((t=>({x:t.x-c,y:t.y-u})));const m=l.reduce(((t,e)=>({x:t.x+e.x/l.length,y:t.y+e.y/l.length})),{x:0,y:0});l.sort(((t,e)=>Math.atan2(t.y-m.y,t.x-m.x)-Math.atan2(e.y-m.y,e.x-m.x))),this.distortion>0&&(l=l.map((t=>r(t,this.distortion))));const p=((t,e,n)=>{const i=t.length,s=new Array(i);switch(n){case 0:for(let t=0;t<i;t++)s[t]=e;break;case 1:for(let t=0;t<i;t++)s[t]=0;break;case 2:for(let t=0;t<i;t++)s[t]=t%2==0?e:0;break;case 3:for(let t=0;t<i;t++)s[t]=this.random()<.5?e:0;break;default:for(let t=0;t<i;t++)s[t]=e}return s})(l,s,this.cornerStyle),f=((t,e)=>{const n=t.length,i=[];for(let s=0;s<n;s++){const a=t[s],r=t[(s-1+n)%n],o=t[(s+1)%n],h=e[s],l={x:a.x-r.x,y:a.y-r.y},d={x:o.x-a.x,y:o.y-a.y},c=Math.hypot(l.x,l.y),u=Math.hypot(d.x,d.y);if(0!==c&&0!==u)if(h<=0)0===s?i.push(`M ${a.x} ${a.y}`):i.push(`L ${a.x} ${a.y}`);else{const t=Math.min(h,Math.min(c,u)/2),e={x:a.x-l.x/c*t,y:a.y-l.y/c*t},n={x:a.x+d.x/u*t,y:a.y+d.y/u*t};0===s?i.push(`M ${e.x} ${e.y}`):i.push(`L ${e.x} ${e.y}`),i.push(`Q ${a.x} ${a.y} ${n.x} ${n.y}`)}}return i.push("Z"),i.join(" ")})(l,p);return`<path \n            d="${f}"\n            fill="white"\n        />`}}const a=s},7443:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={points:{min:3,max:12,default:6},innerRadius:{min:.1,max:.9,default:.4},thickness:{min:1,max:10,default:2}};generateShape(){const t=[],e=100*this.innerRadius*.8;this.points=Math.round(this.points);for(let n=0;n<this.points;n++){const i=2*n*Math.PI/this.points+0,s=2*(n+1)*Math.PI/this.points+0,a={x:80*Math.cos(i),y:80*Math.sin(i)},r={x:80*Math.cos(s),y:80*Math.sin(s)},o={x:e*Math.cos(i),y:e*Math.sin(i)},h={x:e*Math.cos(s),y:e*Math.sin(s)};t.push(`\n                <path d="\n                    M ${a.x},${a.y}\n                    L ${r.x},${r.y}\n                    L ${h.x},${h.y}\n                    L ${o.x},${o.y}\n                    Z"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    stroke-linejoin="round"\n                    fill="none"\n                />\n            `)}return t.join("")}}const a=s},7455:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={height:{min:50,max:200,default:140},width:{min:20,max:120,default:80},baseWidth:{min:10,max:80,default:30},stemHeight:{min:10,max:140,default:50},modulation:{min:0,max:1.5,default:.5},complexity:{min:1,max:8,default:3},resolution:{min:10,max:100,default:50},style:{options:["smooth","organic","minimal"],default:"minimal"}};generateProfilePoints(){const t=[],e=this.resolution,n=this.stemHeight/this.height;for(let i=0;i<=e;i++){const s=i/e;let a,r;if(r=80-160*s,s<n){const t=s/n;let e;switch(this.style){case"minimal":e=Math.sin(t*Math.PI*.5)*this.modulation*.05;break;case"organic":e=Math.sin(t*Math.PI)*this.modulation*Math.sin(3*t*Math.PI)*.15;break;default:e=Math.sin(t*Math.PI)*this.modulation*.1}a=this.baseWidth/100*80+80*e}else{const t=(s-n)/(1-n);let e=this.baseWidth/100+(this.width/100-this.baseWidth/100)*this.getBowlProfile(t);switch(this.style){case"minimal":for(let n=1;n<=this.complexity;n++)e+=Math.sin(t*n*Math.PI)*this.modulation*.05*(1-t);break;case"organic":for(let n=1;n<=this.complexity;n++)e+=Math.sin(t*n*Math.PI)*Math.cos(t*n*.5*Math.PI)*this.modulation*.15;break;default:for(let n=1;n<=this.complexity;n++)e+=Math.sin(t*n*Math.PI)*this.modulation*.1}a=80*e}t.push([a,r])}return t}getBowlProfile(t){switch(this.style){case"minimal":return t*(1.2-.2*t);case"organic":return.6*(1-Math.cos(t*Math.PI));default:return.5*(1-Math.cos(t*Math.PI))}}generateShape(){const t=this.generateProfilePoints(),e=t.map((([t,e])=>`${t},${e}`)).join(" L");return`<g transform="translate(0,0)">\n            <path \n                d="M${t.map((([t,e])=>`${-t},${e}`)).reverse().join(" L")} L${e}Z"\n                stroke="white"\n                stroke-width="1.5"\n                fill="white"\n            />\n        </g>`}}const a=s},7571:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={waves:{min:3,max:6,default:4},amplitude:{min:25,max:85,default:40},frequency:{min:1,max:4,default:2},phase:{min:-180,max:180,default:0},thickness:{min:1,max:10,default:2},layerSpacing:{min:10,max:50,default:20}};generateShape(){const t=Math.round(this.waves),e=this.phase*(Math.PI/180),n=.8*this.layerSpacing,i=2*this.thickness,s=200-2*i,a=200-2*i,r=-100+i,o=-100+i,h=(t-1)*n,l=(a-h)/2,d=Math.min(.8*this.amplitude,l),c=0-h/2,u=[];for(let i=0;i<t;i++){const t=e+i*Math.PI/2,h=c+i*n,l=[];for(let e=0;e<=60;e++){const n=e/60,i=r+s*n;let c=h;if(this.frequency>0)c+=d*Math.sin(2*Math.PI*this.frequency*n+t);else{const e=2*n-1;c+=d*Math.sin(t)*(1-e*e)}c=Math.max(o,Math.min(c,o+a)),l.push(`${i},${c}`)}l.length>0&&u.push(`<polyline \n                    points="${l.join(" ")}"\n                    fill="none"\n                    stroke="white"\n                    stroke-width="${this.thickness}"\n                    stroke-linecap="round"\n                    stroke-linejoin="round"\n                />`)}return u.join("\n")}}const a=s},7582:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:50,max:90,default:50},lineCount:{min:3,max:8,default:3},strokeWidth:{min:1,max:20,default:10},gap:{min:10,max:40,default:18},bottomExtend:{min:80,max:150,default:70}};generateShape(){const t=[],e=this.radius,n=`Meteor-mask-${Date.now()}`;t.push(`\n            <defs>\n                <mask id="${n}">\n                    <rect x="-200" y="-200" width="400" height="400" fill="white"/>\n                    <circle cx="0" cy="0" r="${e}" fill="black"/>\n                </mask>\n            </defs>\n        `),t.push(`<g mask="url(#${n})">`);const i=e/(this.lineCount-.5);for(let n=0;n<this.lineCount;n++){const s=e-n*i;s<=0||(t.push(`\n                <path\n                    d="M ${-s},0 \n                       A ${s} ${s} 0 0 1 ${s},0"\n                    stroke="white"\n                    stroke-width="${this.strokeWidth}"\n                    fill="none"\n                    stroke-linecap="round"\n                />\n            `),t.push(`\n                <line\n                    x1="${-s}"\n                    y1="0"\n                    x2="${-s}"\n                    y2="${this.bottomExtend}"\n                    stroke="white"\n                    stroke-width="${this.strokeWidth}"\n                    stroke-linecap="round"\n                />\n            `),t.push(`\n                <line\n                    x1="${s}"\n                    y1="0"\n                    x2="${s}"\n                    y2="${this.bottomExtend}"\n                    stroke="white"\n                    stroke-width="${this.strokeWidth}"\n                    stroke-linecap="round"\n                />\n            `))}return t.push("</g>"),t.join("")}}const a=s},7586:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={thickness:{min:1,max:80,default:20},overlap:{min:0,max:100,default:50},angle:{min:0,max:15,default:6},scale:{min:.2,max:.8,default:.8}};createX(t,e,n){const i=e/2,s=t.x-i*Math.cos(n),a=t.y-i,r=t.x+i*Math.cos(n),o=t.y-i,h=t.x-i*Math.cos(n),l=t.y+i;return`M ${s},${a} L ${t.x+i*Math.cos(n)},${t.y+i} \n                M ${r},${o} L ${h},${l}`}generateShape(){const t=100*this.scale,e=this.angle*Math.PI/180;return`<path \n            d="${this.createX({x:0-this.overlap/2,y:0},t,e)} ${this.createX({x:0+this.overlap/2,y:0},t,e)}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="square"\n            stroke-linejoin="miter"\n        />`}}const a=s},7643:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={arms:{min:1,max:8,default:3},rotation:{min:-180,max:180,default:0},turns:{min:1,max:5,default:2.5},thickness:{min:1,max:10,default:3},variation:{min:0,max:1,default:.2}};generateShape(){this.resetRNG();const t=[],e=this.rotation*Math.PI/180;for(let n=0;n<this.arms;n++){const i=2*n*Math.PI/this.arms+e;let s=this.generateSpiralPath(i,100);t.push(`<path \n                d="${s}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                fill="none"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n            />`)}return t.join("")}generateSpiralPath(t,e){const n=[];for(let i=0;i<=200;i++){const s=i/200,a=t+2*this.turns*Math.PI*s,r=e*s,o=r*Math.cos(a),h=r*Math.sin(a);n.push([o,h])}let i=`M ${n[0][0]},${n[0][1]}`;for(let t=1;t<n.length;t++)i+=` L ${n[t][0]},${n[t][1]}`;return i}}const a=s},7659:t=>{"use strict";var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},7759:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:50,max:100,default:90},lineThickness:{min:1,max:30,default:10},lineRatio:{min:.1,max:1,default:.5},roundedCenter:{min:0,max:30,default:10},style:{options:["plus","cross","target","radar"],default:"plus"},innerLineWeight:{min:.1,max:2,default:1},borderWidth:{min:0,max:15,default:0}};generateShape(){const t=this.radius,e=this.lineThickness*this.innerLineWeight,n=2*t*this.lineRatio,i=this.roundedCenter,s=this.style,a=this.borderWidth,r=`crosshair-mask-${Math.floor(1e4*Math.random())}`;let o="";if("plus"===s||"cross"===s){const t=e/2;if(o+=`\n                <rect \n                    x="${-n/2}" \n                    y="${-t}" \n                    width="${n}" \n                    height="${e}"\n                    fill="black"\n                />`,o+=`\n                <rect \n                    x="${-t}" \n                    y="${-n/2}" \n                    width="${e}" \n                    height="${n}"\n                    fill="black"\n                />`,"cross"===s){const t=.7*n,i=.8*e,s=i/2;o+=`\n                    <rect \n                        x="${-t/2}" \n                        y="${-s}" \n                        width="${t}" \n                        height="${i}"\n                        transform="rotate(45)"\n                        fill="black"\n                    />\n                    <rect \n                        x="${-t/2}" \n                        y="${-s}" \n                        width="${t}" \n                        height="${i}"\n                        transform="rotate(-45)"\n                        fill="black"\n                    />`}}else if("target"===s){const n=3,i=t/(n+1);for(let t=1;t<=n;t++)o+=`\n                    <circle \n                        cx="0" \n                        cy="0" \n                        r="${t*i}"\n                        stroke="black"\n                        stroke-width="${e*(1-.15*(t-1))}"\n                        fill="none"\n                    />`;const s=e/2;o+=`\n                <rect \n                    x="${-t}" \n                    y="${-s}" \n                    width="${2*t}" \n                    height="${e}"\n                    fill="black"\n                />\n                <rect \n                    x="${-s}" \n                    y="${-t}" \n                    width="${e}" \n                    height="${2*t}"\n                    fill="black"\n                />`}else if("radar"===s){const n=6,i=360/n;for(let s=0;s<n;s++){const n=s*i;o+=`\n                    <line \n                        x1="0" \n                        y1="0" \n                        x2="${t*Math.cos(n*Math.PI/180)}" \n                        y2="${t*Math.sin(n*Math.PI/180)}"\n                        stroke="black"\n                        stroke-width="${e}"\n                    />`}const s=2,a=t/(s+1);for(let t=1;t<=s;t++)o+=`\n                    <circle \n                        cx="0" \n                        cy="0" \n                        r="${t*a}"\n                        stroke="black"\n                        stroke-width="${e}"\n                        fill="none"\n                    />`}return i>0&&(o+=`\n                <circle \n                    cx="0" \n                    cy="0" \n                    r="${i}"\n                    fill="black"\n                />`),`\n        <defs>\n            <mask id="${r}">\n                <rect x="-200" y="-200" width="400" height="400" fill="white" />\n                ${o}\n            </mask>\n        </defs>\n            <circle \n                cx="0" \n                cy="0" \n                r="${t}"\n                fill="white"\n                stroke="${a>0?"black":"none"}"\n                stroke-width="${a}"\n                mask="url(#${r})"\n            />`}}const a=s},7806:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:2,max:8,default:5},circleRadius:{min:5,max:30,default:15},baseSize:{min:50,max:300,default:155},intensity:{min:.7,max:1.3,default:1}};generateShape(){const t=`stamp-mask-${Math.random().toString(36).substr(2,9)}`,e=this.baseSize/2;return`\n            <defs>\n                <mask id="${t}">\n                    <rect \n                        x="${-e}"\n                        y="${-e}"\n                        width="${this.baseSize}"\n                        height="${this.baseSize}"\n                        fill="white"\n                    />\n                    ${this.generateCircles()}\n                </mask>\n            </defs>\n        \n            <rect\n                x="${-e}"\n                y="${-e}"\n                width="${this.baseSize}"\n                height="${this.baseSize}"\n                fill="white"\n                mask="url(#${t})"\n            />\n        `}generateCircles(){const t=[],e=this.baseSize/2;for(let n=0;n<this.gridSize;n++){const i=n/(this.gridSize-1),s=-e+this.baseSize*i;t.push([s,-e],[s,e],[-e,s],[e,s])}const n=t.filter(((t,e,n)=>e===n.findIndex((e=>e[0]===t[0]&&e[1]===t[1])))),i=this.circleRadius*this.intensity;return n.map((([t,e])=>`\n            <circle\n                cx="${t}"\n                cy="${e}"\n                r="${i}"\n                fill="black"\n            />`)).join("")}}const a=s},7816:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={thickness:{min:2,max:24,default:7},frequencyX:{min:1,max:12,default:4},frequencyY:{min:1,max:12,default:3},phaseShift:{min:0,max:360,default:0}};generateShape(){const t=80,e=this.phaseShift*Math.PI/180,n=[],i=[];for(let n=0;n<=129;n++){const s=n/128*2*Math.PI,a=t*Math.sin(this.frequencyX*s+e),r=t*Math.sin(this.frequencyY*s);i.push({x:isNaN(a)?0:a,y:isNaN(r)?0:r,t:s})}for(let s=0;s<128;s++){const a=i[s],r=i[s+1],o=t*this.frequencyX*Math.cos(this.frequencyX*a.t+e),h=t*this.frequencyY*Math.cos(this.frequencyY*a.t),l=t*this.frequencyX*Math.cos(this.frequencyX*r.t+e),d=t*this.frequencyY*Math.cos(this.frequencyY*r.t),c=.3*Math.sqrt(Math.pow(r.x-a.x,2)+Math.pow(r.y-a.y,2)),u=Math.sqrt(o*o+h*h),m=Math.sqrt(l*l+d*d);let p,f,x,g;u>1e-4?(p=a.x+o*c/u,f=a.y+h*c/u):(p=a.x,f=a.y),m>1e-4?(x=r.x-l*c/m,g=r.y-d*c/m):(x=r.x,g=r.y),p=isNaN(p)?a.x:p,f=isNaN(f)?a.y:f,x=isNaN(x)?r.x:x,g=isNaN(g)?r.y:g,0===s&&n.push(`M${a.x},${a.y}`),n.push(`C${p},${f} ${x},${g} ${r.x},${r.y}`)}return n.push("Z"),`<path \n            d="${n.join(" ")}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n            fill="none"\n        />`}}const a=s},7825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,s&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},7905:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:2,max:4,default:2},tileSize:{min:25,max:59,default:50},flowIntensity:{min:0,max:100,default:100},patternBalance:{min:0,max:100,default:100},contrast:{min:0,max:100,default:50}};adaptSize(){const t=360/this.gridSize;this.tileSize=Math.min(this.tileSize,t)}getPseudoRandom(t,e){const n=43758.5453*Math.sin(12.9898*t+78.233*e+this.seed);return n-Math.floor(n)}createNoiseField(){this.grid=Array(this.gridSize).fill().map(((t,e)=>Array(this.gridSize).fill().map(((t,n)=>this.getPseudoRandom(n,e)))));const t=Array(this.gridSize).fill().map((()=>Array(this.gridSize).fill(0)));for(let e=0;e<this.gridSize;e++)for(let n=0;n<this.gridSize;n++){let i=this.grid[e][n],s=1;for(let t=-1;t<=1;t++)for(let a=-1;a<=1;a++){if(0===a&&0===t)continue;const r=n+a,o=e+t;r>=0&&r<this.gridSize&&o>=0&&o<this.gridSize&&(i+=this.grid[o][r],s++)}i/=s,t[e][n]=i*this.flowIntensity+this.grid[e][n]*(1-this.flowIntensity),this.contrast>0&&(t[e][n]=Math.pow(t[e][n],1+2*this.contrast))}this.grid=t}getRotation(t,e){const n=this.grid[e][t],i=90*Math.floor(4*n);if(this.getPseudoRandom(t+100,e+100)>this.patternBalance){const n=Math.floor(4*this.getPseudoRandom(t+200,e+200));return this.patterns[n]}return i}createTile(t,e,n){return`<g transform="translate(${e*this.tileSize},${n*this.tileSize}) rotate(${t}, ${this.tileSize/2}, ${this.tileSize/2})">\n            <path d="M 0 0 L ${this.tileSize} 0 L 0 ${this.tileSize} Z" \n                  fill="white"\n                  stroke="none" />\n        </g>`}generateShape(){this.flowIntensity=this.flowIntensity/100,this.patternBalance=this.patternBalance/100,this.contrast=this.contrast/100,this.patterns=[0,90,180,270],this.seed=12345,this.adaptSize(),this.createNoiseField(),this.adaptSize();const t=-this.gridSize*this.tileSize/2;let e=[`<g transform="translate(${t},${t})">`];for(let t=0;t<this.gridSize;t++)for(let n=0;n<this.gridSize;n++){const i=this.getRotation(n,t);e.push(this.createTile(i,n,t))}return e.push("</g>"),e.join("")}}const a=s},7914:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={pillHeight:{min:100,max:300,default:240},pillWidth:{min:40,max:120,default:85},spacing:{min:0,max:100,default:15},cornerRadius:{min:20,max:60,default:42},centerCircleSize:{min:20,max:100,default:85}};generateShape(){const t=.8,e=this.pillHeight*t,n=this.pillWidth*t,i=this.spacing*t,s=this.cornerRadius*t,a=this.centerCircleSize*t,r=[],o=0-i/2-n,h=0-e/2;r.push(this.createRoundedRect(o,h,n,e,s));const l=0+i/2,d=0-e/2;r.push(this.createRoundedRect(l,d,n,e,s));const c=`\n            <circle \n                cx="0"\n                cy="0"\n                r="${a/2}"\n                fill="white"\n            />\n        `;return r.push(c),r.join("\n")}createRoundedRect(t,e,n,i,s){return`\n            <path \n                d="${[`M ${t+s} ${e}`,"H "+(t+n-s),`A ${s} ${s} 0 0 1 ${t+n} ${e+s}`,"V "+(e+i-s),`A ${s} ${s} 0 0 1 ${t+n-s} ${e+i}`,`H ${t+s}`,`A ${s} ${s} 0 0 1 ${t} ${e+i-s}`,`V ${e+s}`,`A ${s} ${s} 0 0 1 ${t+s} ${e}`,"Z"].join(" ")}"\n                fill="white"\n            />\n        `}}const a=s},8039:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={amplitude:{min:10,max:150,default:72},frequency:{min:1,max:8,default:3},phase:{min:-180,max:180,default:30},thickness:{min:1,max:16,default:6},smoothness:{min:.1,max:1,default:.1}};getControlPoints(t,e,n,i,s){const a=n-t,r=1-Math.max(.1,Math.min(.9,s));return{cp1x:t+a*r,cp1y:e,cp2x:n-a*r,cp2y:i}}generateWavePoints(){const t=2*this.frequency,e=[],n=this.phase*Math.PI/180;for(let i=0;i<=t;i++){const s=i/t,a=160*s-80;let r=0;r=Math.sin(s*Math.PI*2*this.frequency+n),e.push([a,r*this.amplitude])}return e}generateShape(){const t=this.generateWavePoints();let e=`M ${t[0][0]} ${t[0][1]}`;for(let n=1;n<t.length;n++){const i=t[n],s=t[n-1],a=this.getControlPoints(s[0],s[1],i[0],i[1],"square"===this.waveType?.1:this.smoothness);e+=` C ${a.cp1x} ${a.cp1y} ${a.cp2x} ${a.cp2y} ${i[0]} ${i[1]}`}return`<path \n            d="${e}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n        />`}}const a=s},8079:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>r});var i=n(1965),s=n(6987);class a extends i.y{static parameters={layers:{min:5,max:50,default:32},radius:{min:20,max:80,default:80},innerRadius:{min:5,max:100,default:53},noiseScale:{min:.05,max:1,default:.35},noiseStrength:{min:0,max:1,default:.6},flowFactor:{min:.1,max:5,default:3},thickness:{min:.5,max:3,default:1.2},heightVariation:{min:.1,max:1,default:.7},rotation:{min:0,max:360,default:360},tilt:{min:0,max:90,default:33}};getNoise(t,e,n=0){try{const i=s.A.noise(t*this.noiseScale+this.seed,e*this.noiseScale+this.seed,n*this.noiseScale+this.seed);return isNaN(i)?0:i}catch(t){return 0}}generateShape(){const t=[],e=this.rotation*Math.PI/180,n=this.tilt*Math.PI/180,i=Math.max(1,2*this.innerRadius)/Math.max(1,this.layers-1);for(let s=0;s<this.layers;s++){const a=-this.innerRadius+s*i,r=this.generateSlicePath(a,e,n);r&&t.push(`<path \n                    d="${r}" \n                    stroke="white" \n                    stroke-width="${this.thickness}" \n                    fill="none"\n                    stroke-linejoin="round"\n                    stroke-linecap="round"\n                />`)}return t.join("")}generateSlicePath(t,e,n){const i=[],s=t/Math.max(.1,this.innerRadius),a=Math.max(0,1-s*s),r=this.radius*Math.sqrt(a);for(let a=0;a<=100;a++){const o=a/100*Math.PI*2,h=Math.cos(o),l=Math.sin(o);let d=r,c=0;c+=this.getNoise(h*this.flowFactor,l*this.flowFactor,s)*this.noiseStrength,c+=this.getNoise(h*this.flowFactor*2.5,l*this.flowFactor*2.5,2*s)*this.noiseStrength*.5;const u=o+this.getNoise(.5*h,.5*l,.5*s)*Math.PI*this.heightVariation,m=Math.cos(u),p=Math.sin(u);c+=this.getNoise(h+.5*m,l+.5*p,s)*this.noiseStrength*.7;const f=1-Math.abs(s)*(1-this.heightVariation);d=Math.max(.1,d*(1+c*f));let x=h*d,g=l*d,y=t;const $=x*Math.cos(e)-y*Math.sin(e),M=x*Math.sin(e)+y*Math.cos(e),w=g*Math.cos(n)-M*Math.sin(n),k=1-.001*(g*Math.sin(n)+M*Math.cos(n));if(Math.abs(k)<1e-4)continue;const S=$/k,v=w/k;isFinite(S)&&isFinite(v)&&i.push([S,v])}return i.length<3?"":this.createPath(i)}createPath(t){let e="",n=!1;for(let i=0;i<t.length;i++)isNaN(t[i][0])||isNaN(t[i][1])||(n?e+=` L${t[i][0]},${t[i][1]}`:(e=`M${t[i][0]},${t[i][1]}`,n=!0));return n?(e+=" Z",e):""}}const r=a},8153:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:50,max:200,default:150},height:{min:50,max:150,default:100},cornerRadius:{min:0,max:50,default:20},tailSize:{min:15,max:40,default:25},tailPosition:{min:-50,max:50,default:0}};generateShape(){const t=this.width,e=this.height,n=Math.min(this.cornerRadius,Math.min(t,e)/3),i=this.tailSize,s=t/2,a=e/2,r=this.tailPosition/100*(s-n-i/2);let o="";return o+=`M ${-s+n} ${-a}`,o+=` L ${s-n} ${-a}`,o+=` Q ${s} ${-a} ${s} ${-a+n}`,o+=` L ${s} ${a-n}`,o+=` Q ${s} ${a} ${s-n} ${a}`,i>0&&(o+=` L ${r+i/2} ${a}`,o+=` L ${r} ${a+i}`,o+=` L ${r-i/2} ${a}`),o+=` L ${-s+n} ${a}`,o+=` Q ${-s} ${a} ${-s} ${a-n}`,o+=` L ${-s} ${-a+n}`,o+=` Q ${-s} ${-a} ${-s+n} ${-a}`,o+=" Z",`<path\n            d="${o}"\n            fill="white"\n            stroke="none"\n        />`}}const a=s},8191:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={lineCount:{min:3,max:20,default:8},thickness:{min:1,max:20,default:9},radius:{min:50,max:100,default:90},spacing:{min:1,max:50,default:20},alignment:{options:["center","top","bottom"],default:"center"}};generateShape(){const t=2*this.radius,e=this.lineCount*this.thickness+(this.lineCount-1)*this.spacing;let n;switch(this.alignment){case"top":n=-this.radius;break;case"bottom":n=-this.radius+(t-e);break;default:n=-e/2}const i=`stripesMask_${Math.random().toString(36).substr(2,9)}`,s=[];let a=n;for(let t=0;t<this.lineCount;t++)s.push(`<rect \n                x="${-this.radius-1}" \n                y="${a}" \n                width="${2*(this.radius+1)}" \n                height="${this.thickness}" \n                fill="black" \n            />`),a+=this.thickness+this.spacing;return`\n            <defs>\n                <clipPath id="${i}">\n                    <circle cx="0" cy="0" r="${this.radius}"/>\n                </clipPath>\n            </defs>\n            <g clip-path="url(#${i})">\n                <circle cx="0" cy="0" r="${this.radius}" fill="white" />\n                ${s.join("\n")}\n            </g>\n        `}}const a=s},8328:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={topRadius:{min:10,max:80,default:15},bottomRadius:{min:20,max:150,default:80},height:{min:50,max:150,default:150},dashEffect:{min:0,max:100,default:70},topFilled:{options:["true","false"],default:"true"},bottomFilled:{options:["true","false"],default:"true"},rotation:{min:-180,max:180,default:0}};generateShape(){const t="true"===this.topFilled,e="true"===this.bottomFilled,n=this.height/2,i=-n,s=n,a=0!==this.rotation?`transform="rotate(${this.rotation})"`:"",r=[],o=this.dashEffect>0?`stroke-dasharray="${this.dashEffect/10}, ${this.dashEffect/20}"`:"";return r.push(`<line \n            x1="-${this.topRadius}" \n            y1="${i}" \n            x2="-${this.bottomRadius}" \n            y2="${s}"\n            stroke="white"\n            stroke-width="2"\n            ${o}\n            ${a}\n        />`),r.push(`<line \n            x1="${this.topRadius}" \n            y1="${i}" \n            x2="${this.bottomRadius}" \n            y2="${s}"\n            stroke="white"\n            stroke-width="2"\n            ${o}\n            ${a}\n        />`),t?r.push(`<circle \n                cx="0" \n                cy="${i}" \n                r="${this.topRadius}"\n                fill="white"\n                ${a}\n            />`):r.push(`<circle \n                cx="0" \n                cy="${i}" \n                r="${this.topRadius}"\n                stroke="white"\n                stroke-width="2"\n                fill="none"\n                ${a}\n            />`),e?r.push(`<ellipse \n                cx="0" \n                cy="${s}" \n                rx="${this.bottomRadius}"\n                ry="${.3*this.bottomRadius}" \n                fill="white"\n                ${a}\n            />`):r.push(`<ellipse \n                cx="0" \n                cy="${s}" \n                rx="${this.bottomRadius}"\n                ry="${.3*this.bottomRadius}"\n                stroke="white"\n                stroke-width="2"\n                fill="none"\n                ${a}\n            />`),r.join("")}}const a=s},8381:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={seedCount:{min:12,max:48,default:24},seedLength:{min:40,max:120,default:80},seedCurve:{min:0,max:90,default:45},fluffSize:{min:2,max:12,default:6},coreRadius:{min:5,max:25,default:15},windPhase:{min:-45,max:45,default:0}};point(t,e,n,i){return{x:t+n*Math.cos(i),y:e+n*Math.sin(i)}}createFluff(t,e,n,i){return`<ellipse \n            cx="${t}" \n            cy="${e}" \n            rx="${n}" \n            ry="${n/2}"\n            transform="translate(${t} ${e}) rotate(${180*i/Math.PI}) translate(${-t} ${-e})"\n            fill="white"\n        />`}generateShape(){const t=1*this.seedLength,e=this.seedCurve*(Math.PI/180),n=1*this.fluffSize,i=1*this.coreRadius,s=this.windPhase*(Math.PI/180);let a=[];a.push(`<circle \n            cx="0" \n            cy="0" \n            r="${i}"\n            fill="white"\n        />`);for(let r=0;r<this.seedCount;r++){const o=2*r*Math.PI/this.seedCount+s,h=this.point(0,0,i,o),l=this.point(0,0,t,o),d=.6*t,c=o+e,u=this.point(0,0,d,c);a.push(`<path \n                d="M ${h.x} ${h.y} Q ${u.x} ${u.y} ${l.x} ${l.y}"\n                stroke="white"\n                stroke-width="1"\n                fill="none"\n            />`),a.push(this.createFluff(l.x,l.y,n,o))}return a.join("")}}const a=s},8407:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:50,max:100,default:100},lineCount:{min:3,max:8,default:5},strokeWidth:{min:1,max:20,default:10},gap:{min:5,max:30,default:18}};generateShape(){const t=[],e=this.radius,n=`fingerprint-clip-${Date.now()}`;t.push(`\n            <defs>\n                <clipPath id="${n}">\n                    <circle cx="0" cy="0" r="${e}" />\n                </clipPath>\n            </defs>\n        `),t.push(`<g clip-path="url(#${n})">`);const i=e/this.lineCount;for(let n=0;n<this.lineCount;n++){const s=e-n*i;s<=0||(t.push(`\n                <path\n                    d="M ${-s},0 \n                       A ${s} ${s} 0 0 1 ${s},0"\n                    stroke="white"\n                    stroke-width="${this.strokeWidth}"\n                    fill="none"\n                    stroke-linecap="round"\n                />\n            `),t.push(`\n                <line\n                    x1="${-s}"\n                    y1="0"\n                    x2="${-s}"\n                    y2="${2*e}"\n                    stroke="white"\n                    stroke-width="${this.strokeWidth}"\n                    stroke-linecap="round"\n                />\n            `),t.push(`\n                <line\n                    x1="${s}"\n                    y1="0"\n                    x2="${s}"\n                    y2="${2*e}"\n                    stroke="white"\n                    stroke-width="${this.strokeWidth}"\n                    stroke-linecap="round"\n                />\n            `))}return t.push(`\n            <line\n                x1="0"\n                y1="0"\n                x2="0"\n                y2="${2*e}"\n                stroke="white"\n                stroke-width="${this.strokeWidth}"\n                stroke-linecap="round"\n            />\n        `),t.push("</g>"),t.join("")}}const a=s},8490:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={petalCount:{min:4,max:24,default:12},petalLength:{min:50,max:100,default:100},petalWidth:{min:10,max:100,default:35},petalPointiness:{min:.2,max:1,default:.5},innerRadius:{min:0,max:50,default:15}};generatePetal(t,e){const n=t-e,i=t+e,s={x:this.innerRadius*Math.cos(n),y:this.innerRadius*Math.sin(n)},a={x:this.innerRadius*Math.cos(i),y:this.innerRadius*Math.sin(i)},r=this.petalLength*Math.cos(t),o=this.petalLength*Math.sin(t),h=s.x+.7*this.petalWidth*Math.cos(t+Math.PI/2)+this.petalLength*this.petalPointiness*Math.cos(t),l=s.y+.7*this.petalWidth*Math.sin(t+Math.PI/2)+this.petalLength*this.petalPointiness*Math.sin(t),d=a.x+.7*this.petalWidth*Math.cos(t-Math.PI/2)+this.petalLength*this.petalPointiness*Math.cos(t),c=a.y+.7*this.petalWidth*Math.sin(t-Math.PI/2)+this.petalLength*this.petalPointiness*Math.sin(t);return{startPoint:s,endPoint:a,path:`C ${h},${l} \n                   ${r*(1-.3*this.petalPointiness)},${o*(1-.3*this.petalPointiness)} \n                   ${r},${o}\n                   C ${r*(1-.3*this.petalPointiness)},${o*(1-.3*this.petalPointiness)}\n                   ${d},${c} \n                   ${a.x},${a.y}`}}generateShape(){this.petalCount=Math.round(this.petalCount);const t=2*Math.PI/this.petalCount,e=t/2;let n="";const i=0-e;n=`M ${this.innerRadius*Math.cos(i)},${this.innerRadius*Math.sin(i)}`;for(let i=0;i<this.petalCount;i++){const s=i*t;n+=" "+this.generatePetal(s,e).path}return n+=" Z",`\n            <path \n                d="${n}"\n                fill="white"\n            />\n        `}}const a=s},8561:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridSize:{min:2,max:8,default:3},thickness:{min:1,max:10,default:2},cellMode:{options:["normal","rotated"],default:"normal"},fillStyle:{options:["stroke","fill"],default:"stroke"},inset:{min:0,max:10,default:0}};generateShape(){this.baseSize=150;const t=[],e=this.baseSize/this.gridSize,n=-this.baseSize/2,i=-this.baseSize/2;for(let s=0;s<this.gridSize;s++)for(let a=0;a<=s;a++){const r=n+a*e+e/2,o=i+s*e+e/2,h="rotated"===this.cellMode?45:0;t.push(`<g transform="translate(${r},${o}) rotate(${h})">\n                    <rect \n                        x="${-e/2+this.inset}"\n                        y="${-e/2+this.inset}"\n                        width="${e-2*this.inset}"\n                        height="${e-2*this.inset}"\n                        fill="${"fill"===this.fillStyle?"white":"none"}"\n                        stroke="white"\n                        stroke-width="${this.thickness}"\n                    />\n                </g>`)}return t.join("")}}const a=s},8581:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={complexity:{min:2,max:8,default:4},spacing:{min:0,max:25,default:0},ratio:{min:.1,max:.9,default:.4},thickness:{min:1,max:10,default:4}};subdivideRect(t,e,n){if(e>=n)return[t];const i=t.width>t.height,s=this.spacing;if(i){const i=t.x+t.width*this.ratio,a={x:t.x,y:t.y,width:i-t.x-s/2,height:t.height},r={x:i+s/2,y:t.y,width:t.x+t.width-i-s/2,height:t.height};return a.width>r.width?[...this.subdivideRect(a,e+1,n),r]:[a,...this.subdivideRect(r,e+1,n)]}{const i=t.y+t.height*this.ratio,a={x:t.x,y:t.y,width:t.width,height:i-t.y-s/2},r={x:t.x,y:i+s/2,width:t.width,height:t.y+t.height-i-s/2};return a.height>r.height?[...this.subdivideRect(a,e+1,n),r]:[a,...this.subdivideRect(r,e+1,n)]}}generateShape(){const t={x:-80,y:-80,width:160,height:160};return this.subdivideRect(t,0,this.complexity).map((t=>`\n            <rect \n                x="${t.x}" \n                y="${t.y}" \n                width="${t.width}" \n                height="${t.height}"\n                fill="none"\n                stroke="white"\n                stroke-width="${this.thickness}"\n            />`)).join("")}}const a=s},8585:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={topWidth:{min:50,max:200,default:120},neckWidth:{min:20,max:100,default:40},neckHeight:{min:20,max:100,default:50},topHeight:{min:20,max:150,default:80}};generateShape(){const t=.8,e=this.topWidth*t,n=this.neckWidth*t,i=this.neckHeight*t,s=this.topHeight*t,a=0-(s+i)/2,r=a+s;return`<path \n           d="${[`M ${0-e/2},${a}`,`L ${0+e/2},${a}`,`L ${0+n/2},${r}`,`L ${0+n/2},${r+i}`,`L ${0-n/2},${r+i}`,`L ${0-n/2},${r}`,`L ${0-e/2},${a}`,"Z"].join(" ")}"\n           fill="white"\n           stroke="none"\n       />`}}const a=s},8634:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={skew:{min:-45,max:45,default:0},rows:{min:1,max:8,default:3},columns:{min:1,max:8,default:3},heightRatio:{min:.2,max:2,default:1},spacing:{min:0,max:.5,default:.2},mode:{options:["fill","stroke"],default:"fill"},thickness:{min:1,max:10,default:2}};generateShape(){const t=[],e=150/this.columns,n=150/this.rows*this.heightRatio,i=-150*this.heightRatio/2,s=Math.max(2*this.thickness,1),a=Math.max(e/2*(1-this.spacing),s),r=Math.max(n/2*(1-this.spacing),s),o=this.skew*Math.PI/180;for(let s=0;s<this.rows;s++)for(let h=0;h<this.columns;h++){const l=h*e-75+e/2,d=i+s*n+n/2,c=`matrix(1 0 ${Math.tan(o)} 1 ${l} ${d})`;a>0&&r>0&&t.push(`<ellipse \n                        rx="${a}" \n                        ry="${r}"\n                        fill="${"fill"===this.mode?"white":"none"}"\n                        stroke="white"\n                        stroke-width="${"stroke"===this.mode?this.thickness:0}"\n                        transform="${c}"\n                    />`)}return t.join("")}}const a=s},8697:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={height:{min:100,max:300,default:200},topWidth:{min:20,max:100,default:40},bottomWidth:{min:50,max:150,default:100},twistCount:{min:1,max:6,default:3},segments:{min:8,max:24,default:16},turbulence:{min:0,max:30,default:15}};generateShape(){const t=.9,e=this.height*t,n=this.topWidth*t,i=this.bottomWidth*t,s=this.turbulence*t,a=4*this.segments,r=[],o=[],h=-e/2;r.push({x:-n/2,y:h}),o.push({x:n/2,y:h});for(let t=1;t<a;t++){const h=t/a,l=n+(i-n)*((1-Math.cos(h*Math.PI))/2),d=(Math.sin(h*this.twistCount*2*Math.PI)+.3*Math.sin(h*(this.twistCount+1)*2*Math.PI))*s*Math.sin(h*Math.PI),c=-e/2+e*h,u=-l/2+d,m=l/2+d;r.push({x:u,y:c}),o.push({x:m,y:c})}const l=e/2;r.push({x:-i/2,y:l}),o.push({x:i/2,y:l});let d=[];d.push(`M ${r[0].x} ${r[0].y}`);for(let t=1;t<r.length-2;t++){const e=r[t],n=r[t+1],i={x:(e.x+n.x)/2,y:(e.y+n.y)/2};d.push(`Q ${e.x} ${e.y} ${i.x} ${i.y}`)}d.push(`L ${r[r.length-1].x} ${l}`),d.push(`L ${o[o.length-1].x} ${l}`);for(let t=o.length-2;t>1;t--){const e=o[t],n=o[t-1],i={x:(e.x+n.x)/2,y:(e.y+n.y)/2};d.push(`Q ${e.x} ${e.y} ${i.x} ${i.y}`)}return d.push(`L ${o[0].x} ${h}`),d.push(`L ${r[0].x} ${h}`),d.push("Z"),`<path \n            d="${d.join(" ")}"\n            fill="white"\n        />`}}const a=s},8730:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={gridRows:{min:2,max:6,default:4},gridCols:{min:2,max:6,default:4},circleRadius:{min:0,max:10,default:10},pinCount:{min:3,max:24,default:18},threadWidth:{min:1,max:20,default:8},showGrid:{default:!1},strokeWidth:{min:0,max:5,default:1}};generateShape(){const t=this.createCircleGrid();let e="M 0,0 L 0,0 Z";try{const n=this.selectPins(t),i=this.optimizePinSequence(n),s=this.determinePinOrientations(i),a=this.calculateTangentPaths(i,s);e=this.generateThreadPath(i,a)}catch(t){console.error("Error generating threaded shape:",t)}let n="";return n+=`<path d="${e}" fill="white" stroke="white" stroke-width="${this.strokeWidth}" />`,this.showGrid&&t.forEach((t=>{n+=`<circle cx="${t.x}" cy="${t.y}" r="${t.radius}" fill="none" stroke="white" stroke-width="1" />`})),n}createCircleGrid(){const t=[],e=Math.floor(this.gridRows),n=Math.floor(this.gridCols),i=200/Math.max(e,n),s=-(n-1)*i/2,a=-(e-1)*i/2;for(let r=0;r<e;r++)for(let e=0;e<n;e++)t.push({x:s+e*i,y:a+r*i,radius:this.circleRadius,row:r,col:e});return t}selectPins(t){const e=Math.min(Math.floor(this.pinCount),t.length),n=[],i=[...t];for(let t=i.length-1;t>0;t--){const e=Math.floor(this.random()*(t+1));[i[t],i[e]]=[i[e],i[t]]}for(let t=0;t<e;t++)if(i.length>0){const t=i.pop();n.push(t)}return n}optimizePinSequence(t){if(t.length<=3)return t;t.reduce(((t,e)=>e.x<t.x?e:t));const e=t.reduce(((t,e)=>t+e.x),0)/t.length,n=t.reduce(((t,e)=>t+e.y),0)/t.length;return[...t].sort(((t,i)=>Math.atan2(t.y-n,t.x-e)-Math.atan2(i.y-n,i.x-e)))}determinePinOrientations(t){const e=[];for(let n=0;n<t.length;n++){const i=t[(n-1+t.length)%t.length],s=t[n],a=t[(n+1)%t.length],r=(s.x-i.x)*(a.y-s.y)-(s.y-i.y)*(a.x-s.x);e.push(r>0?"clockwise":"counterclockwise")}return e}calculateTangentPaths(t,e){const n=[];for(let i=0;i<t.length;i++){const s=t[i],a=t[(i+1)%t.length],r=e[i],o=e[(i+1)%t.length],h=this.calculateTangentPoints(s,a,r,o);n.push({startPin:s,endPin:a,startPoint:h.start,endPoint:h.end})}return n}calculateTangentPoints(t,e,n,i){const s=t.x,a=t.y,r=e.x,o=e.y,h=t.radius,l=e.radius,d=r-s,c=o-a,u=Math.sqrt(d*d+c*c);if(u<h+l){const t=Math.atan2(c,d);return{start:{x:s+Math.cos(t)*h,y:a+Math.sin(t)*h},end:{x:r-Math.cos(t)*l,y:o-Math.sin(t)*l}}}const m=d/u,p=c/u,f={x:p,y:-m},x={x:-p,y:m};let g,y;return g="clockwise"===n?f:x,y="clockwise"===i?f:x,{start:{x:s+g.x*h,y:a+g.y*h},end:{x:r+y.x*l,y:o+y.y*l}}}generateThreadPath(t,e){if(t.length<3||e.length<3)return"M 0,0 L 0,0 Z";let n="";const i=e[0];n=`M ${i.startPoint.x},${i.startPoint.y}`;for(let t=0;t<e.length;t++){const i=e[t],s=e[(t+1)%e.length];n+=` L ${i.endPoint.x},${i.endPoint.y}`,n+=this.createArcSegment(i.endPoint,s.startPoint,i.endPin)}return n+=" Z",n}createArcSegment(t,e,n){const i=n.x,s=n.y,a=n.radius,r=Math.atan2(t.y-s,t.x-i);let o=Math.atan2(e.y-s,e.x-i)-r;return o>Math.PI&&(o-=2*Math.PI),o<-Math.PI&&(o+=2*Math.PI),` A ${a} ${a} 0 ${Math.abs(o)>Math.PI?1:0} ${o>0?1:0} ${e.x} ${e.y}`}}const a=s},8790:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={rectangleHeight:{min:20,max:200,default:100},rectangleWidth:{min:20,max:200,default:120},arcRadius:{min:10,max:100,default:60},cornerRadius:{min:0,max:20,default:0}};generateShape(){const t=.8,e=this.rectangleHeight*t,n=this.rectangleWidth*t,i=this.arcRadius*t,s=this.cornerRadius*t,a=-n/2,r=-e/2,o=[];return s>0?(o.push(`M ${a+s} ${r}`),o.push(`L ${a+n-s} ${r}`),o.push(`A ${s} ${s} 0 0 1 ${a+n} ${r+s}`),o.push(`L ${a+n} ${r+e-s}`),o.push(`A ${s} ${s} 0 0 1 ${a+n-s} ${r+e}`),o.push(`L ${a+s} ${r+e}`),o.push(`A ${s} ${s} 0 0 1 ${a} ${r+e-s}`),o.push(`L ${a} ${r+s}`),o.push(`A ${s} ${s} 0 0 1 ${a+s} ${r}`)):(o.push(`M ${a} ${r}`),o.push(`L ${a+n} ${r}`),o.push(`L ${a+n} ${r+e}`),o.push(`L ${a} ${r+e}`),o.push("Z")),o.push(`M ${-i} ${r}`),o.push(`A ${i} ${i} 0 0 1 ${i} ${r}`),o.push(`M ${i} ${r+e}`),o.push(`A ${i} ${i} 0 0 1 ${-i} ${r+e}`),`<path \n            d="${o.join(" ")}"\n            fill="white"\n        />`}}const a=s},8882:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={innerRadius:{min:0,max:100,default:39},outerRadius:{min:50,max:150,default:77},lineCount:{min:3,max:24,default:12},thickness:{min:1,max:10,default:4},lineCap:{options:["butt","round"],default:"butt"},skew:{min:-90,max:90,default:0}};generateShape(){const t=[],e=2*Math.PI/this.lineCount,n=this.skew*Math.PI/180;for(let i=0;i<this.lineCount;i++){const s=i*e,a=this.innerRadius*Math.cos(s),r=this.innerRadius*Math.sin(s),o=s+n,h=this.outerRadius*Math.cos(o),l=this.outerRadius*Math.sin(o);t.push(`<line \n                x1="${a}" \n                y1="${r}" \n                x2="${h}" \n                y2="${l}"\n                stroke="white"\n                stroke-width="${this.thickness}"\n                stroke-linecap="${this.lineCap}"\n            />`)}return t.join("")}}const a=s},8903:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={arcRadius:{min:50,max:150,default:80},centerSize:{min:10,max:100,default:60},curvature:{min:.1,max:1,default:.5},spacing:{min:0,max:50,default:0}};createCurvedElement(t){const e=-this.centerSize/2-this.spacing,n=-this.arcRadius,i=-this.centerSize/2-this.arcRadius*this.curvature,s=-this.arcRadius*this.curvature,a=-this.arcRadius,r=-this.arcRadius,o=`M ${e} 0 \n                           C ${i} ${s}, ${a} ${r}, ${n} 0`,h=`M ${e} 0 \n                           C ${i} ${-s}, ${a} ${-r}, ${n} 0`,l=t*Math.PI/180,d=Math.cos(l),c=Math.sin(l);return`<g transform="matrix(${d} ${c} ${-c} ${d} 0 0)">\n                    <path d="${o} ${h}"\n                          fill="white"/>\n                </g>`}generateShape(){return`<g>\n            <circle \n            cx="0" \n            cy="0" \n            r="${this.centerSize/2}"\n            fill="white"\n        />\n            ${this.createCurvedElement(0)}\n            ${this.createCurvedElement(180)}\n        </g>`}}const a=s},8936:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:100,default:100},points:{min:3,max:12,default:4},innerRadius:{min:10,max:100,default:40},curveStrength:{min:0,max:100,default:70},rotation:{min:-180,max:180,default:45}};generateShape(){const t=[],e=Math.round(this.points),n=this.rotation*Math.PI/180,i=2*Math.PI/e,s=Math.min(1,5/e),a=this.curveStrength/100*(this.size-this.innerRadius)*.5*s;for(let s=0;s<e;s++){const r=s*i+n,o=(s+1)%e*i+n,h=Math.cos(r)*this.size,l=Math.sin(r)*this.size,d=r+i/2,c=Math.cos(d)*this.innerRadius,u=Math.sin(d)*this.innerRadius,m=Math.cos(o)*this.size,p=Math.sin(o)*this.size,f=r+Math.PI/2,x=o-Math.PI/2,g=h+Math.cos(f)*a,y=l+Math.sin(f)*a,$=c-Math.cos(f)*a,M=u-Math.sin(f)*a,w=c-Math.cos(x)*a,k=u-Math.sin(x)*a,S=m+Math.cos(x)*a,v=p+Math.sin(x)*a;0===s&&t.push(`M ${h},${l}`),t.push(`C ${g},${y} ${$},${M} ${c},${u}`),t.push(`C ${w},${k} ${S},${v} ${m},${p}`)}return t.push("Z"),`<path \n            d="${t.join(" ")}"\n            fill="white"\n            stroke="white"\n            stroke-width="1"\n        />`}}const a=s},8990:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={spread:{min:.2,max:1,default:.9},height:{min:.5,max:1.5,default:.6},pointiness:{min:.1,max:.9,default:.4},centerOffset:{min:-.3,max:.3,default:0}};generateShape(){const t=200,e=t*this.height/2,n=-200*this.height/2,i=t*this.spread/2,s=-200*this.spread/2,a=t*this.pointiness/2,r=t*this.centerOffset,o=-200*this.pointiness/2,h=t*this.centerOffset;return`\n            <path d="\n            M ${e},0\n            L 0,${i}\n            L ${a},${r}\n            Z\n         \n            M 0,${s}\n            L ${a},${r}\n            L ${o},${h}\n            Z\n         \n            M ${n},0\n            L ${o},${h}\n            L 0,${i}\n            Z\n        "\n                fill="white"\n            />\n        `}}const a=s},9050:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>r});var i=n(1965),s=n(6987);class a extends i.y{static parameters={ringCount:{min:5,max:25,default:15},pointsPerRing:{min:50,max:500,default:200},innerRadius:{min:20,max:60,default:50},outerRadius:{min:60,max:180,default:95},noiseStrength:{min:.1,max:15,default:10},noiseScale:{min:.5,max:5,default:2.5},strokeWidth:{min:.5,max:3,default:2},curveTension:{min:.1,max:.9,default:.3},curveSegmentLength:{min:2,max:10,default:3},seed:{min:0,max:1e3,default:1}};getNoise(t,e){return s.A.noise(t*this.noiseScale+this.seed,e*this.noiseScale+this.seed)}generateShape(){this.resetRNG();const t=[];for(let e=0;e<this.ringCount;e++){const n=this.innerRadius+(this.outerRadius-this.innerRadius)*(e/(this.ringCount-1)),i=Math.max(this.pointsPerRing,200),s=[];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,a=Math.cos(e)*n,r=Math.sin(e)*n,o=this.noiseStrength*(n/this.outerRadius),h=n+(this.getNoise(a/50,r/50)+.5*this.getNoise(a/25,r/25)+.25*this.getNoise(a/100,r/100))/1.75*o,l=Math.cos(e)*h,d=Math.sin(e)*h;s.push({x:l,y:d})}const a=s[0];s[s.length-1],s.push({...a});let r="";r=n<1.2*this.innerRadius?this.generateSimpleSmoothedPath(s):this.generateCatmullRomPath(s,this.curveTension),""!==r&&t.push(`<path \n                    d="${r}" \n                    stroke="white" \n                    fill="none"\n                    stroke-width="${this.strokeWidth}"\n                    stroke-linecap="round"\n                    stroke-linejoin="round"\n                />`)}const e=Math.floor(this.ringCount/2);for(let n=0;n<e;n++){const e=this.random()*Math.PI*2,i=Math.PI*(.3+.5*this.random()),s=this.innerRadius+this.random()*(this.outerRadius-this.innerRadius),a=[],r=40;for(let t=0;t<=r;t++){const o=e+i*t/r,h=Math.cos(o)*s,l=Math.sin(o)*s,d=2*this.getNoise(t/10,n/5)*(this.noiseStrength/15);a.push({x:h+d*Math.cos(o+Math.PI/2),y:l+d*Math.sin(o+Math.PI/2)})}const o=this.generateCatmullRomPath(a,this.curveTension);t.push(`<path \n                d="${o}" \n                stroke="white" \n                fill="none"\n                stroke-width="${this.strokeWidth}"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n            />`)}return t.join("")}generateSimpleSmoothedPath(t){if(t.length<3)return"";const e=[`M${t[0].x},${t[0].y}`];for(let n=1;n<t.length;n++){const i=t[n-1],s=t[n];if(n<t.length-1){const a=t[n+1],r=(i.x+2*s.x+a.x)/4,o=(i.y+2*s.y+a.y)/4;e.push(`Q${s.x},${s.y} ${r},${o}`)}else e.push(`L${s.x},${s.y}`)}return e.join(" ")}generateCatmullRomPath(t,e=.5){if(t.length<2)return"";let n=`M${t[0].x},${t[0].y}`;const i=[t[0],...t,t[t.length-1]];for(let t=0;t<i.length-3;t++){const s=i[t],a=i[t+1],r=i[t+2],o=i[t+3];if(0===t&&s.x===a.x&&s.y===a.y)continue;const h=a.x+(r.x-s.x)*e/3,l=a.y+(r.y-s.y)*e/3,d=r.x-(o.x-a.x)*e/3,c=r.y-(o.y-a.y)*e/3;(t>0||s.x!==a.x||s.y!==a.y)&&(n+=` C${h.toFixed(2)},${l.toFixed(2)} ${d.toFixed(2)},${c.toFixed(2)} ${r.x.toFixed(2)},${r.y.toFixed(2)}`)}return n}}const r=a},9128:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={iterations:{min:1,max:5,default:3},baseSize:{min:50,max:200,default:150},outwardFactor:{min:.1,max:1.5,default:.58},segmentRatio:{min:.25,max:.45,default:.33},roundness:{min:0,max:1,default:0},thickness:{min:1,max:8,default:2}};generateShape(){const t=this.baseSize,e=t*Math.sqrt(3)/2,n=[{x:-t/2,y:e/3},{x:t/2,y:e/3},{x:0,y:2*-e/3}];this.resetRNG();const i=[];for(let t=0;t<3;t++){const e=n[t],s=n[(t+1)%3],a=this.generateKochSegment(e.x,e.y,s.x,s.y,this.iterations,this.outwardFactor,this.segmentRatio);let r=`M ${a[0].x} ${a[0].y}`;if(this.roundness>0&&a.length>2){for(let t=1;t<a.length-1;t++){a[t],a[t+1];const e=a[t-1],n=a[t],i=a[t+1];if(this.roundness>0){const s=.4*this.roundness,a=n.x-e.x,o=n.y-e.y,h=i.x-n.x,l=i.y-n.y;r+=` C ${n.x-a*s},${n.y-o*s} ${n.x+h*s},${n.y+l*s} ${i.x},${i.y}`,t++}else r+=` L ${n.x},${n.y}`}if(a.length%2==0){const t=a[a.length-1];r+=` L ${t.x},${t.y}`}}else for(let t=1;t<a.length;t++)r+=` L ${a[t].x},${a[t].y}`;i.push(r)}return`<path \n            d="${i.join(" ")}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            fill="none"\n            stroke-linecap="round"\n            stroke-linejoin="round"\n        />`}generateKochSegment(t,e,n,i,s,a,r){if(s<=0)return[{x:t,y:e},{x:n,y:i}];const o=[];o.push({x:t,y:e});const h=n-t,l=i-e,d=Math.sqrt(h*h+l*l),c=r,u=t+h*c,m=e+l*c,p=t+h*(1-c),f=e+l*(1-c),x=Math.atan2(l,h)-Math.PI/2,g=d*c*a,y=(u+p)/2+Math.cos(x)*g,$=(m+f)/2+Math.sin(x)*g,M=this.generateKochSegment(t,e,u,m,s-1,a,r),w=this.generateKochSegment(u,m,y,$,s-1,a,r),k=this.generateKochSegment(y,$,p,f,s-1,a,r),S=this.generateKochSegment(p,f,n,i,s-1,a,r);return o.push(...M.slice(1)),o.push(...w.slice(1)),o.push(...k.slice(1)),o.push(...S.slice(1)),o}}const a=s},9198:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:200,default:200},borderThickness:{min:1,max:10,default:5},emotion:{min:-100,max:100,default:100},eyeWidth:{min:5,max:50,default:15},eyeHeight:{min:5,max:50,default:35},eyeSpacing:{min:10,max:100,default:25},eyeAngle:{min:-45,max:45,default:0},eyeY:{min:-50,max:50,default:-20},blinkInterval:{min:1,max:10,default:2},fillStyle:{options:["outline","filled"],default:"filled"}};getFillAttributes(){return"filled"===this.fillStyle?{faceFill:"white",featureFill:"black",stroke:"none"}:{faceFill:"none",featureFill:"white",stroke:"white"}}interpolateSmile(t){const e=.45;if(t<0){const n=(t+100)/100;return{width:.4+(e-.4)*n,height:.15*n-.15,yPos:.3+(.2-.3)*n}}{const n=t/100;return{width:e+(.5-e)*n,height:0+.25*n,yPos:.2+(.15-.2)*n}}}generateShape(){const t=this.size/2,e=this.getFillAttributes(),n=[];e.doubleStroke&&n.push(`<circle \n                cx="0" \n                cy="0" \n                r="${t+this.borderThickness}"\n                fill="none"\n                stroke="white"\n                stroke-width="${this.borderThickness}"\n            />`),n.push(`<circle \n            cx="0" \n            cy="0" \n            r="${t}"\n            fill="${e.faceFill}"\n            stroke="${e.stroke}"\n            stroke-width="${this.borderThickness}"\n        />`);const i=this.eyeAngle*Math.PI/180,s=t*this.eyeSpacing/100,a=t*this.eyeY/100,r=t*this.eyeWidth/100,o=t*this.eyeHeight/100;["left","right"].forEach((t=>{const h="left"===t?-1:1,l=s*Math.cos(i)-a*Math.sin(i),d=s*Math.sin(i)+a*Math.cos(i);let c=`<ellipse\n                transform="rotate(${this.eyeAngle})"\n                cx="${h*l}"\n                cy="${d}"\n                rx="${r/2}"\n                ry="${o/2}"\n                fill="${e.featureFill}"`;c+=`>\n                    <animate \n                        attributeName="ry" \n                        values="${o/2};${o/2};1;${o/2}" \n                        keyTimes="0;0.85;0.9;1"\n                        dur="${this.blinkInterval}s" \n                        repeatCount="indefinite" \n                    />\n                </ellipse>`,n.push(c)}));const h=this.interpolateSmile(this.emotion),l=t*h.width*2,d=-l/2,c=l/2,u=t*h.yPos,m=t*h.height,p=d+.25*l,f=c-.25*l,x=u+m,g=u+m;return n.push(`<path \n            d="M ${d} ${u}\n               C ${p} ${x}, ${f} ${g}, ${c} ${u}"\n            fill="none"\n            stroke="${e.featureFill}"\n            stroke-width="${this.borderThickness}"\n            stroke-linecap="round"\n        />`),n.join("")}}const a=s},9240:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={count:{min:2,max:10,default:6},spacing:{min:5,max:40,default:20},size:{min:100,max:200,default:190},thickness:{min:1,max:10,default:2}};generateShape(){const t=[];for(let e=0;e<this.count;e++){const n=this.size-e*this.spacing*2;if(n<=0)break;const i=n/2,s=`M ${-i} ${-i} L ${i} ${-i} L ${i} ${i} L ${-i} ${i} Z`;t.push(`<path \n                d="${s}"\n                fill="none"\n                stroke="white"\n                stroke-width="${this.thickness}"\n            />`)}return t.join("")}}const a=s},9241:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={ballCount:{min:3,max:12,default:6},minRadius:{min:10,max:40,default:35},maxRadius:{min:20,max:80,default:25},spacing:{min:60,max:120,default:100},handleSize:{min:.5,max:3.5,default:2},tension:{min:.1,max:.9,default:.3}};generateShape(){this.resetRNG();const t=this.generateBalls(),e=this.createMetaballPath(t);return this.createSVGElements(t,e)}seededRandom(t,e){const n=this.random();return void 0===e&&void 0===t?n:(void 0===e&&(e=0),e+n*(t-e))}generateBalls(){const t=[],e=2*Math.PI/this.ballCount;for(let n=0;n<this.ballCount;n++){const i=n*e+this.seededRandom(-.1,.1),s=this.seededRandom(.9,1.1),a=.5*this.spacing*s,r=Math.cos(i)*a,o=Math.sin(i)*a,h=this.maxRadius-this.minRadius,l=this.seededRandom(.6,.8),d=this.minRadius+h*l;t.push({x:r,y:o,r:d,c:[r,o]})}return t}createMetaballPath(t){if(t.length<2)return null;let e="";for(let n=0;n<t.length;n++){const i=[t[n],t[(n+1)%t.length],t[(n+2)%t.length]],s=this.curvesBetweenCircles(i[0].r,i[1].r,i[0].c,i[1].c,this.handleSize,this.tension);if(!s)continue;const a=this.curvesBetweenCircles(i[1].r,i[2].r,i[1].c,i[2].c,this.handleSize,this.tension);a&&(""===e&&(e+=`M ${s.p[1][0]},${s.p[1][1]} `),e+=`C ${s.h[1][0]},${s.h[1][1]} `,e+=`${s.h[3][0]},${s.h[3][1]} `,e+=`${s.p[3][0]},${s.p[3][1]} `,e+=`A ${a.r1},${a.r1} 1 0 1 ${a.p[1][0]},${a.p[1][1]} `)}return""!==e&&(e+="Z"),e}createSVGElements(t,e){let n="";return e&&""!==e&&(n+=`<path \n                d="${e}" \n                fill="white" \n                stroke="none" \n            />`),n}dist(t,e){return Math.sqrt(Math.pow(t[0]-e[0],2)+Math.pow(t[1]-e[1],2))}angle(t,e){return Math.atan2(t[1]-e[1],t[0]-e[0])}getVector(t,e,n){return[t[0]+n*Math.cos(e),t[1]+n*Math.sin(e)]}curvesBetweenCircles(t,e,n,i,s=2.4,a=.5){const r=Math.PI/2,o=this.dist(n,i);let h=0,l=0;if(0===t||0===e||o<=Math.abs(t-e))return null;o<t+e&&(h=Math.acos((t*t+o*o-e*e)/(2*t*o)),l=Math.acos((e*e+o*o-t*t)/(2*e*o)));const d=this.angle(i,n),c=Math.acos((t-e)/o),u=d+h+(c-h)*a,m=d-h-(c-h)*a,p=d+Math.PI-l-(Math.PI-l-c)*a,f=d-Math.PI+l+(Math.PI-l-c)*a,x=this.getVector(n,u,t),g=this.getVector(n,m,t),y=this.getVector(i,p,e),$=this.getVector(i,f,e),M=t+e,w=Math.min(a*s,this.dist(x,y)/M)*Math.min(1,2*o/(t+e)),k=t*w,S=e*w;return{p:[x,g,y,$],h:[this.getVector(x,u-r,k),this.getVector(g,m+r,k),this.getVector(y,p+r,S),this.getVector($,f-r,S)],escaped:o>t,r:e,r1:t}}}const a=s},9299:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:20,max:100,default:31},arcRadius:{min:30,max:120,default:51},thickness:{min:1,max:20,default:8},arcStart:{min:-90,max:90,default:-90},arcLength:{min:10,max:180,default:60},gap:{min:0,max:100,default:0}};generateShape(){return`\n            <circle \n            cx="0" \n            cy="0" \n            r="${this.radius}"\n            fill="none"\n            stroke="white"\n            stroke-width="${this.thickness}"\n        />\n            ${this.createArc(-90+this.arcStart,this.arcLength,-this.gap/2)}\n            ${this.createArc(90+this.arcStart,this.arcLength,this.gap/2)}\n        `}createArc(t,e,n){const i=(t-e/2)*(Math.PI/180),s=(t+e/2)*(Math.PI/180),a=n,r=a+this.arcRadius*Math.cos(i),o=this.arcRadius*Math.sin(i),h=a+this.arcRadius*Math.cos(s),l=this.arcRadius*Math.sin(s),d=e>180?1:0;return`<path \n            d="M ${r} ${o} A ${this.arcRadius} ${this.arcRadius} 0 ${d} 1 ${h} ${l}"\n            stroke="white"\n            stroke-width="${this.thickness}"\n            stroke-linecap="round"\n            fill="none"\n        />`}}const a=s},9376:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:50,max:150,default:150},height:{min:50,max:200,default:100},openness:{min:.1,max:.9,default:.4}};generateShape(){const t=Math.min(400,400)/400,e=this.width*t,n=this.height*t,i=e/2,s=n/2,a=e*this.openness/2,r=n*this.openness;return`<path d="M ${-i} 0 \n           Q 0 ${-s} ${i} 0\n           Q 0 ${s} ${-i} 0" fill="white" />\n               <path d="M ${-a} 0\n           Q 0 ${-r/2} ${a} 0\n           Q 0 ${r/2} ${-a} 0" fill="black" />`}}const a=s},9576:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={count:{min:1,max:12,default:3},sizeRatio:{min:.3,max:.8,default:.5},fillMode:{options:["filled","hollow"],default:"filled"},direction:{options:["up","down"],default:"up"},shift:{min:-40,max:40,default:0}};generateShape(){const t=[],e=[];let n=160;for(let t=0;t<this.count;t++)e.push(n),n*=this.sizeRatio;let i=0;for(let t=0;t<e.length;t++)i+=.5*e[t];let s="up"===this.direction?-i/2:i/2;for(let n=this.count-1;n>=0;n--){const i=e[n]/2,a=this.shift*((n+1)/this.count),r=`M ${-i+a} ${s} \n                         A ${i} ${i} 0 0 ${"up"===this.direction?0:1} ${i+a} ${s} \n                         L ${-i+a} ${s} Z`,o="filled"===this.fillMode?'fill="white" stroke="none"':'fill="none" stroke="white" stroke-width="2"';t.push(`<path d="${r}" ${o}/>`);const h=i;s+="up"===this.direction?h:-h}return t.join("")}}const a=s},9601:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={size:{min:50,max:200,default:150},iterations:{min:1,max:6,default:4},scale:{min:.2,max:.8,default:.6},rotation:{min:-90,max:90,default:90}};generateMaskId(t){return`square-circle-mask-${t}-${Math.random().toString(36).substr(2,9)}`}generateShape(){const t=["<defs>"],e=(n,i,s)=>{if(s>=this.iterations)return"";const a=this.generateMaskId(s);t.push(`\n                <mask id="${a}">\n                    <rect x="${-n/2}" y="${-n/2}" width="${n}" height="${n}" fill="white"/>\n                    <circle cx="0" cy="0" r="${n/2}" fill="black"/>\n                </mask>\n            `);const r=n*this.scale;return`\n                <rect \n                    x="${-n/2}" \n                    y="${-n/2}" \n                    width="${n}" \n                    height="${n}"\n                    transform="rotate(${i})"\n                    fill="white"\n                    mask="url(#${a})"\n                />\n            `+e(r,i+this.rotation,s+1)};t.push("</defs>");const n=e(this.size,0,0);return t.join("")+n}}const a=s},9611:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={edges:{min:3,max:12,default:5},layers:{min:1,max:5,default:5},growth:{min:2,max:10,default:6},thickness:{min:1,max:10,default:5},skew:{min:-90,max:90,default:0}};_toRad(t){return t*(Math.PI/180)}_divide(t){const e=Math.max(1,Math.floor(t)),n=360/e;return Array(e).fill(0).map(((t,e)=>e*n))}_randomDoubleGenerator(t){let e=4294967295,n=123456789+t&e,i=987654321-t&e;return()=>{i=36969*(65535&i)+(i>>>16)&e,n=18e3*(65535&n)+(n>>>16)&e;let t=(i<<16)+(65535&n)>>>0;return t/=4294967296,t}}_magicPoint(t,e,n){let i=e+t*(n-e);return i>n?i-=e:i<e&&(i+=e),i}_point(t,e,n){const i=this._toRad(this.skew),s=this._toRad(n)+i,a=t+e*Math.cos(s),r=t+e*Math.sin(s);return[Math.round(a),Math.round(r)]}_createPoints(t,e,n,i){const s=Math.max(3,Math.floor(n)),a=Math.max(1,t/2),r=Math.max(1,e*(a/10)),o=this._divide(s),h=i||Math.floor(99999*this.random()),l=this._randomDoubleGenerator(h);return o.map((t=>{const e=this._magicPoint(l(),r,a);return this._point(0,e,t)}))}_createSvgPath(t){let e="";const n=[(t[0][0]+t[1][0])/2,(t[0][1]+t[1][1])/2];e+=`M${n[0]},${n[1]}`;for(let n=0;n<t.length;n++){const i=t[(n+1)%t.length],s=t[(n+2)%t.length],a=[(i[0]+s[0])/2,(i[1]+s[1])/2];e+=`Q${i[0]},${i[1]},${a[0]},${a[1]}`}return e+"Z"}generateShape(){const t=[],e=Math.max(1,Math.min(5,Math.floor(this.layers)));for(let n=0;n<e;n++){const e=Math.max(10,100*(1-.2*n)),i=this._createPoints(2*e,this.growth,this.edges,n),s=this._createSvgPath(i);t.push(`<path \n                d="${s}"\n                fill="none"\n                stroke="white"\n                stroke-width="${this.thickness}"\n            />`)}return t.join("")}}const a=s},9616:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:100,max:250,default:200},height:{min:100,max:250,default:200},rows:{min:1,max:8,default:3},columns:{min:1,max:8,default:3},thickness:{min:1,max:10,default:2},spacing:{min:0,max:20,default:10},cornerRadius:{min:0,max:100,default:50},mode:{options:["stroke","fill"],default:"fill"}};generateShape(){const t=[],e=(this.width-this.spacing*(this.columns-1))/this.columns,n=(this.height-this.spacing*(this.rows-1))/this.rows,i=-this.width/2,s=-this.height/2;for(let a=0;a<this.rows;a++)for(let r=0;r<this.columns;r++){const o=i+r*(e+this.spacing),h=s+a*(n+this.spacing),l=Math.min(e,n)/2,d=this.cornerRadius/100*l;t.push(`<rect \n                    x="${o}"\n                    y="${h}"\n                    width="${e}"\n                    height="${n}"\n                    rx="${d}"\n                    ry="${d}"\n                    fill="${"fill"===this.mode?"white":"none"}"\n                    stroke="${"stroke"===this.mode?"white":"none"}"\n                    stroke-width="${this.thickness}"\n                />`)}return t.join("")}}const a=s},9638:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={dotSize:{min:1,max:20,default:4},spiralSize:{min:50,max:120,default:120},segments:{min:3,max:24,default:6},thickness:{min:1,max:10,default:8},spread:{min:20,max:120,default:90}};getSpreadAngle(){return this.spread*(Math.PI/180)}generateShape(){const t=[],e=2*Math.PI/this.segments;for(let n=0;n<this.segments;n++){let i=0,s=0;const a=n*e;for(let e=0;e<4;e++){const n=(e+1)*(this.spiralSize/5.5),r=e/3,o=a+this.getSpreadAngle()*r;i=n*Math.cos(o),s=n*Math.sin(o),t.push(`<circle \n                    cx="${i}" \n                    cy="${s}"\n                    r="${this.dotSize}"\n                    fill="white"\n                />`)}}return t.join("")}}const a=s},9741:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={spikeDepth:{min:10,max:100,default:40},spikeWidth:{min:10,max:100,default:30},spikesPerSide:{min:1,max:5,default:2},innerPadding:{min:0,max:50,default:20}};rotatePoint(t,e,n){const i=t.x-e.x,s=t.y-e.y,a=Math.cos(n),r=Math.sin(n);return{x:i*a-s*r+e.x,y:i*r+s*a+e.y}}generateShape(){const t=this.spikeDepth,e=this.spikeWidth,n=Math.round(this.spikesPerSide),i=200-2*this.innerPadding,s=i/2,a=[];for(let r=0;r<4;r++){const o=r*Math.PI/2;for(let r=0;r<n;r++){const h=i/n,l=h*r-(s-h/2),d=[{x:l-e/2,y:s},{x:l,y:s-t},{x:l+e/2,y:s}].map((t=>this.rotatePoint(t,{x:0,y:0},o)));0===a.length?a.push(`M ${d[0].x} ${d[0].y}`):a.push(`L ${d[0].x} ${d[0].y}`),a.push(`L ${d[1].x} ${d[1].y}`),a.push(`L ${d[2].x} ${d[2].y}`)}}return a.push("Z"),`<path \n            d="${a.join(" ")}"\n            fill="white"\n        />`}}const a=s},9793:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={width:{min:100,max:300,default:200},height:{min:50,max:200,default:100},cutoutWidth:{min:20,max:150,default:80},cutoutHeight:{min:20,max:100,default:60},cornerRadius:{min:0,max:100,default:50}};createRoundedRectPath(t,e,n,i,s){const a=Math.min(s,Math.min(n/2,i/2));return`M ${t+a} ${e}\n                H ${t+n-a}\n                A ${a} ${a} 0 0 1 ${t+n} ${e+a}\n                V ${e+i-a}\n                A ${a} ${a} 0 0 1 ${t+n-a} ${e+i}\n                H ${t+a}\n                A ${a} ${a} 0 0 1 ${t} ${e+i-a}\n                V ${e+a}\n                A ${a} ${a} 0 0 1 ${t+a} ${e}\n                Z`}createRectPath(t,e,n,i){return`M ${t} ${e}\n                H ${t+n}\n                V ${e+i}\n                H ${t}\n                Z`}generateShape(){const t=Math.min(this.cutoutWidth,.9*this.width),e=Math.min(this.cutoutHeight,.9*this.height),n=Math.min(this.cornerRadius,Math.min(this.width,this.height)/2),i=-this.width/2,s=-this.height/2,a=-t/2,r=-e/2;return`<path \n            d="${this.createRoundedRectPath(i,s,this.width,this.height,n)} ${this.createRectPath(a,r,t,e)}"\n            fill-rule="evenodd"\n            fill="white"\n        />`}}const a=s},9808:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={lineCount:{min:2,max:5,default:3},thickness:{min:15,max:35,default:25},curveAmount:{min:.2,max:.6,default:.4},horizontalScale:{min:.6,max:.9,default:.85}};generateShape(){const t=[],e=200*this.horizontalScale,n=200/(this.lineCount+1),i=[];for(let t=0;t<this.lineCount;t++){const s=n*(t+1)-100,a=t%2==0,r=this.createPreciseCurve(s,e,a);i.push(r)}return t.push(`<path d="${i.join(" ")}" fill="white" />`),t.join("")}createPreciseCurve(t,e,n){const i=e/2,s=this.thickness/2,a=i*this.curveAmount,r=n?1:-1;let o=`M ${-i},${t-s}`;return o+=` C ${-i/3},${t-s-r*a}`,o+=` ${i/3},${t-s+r*a}`,o+=` ${i},${t-s}`,o+=` L ${i},${t+s}`,o+=` C ${i/3},${t+s+r*a}`,o+=` ${-i/3},${t+s-r*a}`,o+=` ${-i},${t+s}`,o+=" Z",o}}const a=s},9894:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={points:{min:4,max:32,default:8},size:{min:50,max:150,default:100},innerSize:{min:1,max:99,default:40},outerCornerRadius:{min:0,max:50,default:0},innerCornerRadius:{min:0,max:50,default:0},rotation:{min:-180,max:180,default:0}};generateShape(){const t=Math.round(this.points);this.innerSizeRatio=this.innerSize/100;const e=this.rotation*Math.PI/180,n=Math.min(1,8/t);this.outerCornerRadiusHalf=this.outerCornerRadius/2*n,this.innerCornerRadiusHalf=this.innerCornerRadius/2*n;const i=[],s=this.size,a=this.size*this.innerSizeRatio,r=Math.PI/t;for(let n=0;n<2*t;n++){const t=n*r+e,o=n%2==0?s:a;i.push([Math.cos(t)*o,Math.sin(t)*o])}let o=`<path \n            d="M ${i[0][0]} ${i[0][1]}`;for(let t=1;t<=i.length;t++){const e=i[t%i.length],n=i[t-1],s=i[(t+1)%i.length],a=t%2==0?this.outerCornerRadiusHalf:this.innerCornerRadiusHalf;if(a<=0)o+=` L ${e[0]} ${e[1]}`;else{const t=[n[0]-e[0],n[1]-e[1]],i=[s[0]-e[0],s[1]-e[1]],r=Math.sqrt(t[0]*t[0]+t[1]*t[1]),h=Math.sqrt(i[0]*i[0]+i[1]*i[1]),l=0===r?[0,0]:[t[0]/r,t[1]/r],d=0===h?[0,0]:[i[0]/h,i[1]/h],c=Math.min(r,h)/2,u=Math.min(a,c),m=[e[0]+l[0]*u,e[1]+l[1]*u],p=[e[0]+d[0]*u,e[1]+d[1]*u];o+=` L ${m[0]} ${m[1]}`,o+=` Q ${e[0]} ${e[1]} ${p[0]} ${p[1]}`}}return o+=' Z" fill="white" />',o}}const a=s},9918:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>r});var i=n(1965),s=n(6987);class a extends i.y{static parameters={layers:{min:3,max:15,default:15},radius:{min:50,max:200,default:100},amplitude:{min:5,max:150,default:150},noiseScale:{min:.1,max:1.5,default:1.5},seed:{min:0,max:1e3,default:42},thickness:{min:1,max:10,default:3},curvature:{min:.1,max:1,default:.8}};getNoise(t,e){return s.A.noise(t*this.noiseScale+this.seed,e*this.noiseScale+this.seed)}generateShape(){const t=[],{radius:e,layers:n,amplitude:i,thickness:s,curvature:a}=this;t.push(`<circle\n            cx="0"\n            cy="0"\n            r="${e}"\n            stroke="white"\n            stroke-width="${s}"\n            fill="none"\n        />`);const r=`clip-${Math.floor(1e4*Math.random())}`;t.push(`\n            <defs>\n                <clipPath id="${r}">\n                    <circle cx="0" cy="0" r="${e}" />\n                </clipPath>\n            </defs>\n        `),t.push(`<g clip-path="url(#${r})">`);for(let r=0;r<n;r++){const o=2*e*(r+.5)/n-e,h=r/(n-1),l=i*(.5+.5*h),d=this.generateWavePath(e,o,l,a,h);t.push(`<path\n                d="${d}"\n                stroke="white"\n                stroke-width="${s}"\n                fill="none"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n            />`)}return t.push("</g>"),t.join("")}generateWavePath(t,e,n,i,s){const a=[],r=2*t;a.push([1.5*-t,e]);for(let o=0;o<=100;o++){const h=o/100*r-t,l=(h+t)/r,d=e-Math.sin(l*Math.PI)*i*t*.5*(2*s-1)-this.getNoise(3*l,s)*n*(1-.7*s);a.push([h,d])}a.push([1.5*t,e]);let o=`M${a[0][0]},${a[0][1]}`;for(let t=1;t<a.length;t++)o+=` L${a[t][0]},${a[t][1]}`;return o}}const r=a},9921:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={radius:{min:50,max:150,default:100},pointCount:{min:5,max:100,default:30},borderThickness:{min:1,max:10,default:2},cellLineThickness:{min:1,max:5,default:2},jitter:{min:0,max:30,default:0}};generatePoints(){this.resetRNG();const t=[];t.push([0,0]);const e=Math.max(12,Math.floor(this.pointCount/3));for(let n=0;n<e;n++){const i=2*n*Math.PI/e,s=.95*this.radius;t.push([s*Math.cos(i),s*Math.sin(i)])}const n=.5*this.radius/Math.sqrt(this.pointCount);let i=0;const s=20*this.pointCount;for(;t.length<this.pointCount+e&&i<s;){i++;const e=this.random()*Math.PI*2,s=.9*this.radius*Math.sqrt(this.random());let a=s*Math.cos(e),r=s*Math.sin(e);const o=1-Math.hypot(a,r)/this.radius,h=this.jitter*o;if(h>0){const t=this.random()*Math.PI*2,e=this.random()*h;a+=e*Math.cos(t),r+=e*Math.sin(t)}let l=!1;for(const e of t)if(Math.hypot(a-e[0],r-e[1])<n){l=!0;break}!l&&Math.hypot(a,r)<=.95*this.radius&&t.push([a,r])}return t}delaunayTriangulate(t){const e=(t,e,n)=>{const i=t[0],s=t[1],a=e[0],r=e[1],o=n[0],h=n[1],l=2*(i*(r-h)+a*(h-s)+o*(s-r));if(Math.abs(l)<1e-10)return{x:0,y:0,radius:1/0};const d=i*i+s*s,c=a*a+r*r,u=o*o+h*h,m=(d*(r-h)+c*(h-s)+u*(s-r))/l,p=(d*(o-a)+c*(i-o)+u*(a-i))/l;return{x:m,y:p,radius:Math.hypot(m-i,p-s)}},n=(t,e,n)=>Math.hypot(t[0]-n.x,t[1]-n.y)<n.radius,i=2*this.radius,s=[[-i,-i],[0,2*i],[2*i,-i]];let a=[{vertices:[0,1,2],points:s}];for(let i=0;i<t.length;i++){const r=t[i],o=[];a=a.filter((t=>{const i=e(t.points[0],t.points[1],t.points[2]),s=n(r,0,i);return s&&(o.push([t.vertices[0],t.vertices[1]]),o.push([t.vertices[1],t.vertices[2]]),o.push([t.vertices[2],t.vertices[0]])),!s}));const h=[];for(const t of o){let e=!0;for(const n of o)if(t!==n&&(t[0]===n[1]&&t[1]===n[0]||t[0]===n[0]&&t[1]===n[1])){e=!1;break}e&&h.push(t)}for(const e of h)a.push({vertices:[e[0],e[1],i+3],points:[e[0]<3?s[e[0]]:t[e[0]-3],e[1]<3?s[e[1]]:t[e[1]-3],r]})}return a=a.filter((t=>!(t.vertices[0]<3||t.vertices[1]<3||t.vertices[2]<3))),a.map((t=>({indices:t.vertices.map((t=>t-3)),points:t.points})))}computeVoronoiCells(t,e){const n=new Array(t.length).fill(0).map((()=>[]));return e.forEach((e=>{const{indices:i,points:s}=e,[a,r,o]=s,h=2*(a[0]*(r[1]-o[1])+r[0]*(o[1]-a[1])+o[0]*(a[1]-r[1]));if(Math.abs(h)<1e-10)return;const l=a[0]*a[0]+a[1]*a[1],d=r[0]*r[0]+r[1]*r[1],c=o[0]*o[0]+o[1]*o[1],u=[(l*(r[1]-o[1])+d*(o[1]-a[1])+c*(a[1]-r[1]))/h,(l*(o[0]-r[0])+d*(a[0]-o[0])+c*(r[0]-a[0]))/h];i.forEach((e=>{e>=0&&e<t.length&&n[e].push(u)}))})),n.map(((e,n)=>{if(e.length<3)return null;const i=t[n],s=e.sort(((t,e)=>Math.atan2(t[1]-i[1],t[0]-i[0])-Math.atan2(e[1]-i[1],e[0]-i[0])));return this.clipCellToCircle(s,i)})).filter((t=>null!==t))}clipCellToCircle(t,e){if(t.length<3)return null;const n=[],i=this.radius;for(let e=0;e<t.length;e++){const s=t[e],a=t[(e+1)%t.length];Math.hypot(s[0],s[1])<=i&&n.push(s);const r=a[0]-s[0],o=a[1]-s[1],h=r*r+o*o,l=2*(r*s[0]+o*s[1]),d=l*l-4*h*(s[0]*s[0]+s[1]*s[1]-i*i);d>=0&&[(-l+Math.sqrt(d))/(2*h),(-l-Math.sqrt(d))/(2*h)].forEach((t=>{if(t>=0&&t<=1){const e=s[0]+t*r,i=s[1]+t*o;n.push([e,i])}}))}return n.length>=3?n:null}generateShape(){const t=this.generatePoints(),e=this.delaunayTriangulate(t),n=this.computeVoronoiCells(t,e);let i=`<circle \n            cx="0" \n            cy="0" \n            r="${this.radius}"\n            stroke="white"\n            stroke-width="${this.borderThickness}"\n            fill="none"\n        />`;return n.forEach((t=>{if(t&&t.length>=3){let e=`M ${t[0][0]} ${t[0][1]}`;for(let n=1;n<t.length;n++)e+=` L ${t[n][0]} ${t[n][1]}`;e+=" Z",i+=`<path \n                    d="${e}"\n                    stroke="white"\n                    stroke-width="${this.cellLineThickness}"\n                    fill="none"\n                />`}})),i}}const a=s},9956:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>a});var i=n(1965);class s extends i.y{static parameters={count:{min:2,max:12,default:4},spacing:{min:5,max:40,default:25},maxSize:{min:100,max:300,default:169},thickness:{min:1,max:10,default:6},yOffset:{min:-200,max:200,default:24}};generateShape(){const t=[],e=Math.sqrt(3)/2,n=this.maxSize,i=this.spacing/Math.cos(Math.PI/6);for(let s=0;s<this.count;s++){const a=n-s*i*2;if(a<=0)break;const r=a/2,o=a*e/2,h=0===s?0:this.yOffset*(s/(this.count-1)),l=[`0,${-o+h}`,`${r},${o+h}`,`${-r},${o+h}`];t.push(`<polygon \n                points="${l.join(" ")}"\n                fill="none"\n                stroke="white"\n                stroke-width="${this.thickness}"\n            />`)}return t.join("")}}const a=s}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var a=e[i]={id:i,exports:{}};return t[i](a,a.exports,n),a.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{"use strict";var t=n(5072),e=n.n(t),i=n(7825),s=n.n(i),a=n(7659),r=n.n(a),o=n(5056),h=n.n(o),l=n(540),d=n.n(l),c=n(1113),u=n.n(c),m=n(365),p={};p.styleTagTransform=u(),p.setAttributes=h(),p.insert=r().bind(null,"head"),p.domAPI=s(),p.insertStyleElement=d(),e()(m.A,p),m.A&&m.A.locals&&m.A.locals;const f=n(4367),x={};f.keys().forEach((t=>{const e=f(t),n=e.default||Object.values(e)[0];n&&n.name&&(x[n.name]=n)}));const g=x;var y=n(1965);const $={filled:{name:"Filled",fillType:"solid",fillColor:"#ffffff",strokeType:"none",fillOpacity:1},outline:{name:"Outline",fillType:"none",strokeType:"solid",strokeColor:"#FFFFFF",strokeWidth:2},neon:{name:"Neon",fillType:"solid",fillColor:"#111111",fillOpacity:.8,strokeType:"solid",strokeColor:"#39FF14",strokeWidth:2},sunset:{name:"Sunset",fillType:"linearGradient",fillGradientColor1:"#FF5E62",fillGradientColor2:"#FF9966",fillGradientAngle:45,fillOpacity:1,strokeType:"none"},ocean:{name:"Ocean",fillType:"linearGradient",fillGradientColor1:"#2E3192",fillGradientColor2:"#1BFFFF",fillGradientAngle:90,fillOpacity:1,strokeType:"none"},blueprint:{name:"Blueprint",fillType:"none",strokeType:"solid",strokeColor:"#00CCFF",strokeWidth:1.5,strokeDasharray:"5,2"},candy:{name:"Candy",fillType:"linearGradient",fillGradientColor1:"#FF61D2",fillGradientColor2:"#FE9090",fillGradientAngle:120,fillOpacity:.9,strokeType:"solid",strokeColor:"#FFFFFF",strokeWidth:1.5},midnight:{name:"Midnight",fillType:"radialGradient",fillGradientColor1:"#20002c",fillGradientColor2:"#000000",fillOpacity:1,strokeType:"solid",strokeColor:"#6A5ACD",strokeWidth:1},monochrome:{name:"Monochrome",fillType:"solid",fillColor:"#333333",fillOpacity:1,strokeType:"solid",strokeColor:"#999999",strokeWidth:1},cyberpunk:{name:"Cyberpunk",fillType:"linearGradient",fillGradientColor1:"#ff00ff",fillGradientColor2:"#00ffff",fillGradientAngle:130,fillOpacity:.9,strokeType:"solid",strokeColor:"#ffff00",strokeWidth:2},vaporwave:{name:"Vaporwave",fillType:"linearGradient",fillGradientColor1:"#ff71ce",fillGradientColor2:"#b967ff",fillGradientAngle:45,fillOpacity:1,strokeType:"solid",strokeColor:"#01cdfe",strokeWidth:1.5},aurora:{name:"Aurora",fillType:"linearGradient",fillGradientColor1:"#3fada8",fillGradientColor2:"#5614b0",fillGradientAngle:135,fillOpacity:.85,strokeType:"none"},emerald:{name:"Emerald",fillType:"linearGradient",fillGradientColor1:"#43cea2",fillGradientColor2:"#185a9d",fillGradientAngle:90,fillOpacity:1,strokeType:"none"},crimson:{name:"Crimson",fillType:"solid",fillColor:"#DC143C",fillOpacity:1,strokeType:"solid",strokeColor:"#800000",strokeWidth:1.5},ethereal:{name:"Ethereal",fillType:"radialGradient",fillGradientColor1:"#ffffff",fillGradientColor2:"#8e2de2",fillOpacity:.8,strokeType:"none"},golden:{name:"Golden",fillType:"linearGradient",fillGradientColor1:"#f7971e",fillGradientColor2:"#ffd200",fillGradientAngle:45,fillOpacity:1,strokeType:"solid",strokeColor:"#ff8c00",strokeWidth:1},cosmic:{name:"Cosmic",fillType:"radialGradient",fillGradientColor1:"#3A1C71",fillGradientColor2:"#D76D77",fillOpacity:.9,strokeType:"solid",strokeColor:"#FFAF7B",strokeWidth:1},frost:{name:"Frost",fillType:"linearGradient",fillGradientColor1:"#a1c4fd",fillGradientColor2:"#c2e9fb",fillGradientAngle:180,fillOpacity:.9,strokeType:"solid",strokeColor:"#ffffff",strokeWidth:.8},jungle:{name:"Jungle",fillType:"linearGradient",fillGradientColor1:"#0fd850",fillGradientColor2:"#00723f",fillGradientAngle:90,fillOpacity:1,strokeType:"none"},holographic:{name:"Holographic",fillType:"linearGradient",fillGradientColor1:"#8A2387",fillGradientColor2:"#F27121",fillGradientAngle:120,fillOpacity:.7,strokeType:"solid",strokeColor:"#C6FFDD",strokeWidth:1},retro:{name:"Retro",fillType:"solid",fillColor:"#fdbb2d",fillOpacity:1,strokeType:"solid",strokeColor:"#b21f1f",strokeWidth:2},pastel:{name:"Pastel",fillType:"linearGradient",fillGradientColor1:"#ffdde1",fillGradientColor2:"#ee9ca7",fillGradientAngle:45,fillOpacity:.8,strokeType:"solid",strokeColor:"#ffffff",strokeWidth:1},electric:{name:"Electric",fillType:"linearGradient",fillGradientColor1:"#0C0C0C",fillGradientColor2:"#242424",fillGradientAngle:90,fillOpacity:1,strokeType:"solid",strokeColor:"#00F2FF",strokeWidth:2},galaxy:{name:"Galaxy",fillType:"radialGradient",fillGradientColor1:"#302b63",fillGradientColor2:"#0f0c29",fillOpacity:.9,strokeType:"solid",strokeColor:"#24243e",strokeWidth:1},bubblegum:{name:"Bubblegum",fillType:"linearGradient",fillGradientColor1:"#FF0080",fillGradientColor2:"#FF8C00",fillGradientAngle:45,fillOpacity:.9,strokeType:"none"},toxic:{name:"Toxic",fillType:"linearGradient",fillGradientColor1:"#D3D3D3",fillGradientColor2:"#4b6cb7",fillGradientAngle:60,fillOpacity:.8,strokeType:"solid",strokeColor:"#00FF00",strokeWidth:2},"cotton-candy":{name:"Cotton Candy",fillType:"linearGradient",fillGradientColor1:"#D8B5FF",fillGradientColor2:"#1EAE98",fillGradientAngle:90,fillOpacity:.85,strokeType:"none"},twilight:{name:"Twilight",fillType:"linearGradient",fillGradientColor1:"#141E30",fillGradientColor2:"#243B55",fillGradientAngle:180,fillOpacity:1,strokeType:"solid",strokeColor:"#4b6cb7",strokeWidth:1},coral:{name:"Coral",fillType:"solid",fillColor:"#FF7F50",fillOpacity:.9,strokeType:"solid",strokeColor:"#FF6347",strokeWidth:1},laser:{name:"Laser",fillType:"solid",fillColor:"#000000",fillOpacity:1,strokeType:"solid",strokeColor:"#FF0000",strokeWidth:2}},M=class{constructor(t){this.editor=t,this.styleParams={fillType:"none",fillColor:"#000000",fillOpacity:1,fillGradientColor1:"#3498DB",fillGradientColor2:"#9B59B6",fillGradientAngle:90,strokeType:"solid",strokeColor:"#FFFFFF",strokeWidth:1,strokeGradientColor1:"#3498DB",strokeGradientColor2:"#9B59B6",strokeGradientAngle:90},this.stylePresets=$,this.originalStyleParams={...this.styleParams},this.createStyleControls=this.createStyleControls.bind(this),this.updateShapeStyle=this.updateShapeStyle.bind(this),this.createCompactColorInput=this.createCompactColorInput.bind(this),this.applyStylesToSVG=this.applyStylesToSVG.bind(this),this.saveStyleSettings=this.saveStyleSettings.bind(this),this.loadStyleSettings=this.loadStyleSettings.bind(this),this.resetStyle=this.resetStyle.bind(this),this.applyStylePreset=this.applyStylePreset.bind(this),this.randomizeStyle=this.randomizeStyle.bind(this),this.resetToDefaultStyle=this.resetToDefaultStyle.bind(this)}resetToDefaultStyle(){this.styleParams={...this.originalStyleParams}}applyStylePreset(t){const e=this.stylePresets[t];if(!e)return;const n={...this.styleParams};return Object.keys(e).forEach((t=>{"name"!==t&&(n[t]=e[t])})),this.styleParams=n,this.updateShapeStyle(this.editor?.currentShape),this.updateStyleControls(),this.editor?.controller?.history&&this.editor.controller.history.saveState(),!0}randomizeStyle(){const t={...this.styleParams},e=Math.random();if(e<.4?(t.fillType="solid",t.fillColor=this.getRandomColor()):e<.8?(t.fillType=Math.random()<.7?"linearGradient":"radialGradient",t.fillGradientColor1=this.getRandomColor(),t.fillGradientColor2=this.getRandomColor(),t.fillGradientAngle=Math.floor(360*Math.random())):t.fillType="none",t.fillOpacity="none"!==t.fillType?.6+.4*Math.random():1,"none"===t.fillType)t.strokeType="solid";else{const e=Math.random();e<.4?t.strokeType="none":e<.7?t.strokeType="solid":e<.9?(t.strokeType=Math.random()<.5?"linearGradient":"radialGradient",t.strokeGradientColor1=this.getRandomColor(),t.strokeGradientColor2=this.getRandomColor(),t.strokeGradientAngle=Math.floor(360*Math.random())):t.strokeType="solid"}if("none"!==t.strokeType&&(t.strokeColor=this.getRandomColor(),t.strokeWidth=.5+3*Math.random()),"none"===t.fillType&&"none"===t.strokeType&&(t.strokeType="solid",t.strokeColor=this.getRandomColor(),t.strokeWidth=1+2*Math.random()),Math.random()<.3){const e=this.getRandomColor(),n=this.generateHarmonicColors(e);"solid"===t.fillType?t.fillColor=e:t.fillType.includes("Gradient")&&(t.fillGradientColor1=e,t.fillGradientColor2=n[0]),"solid"===t.strokeType?t.strokeColor=n[1]:t.strokeType.includes("Gradient")&&(t.strokeGradientColor1=n[1],t.strokeGradientColor2=n[2])}return this.styleParams=t,this.updateShapeStyle(this.editor?.currentShape),this.editor?.controller?.history&&this.editor.controller.history.saveState(),!0}getRandomColor(){const t=Math.floor(360*Math.random())/360,e=(50+Math.floor(50*Math.random()))/100,n=(30+Math.floor(50*Math.random()))/100;let i,s,a;if(0===e)i=s=a=n;else{const r=(t,e,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t),o=n<.5?n*(1+e):n+e-n*e,h=2*n-o;i=r(h,o,t+1/3),s=r(h,o,t),a=r(h,o,t-1/3)}const r=t=>{const e=Math.round(255*t).toString(16);return 1===e.length?"0"+e:e};return`#${r(i)}${r(s)}${r(a)}`}generateHarmonicColors(t){let e=parseInt(t.slice(1,3),16)/255,n=parseInt(t.slice(3,5),16)/255,i=parseInt(t.slice(5,7),16)/255;const s=Math.max(e,n,i),a=Math.min(e,n,i);let r,o,h=(s+a)/2;if(s===a)r=o=0;else{const t=s-a;switch(o=h>.5?t/(2-s-a):t/(s+a),s){case e:r=(n-i)/t+(n<i?6:0);break;case n:r=(i-e)/t+2;break;case i:r=(e-n)/t+4}r/=6}const l=[],d=(r+.5)%1;l.push(this.hslToHex(d,o,h));const c=(r+.1)%1;l.push(this.hslToHex(c,o,h));const u=(r+.33)%1;return l.push(this.hslToHex(u,o,h)),l}hslToHex(t,e,n){let i,s,a;if(0===e)i=s=a=n;else{const r=(t,e,n)=>(n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t),o=n<.5?n*(1+e):n+e-n*e,h=2*n-o;i=r(h,o,t+1/3),s=r(h,o,t),a=r(h,o,t-1/3)}const r=t=>{const e=Math.round(255*t).toString(16);return 1===e.length?"0"+e:e};return`#${r(i)}${r(s)}${r(a)}`}loadStyleSettings(t){if(t){this.styleParams={...this.originalStyleParams};try{const e=localStorage.getItem("shapeStyleRegistry");if(e){const n=JSON.parse(e);n[t]&&(this.styleParams={...this.styleParams,...n[t]})}}catch(t){console.error("Error loading style settings:",t)}}}saveStyleSettings(t){if(t)try{let e={};const n=localStorage.getItem("shapeStyleRegistry");n&&(e=JSON.parse(n)),e[t]={...this.styleParams},localStorage.setItem("shapeStyleRegistry",JSON.stringify(e))}catch(t){console.error("Error saving style settings:",t)}}createStyleControls(t){document.querySelectorAll(".preset-row").forEach((t=>t.remove())),document.querySelectorAll(".style-row").forEach((t=>t.remove()));const e=document.createElement("div");e.className="style-row",e.id="style-control-row",e.style.display="flex",e.style.flexDirection="column",e.style.gap="12px",e.style.padding="8px 0";const n=document.createElement("span");n.className="param-name",n.textContent="STYLES",n.style.fontSize="10px",n.style.marginBottom="8px",e.appendChild(n);const i=document.createElement("div");i.style.display="flex",i.style.flexWrap="wrap",i.style.alignItems="center",i.style.gap="10px",i.style.width="100%";const s=document.createElement("div");s.style.display="flex",s.style.alignItems="center",s.style.gap="5px",s.style.maxWidth="360px";const a=document.createElement("div");a.style.display="flex",a.style.overflowX="auto",a.style.overflowY="hidden",a.style.scrollbarWidth="none",a.style.msOverflowStyle="none",a.style.maxWidth="330px",a.style.paddingBottom="5px";const r=document.createElement("style");r.textContent="\n          .presets-scroll-container::-webkit-scrollbar {\n            display: none;\n          }\n        ",document.head.appendChild(r),a.className="presets-scroll-container";const o=document.createElement("div");o.style.display="flex",o.style.gap="8px",o.style.alignItems="center",o.style.paddingLeft="2px",o.style.paddingRight="2px";const h=this.createStylePreview("Random",null,(()=>{this.randomizeStyle(),this.updateStyleControls(e)}));h.style.background="linear-gradient(45deg, #FF5E62, #FF9966, #2E3192, #1BFFFF, #FF61D2)",h.style.backgroundSize="400% 400%",h.style.animation="gradient-shift 3s ease infinite";const l=document.createElement("style");l.textContent="\n          @keyframes gradient-shift {\n            0% { background-position: 0% 50%; }\n            50% { background-position: 100% 50%; }\n            100% { background-position: 0% 50%; }\n          }\n        ",document.head.appendChild(l),o.appendChild(h),Object.keys(this.stylePresets).forEach((t=>{const e=this.stylePresets[t],n=this.createStylePreview(e.name,e,(()=>{this.applyStylePreset(t)}));o.appendChild(n)}));const d=document.createElement("button");d.innerHTML="&lt;",d.title="Scroll left",d.style.border="none",d.style.background="#1A1A1A",d.style.color="#666",d.style.borderRadius="50%",d.style.width="18px",d.style.height="18px",d.style.display="flex",d.style.alignItems="center",d.style.justifyContent="center",d.style.cursor="pointer",d.style.fontSize="10px",d.style.flexShrink="0";const c=document.createElement("button");c.innerHTML="&gt;",c.title="Scroll right",c.style.border="none",c.style.background="#1A1A1A",c.style.color="#666",c.style.borderRadius="50%",c.style.width="18px",c.style.height="18px",c.style.display="flex",c.style.alignItems="center",c.style.justifyContent="center",c.style.cursor="pointer",c.style.fontSize="10px",c.style.flexShrink="0",d.addEventListener("click",(()=>{a.scrollBy({left:-100,behavior:"smooth"})})),c.addEventListener("click",(()=>{a.scrollBy({left:100,behavior:"smooth"})})),[d,c].forEach((t=>{t.addEventListener("mouseover",(()=>{t.style.color="#fff",t.style.background="#272727"})),t.addEventListener("mouseout",(()=>{t.style.color="#666",t.style.background="#1A1A1A"}))})),a.appendChild(o),s.appendChild(d),s.appendChild(a),s.appendChild(c),i.appendChild(s);const u=document.createElement("div");u.style.height="24px",u.style.width="1px",u.style.backgroundColor="#333",u.style.margin="0 5px",i.appendChild(u);const m=this.createCompactFillControls();i.appendChild(m);const p=this.createCompactStrokeControls();i.appendChild(p),e.appendChild(i),t.appendChild(e),void 0===this.lastPresetScrollPosition&&(this.lastPresetScrollPosition=0);const f=()=>{const t=a.scrollLeft>0,e=a.scrollLeft<a.scrollWidth-a.clientWidth-5;d.style.opacity=t?"1":"0.4",d.style.cursor=t?"pointer":"default",c.style.opacity=e?"1":"0.4",c.style.cursor=e?"pointer":"default"};a.style.scrollBehavior="auto",a.scrollLeft=this.lastPresetScrollPosition||0,f(),a.style.scrollBehavior="smooth",a.addEventListener("scroll",(()=>{this.lastPresetScrollPosition=a.scrollLeft,f()})),a.addEventListener("scroll",f)}createStylePreview(t,e,n){const i=document.createElement("div");return i.title=t,i.style.width="20px",i.style.height="20px",i.style.borderRadius="50%",i.style.cursor="pointer",i.style.position="relative",i.style.transition="transform 0.2s ease",i.style.flexShrink="0",i.addEventListener("mouseover",(()=>{i.style.transform="scale(1.1)"})),i.addEventListener("mouseout",(()=>{i.style.transform="scale(1)"})),e&&("solid"===e.fillType?(i.style.backgroundColor=e.fillColor||"#FFFFFF","solid"===e.strokeType?i.style.border=`${e.strokeWidth||1}px solid ${e.strokeColor||"#000000"}`:"none"===e.strokeType&&(i.style.border="none")):"linearGradient"===e.fillType?(i.style.background=`linear-gradient(${e.fillGradientAngle||90}deg, ${e.fillGradientColor1||"#3498DB"}, ${e.fillGradientColor2||"#9B59B6"})`,"solid"===e.strokeType&&(i.style.border=`${e.strokeWidth||1}px solid ${e.strokeColor||"#000000"}`)):"radialGradient"===e.fillType?(i.style.background=`radial-gradient(circle, ${e.fillGradientColor1||"#3498DB"}, ${e.fillGradientColor2||"#9B59B6"})`,"solid"===e.strokeType&&(i.style.border=`${e.strokeWidth||1}px solid ${e.strokeColor||"#000000"}`)):"none"===e.fillType&&(i.style.backgroundColor="transparent","solid"===e.strokeType?i.style.border=`${e.strokeWidth||1}px solid ${e.strokeColor||"#FFFFFF"}`:i.style.border="1px dashed #666")),i.addEventListener("click",n),i}createCompactFillControls(){const t=document.createElement("div");t.style.display="flex",t.style.alignItems="center",t.style.gap="5px";const e=document.createElement("select");e.title="Fill Type",e.style.backgroundColor="#111",e.style.color="#e0e0e0",e.style.border="1px solid #333",e.style.borderRadius="4px",e.style.fontSize="10px",e.style.padding="2px 4px",e.style.width="60px",e.style.height="22px",[{value:"none",label:"No Fill"},{value:"solid",label:"Solid"},{value:"linearGradient",label:"Linear"},{value:"radialGradient",label:"Radial"}].forEach((t=>{const n=document.createElement("option");n.value=t.value,n.textContent=t.label,t.value===this.styleParams.fillType&&(n.selected=!0),e.appendChild(n)})),e.addEventListener("change",(()=>{this.styleParams.fillType=e.value,this.updateVisibility(e.value,n,i),this.updateShapeStyle(this.editor?.currentShape),this.editor?.controller?.history&&this.editor.controller.history.saveState()}));const n=document.createElement("input");n.type="color",n.value=this.styleParams.fillColor,n.title="Fill Color",n.style.width="22px",n.style.height="22px",n.style.border="1px solid #333",n.style.borderRadius="4px",n.style.padding="0",n.style.backgroundColor="transparent",n.style.display="solid"===this.styleParams.fillType?"block":"none",n.addEventListener("input",(()=>{this.styleParams.fillColor=n.value,this.updateShapeStyle(this.editor?.currentShape)})),n.addEventListener("change",(()=>{this.editor?.controller?.history&&this.editor.controller.history.saveState()}));const i=document.createElement("div");i.style.display=this.styleParams.fillType.includes("Gradient")?"flex":"none",i.style.alignItems="center",i.style.gap="5px";const s=document.createElement("input");s.type="color",s.value=this.styleParams.fillGradientColor1,s.title="Gradient Start",s.style.width="22px",s.style.height="22px",s.style.border="1px solid #333",s.style.borderRadius="4px",s.style.padding="0",s.addEventListener("input",(()=>{this.styleParams.fillGradientColor1=s.value,this.updateShapeStyle(this.editor?.currentShape)}));const a=document.createElement("input");return a.type="color",a.value=this.styleParams.fillGradientColor2,a.title="Gradient End",a.style.width="22px",a.style.height="22px",a.style.border="1px solid #333",a.style.borderRadius="4px",a.style.padding="0",a.addEventListener("input",(()=>{this.styleParams.fillGradientColor2=a.value,this.updateShapeStyle(this.editor?.currentShape)})),this.updateVisibility=(t,e,n)=>{e.style.display="solid"===t?"block":"none",n.style.display=t.includes("Gradient")?"flex":"none"},i.appendChild(s),i.appendChild(a),t.appendChild(e),t.appendChild(n),t.appendChild(i),t}createCompactStrokeControls(){const t=document.createElement("div");t.style.display="flex",t.style.alignItems="center",t.style.gap="5px";const e=document.createElement("select");e.title="Stroke Type",e.style.backgroundColor="#111",e.style.color="#e0e0e0",e.style.border="1px solid #333",e.style.borderRadius="4px",e.style.fontSize="10px",e.style.padding="2px 4px",e.style.width="60px",e.style.height="22px",[{value:"none",label:"No Stroke"},{value:"solid",label:"Solid"}].forEach((t=>{const n=document.createElement("option");n.value=t.value,n.textContent=t.label,t.value===this.styleParams.strokeType&&(n.selected=!0),e.appendChild(n)}));const n=document.createElement("input");n.type="color",n.value=this.styleParams.strokeColor,n.title="Stroke Color",n.style.width="22px",n.style.height="22px",n.style.border="1px solid #333",n.style.borderRadius="4px",n.style.padding="0",n.style.display="solid"===this.styleParams.strokeType?"block":"none";const i=document.createElement("input");return i.type="range",i.min="0.5",i.max="5",i.step="0.5",i.value=this.styleParams.strokeWidth,i.title=`Stroke Width: ${this.styleParams.strokeWidth}`,i.style.width="60px",i.className="param-slider",i.style.display="solid"===this.styleParams.strokeType?"block":"none",e.addEventListener("change",(()=>{this.styleParams.strokeType=e.value,n.style.display="solid"===e.value?"block":"none",i.style.display="solid"===e.value?"block":"none",this.updateShapeStyle(this.editor?.currentShape),this.editor?.controller?.history&&this.editor.controller.history.saveState()})),n.addEventListener("input",(()=>{this.styleParams.strokeColor=n.value,this.updateShapeStyle(this.editor?.currentShape)})),i.addEventListener("input",(()=>{this.styleParams.strokeWidth=parseFloat(i.value),i.title=`Stroke Width: ${this.styleParams.strokeWidth}`,this.updateShapeStyle(this.editor?.currentShape)})),i.addEventListener("change",(()=>{this.editor?.controller?.history&&this.editor.controller.history.saveState()})),t.appendChild(e),t.appendChild(n),t.appendChild(i),t}updateStyleControls(t){if(!t&&!(t=document.querySelector(".style-row")))return;const e=t.parentNode;t.remove(),this.createStyleControls(e)}updateShapeStyle(t){t&&this.saveStyleSettings(t);const e=document.getElementById("preview-svg");if(!e)return;const n=e.querySelector("#shape");n&&this.applyStylesToSVG(n)}applyStylesToSVG(t){let e=t.ownerSVGElement.querySelector("defs");e||(e=document.createElementNS("http://www.w3.org/2000/svg","defs"),t.ownerSVGElement.insertBefore(e,t.ownerSVGElement.firstChild)),Array.from(e.querySelectorAll("linearGradient, radialGradient")).forEach((t=>t.remove()));const n=this.createFillValue(e,"fill"),i=this.createFillValue(e,"stroke"),s=t=>{t.nodeType===Node.ELEMENT_NODE&&("path"!==t.tagName&&"rect"!==t.tagName&&"circle"!==t.tagName&&"ellipse"!==t.tagName&&"polygon"!==t.tagName&&"polyline"!==t.tagName||("none"===this.styleParams.fillType?t.setAttribute("fill","none"):(t.setAttribute("fill",n),t.setAttribute("fill-opacity",this.styleParams.fillOpacity)),"none"===this.styleParams.strokeType?t.setAttribute("stroke","none"):(t.setAttribute("stroke",i),t.setAttribute("stroke-width",this.styleParams.strokeWidth))),Array.from(t.children).forEach((t=>{s(t)})))};s(t)}resetStyle(){this.styleParams={...this.originalStyleParams},this.updateShapeStyle(this.editor?.currentShape);const t=document.querySelector(".style-row");if(t&&t.parentNode){const e=t.parentNode,n=document.querySelector(".preset-row");n&&n.remove(),t.remove(),this.createStyleControls(e)}this.editor?.controller?.history&&this.editor.controller.history.saveState()}createCompactColorInput(t,e,n){const i=document.createElement("div");i.style.display="flex",i.style.alignItems="center";const s=document.createElement("span");s.className="param-name",s.textContent=t,s.style.fontSize="10px",s.style.marginRight="8px";const a=document.createElement("input");return a.type="color",a.value=e,a.style.width="24px",a.style.height="24px",a.style.border="1px solid #333",a.style.borderRadius="4px",a.style.padding="0",a.addEventListener("input",(()=>{n(a.value)})),i.appendChild(s),i.appendChild(a),i}createFillValue(t,e){const n="stroke"===e?"stroke":"fill",i={type:this.styleParams[`${n}Type`],color:this.styleParams[`${n}Color`],gradientColor1:this.styleParams[`${n}GradientColor1`],gradientColor2:this.styleParams[`${n}GradientColor2`],gradientAngle:this.styleParams[`${n}GradientAngle`]};if("solid"===i.type)return i.color;if("none"===i.type)return"none";if("linearGradient"===i.type){const e=`${n}LinearGradient-${Date.now()}-${Math.floor(1e3*Math.random())}`,s=document.createElementNS("http://www.w3.org/2000/svg","linearGradient");s.setAttribute("id",e);const a=i.gradientAngle*Math.PI/180,r=.5-.5*Math.cos(a),o=.5-.5*Math.sin(a),h=.5+.5*Math.cos(a),l=.5+.5*Math.sin(a);s.setAttribute("x1",r),s.setAttribute("y1",o),s.setAttribute("x2",h),s.setAttribute("y2",l);const d=document.createElementNS("http://www.w3.org/2000/svg","stop");d.setAttribute("offset","0%"),d.setAttribute("stop-color",i.gradientColor1);const c=document.createElementNS("http://www.w3.org/2000/svg","stop");return c.setAttribute("offset","100%"),c.setAttribute("stop-color",i.gradientColor2),s.appendChild(d),s.appendChild(c),t.appendChild(s),`url(#${e})`}if("radialGradient"===i.type){const e=`${n}RadialGradient-${Date.now()}-${Math.floor(1e3*Math.random())}`,s=document.createElementNS("http://www.w3.org/2000/svg","radialGradient");s.setAttribute("id",e),s.setAttribute("cx","0.5"),s.setAttribute("cy","0.5"),s.setAttribute("r","0.5");const a=document.createElementNS("http://www.w3.org/2000/svg","stop");a.setAttribute("offset","0%"),a.setAttribute("stop-color",i.gradientColor1);const r=document.createElementNS("http://www.w3.org/2000/svg","stop");return r.setAttribute("offset","100%"),r.setAttribute("stop-color",i.gradientColor2),s.appendChild(a),s.appendChild(r),t.appendChild(s),`url(#${e})`}return i.color}},w=class{constructor(t){this.controller=t,this.editorOpen=!1,this.currentShape=null,this.parameters={},this.isAnimating=!1,this.animationState=null,this.animationFrameId=null,this.lastAnimationTime=0,this.transitionPause=!1,this.originalParameters={};const e=document.createElement("style");e.textContent='\n      /* Slider track */\n      .param-slider {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 100%;\n        height: 20px;              /* Overall clickable area height */\n        background: transparent;   /* Hide the default track */\n        position: relative;\n        cursor: pointer;\n        min-width: 120px;\n      }\n\n      /* Create a 1px track using a pseudo-element */\n      .param-slider::before {\n        content: "";\n        position: absolute;\n        top: 50%;\n        left: 0;\n        right: 0;\n        height: 1px;\n        background: #333;\n        transform: translateY(-50%);\n      }\n\n      .param-slider::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 12px;\n        height: 12px;\n        background: #e0e0e0;\n        border-radius: 50%;\n        position: relative;\n        z-index: 1;\n      }\n\n      .param-slider::-moz-range-thumb {\n        width: 12px;\n        height: 12px;\n        background: #e0e0e0;\n        border: none;\n        border-radius: 50%;\n        cursor: pointer;\n      }\n\n      /* Bottom buttons hover states */\n      .control-button:hover {\n        background-color: #282828 !important;\n      }\n\n      /* Parameter controls */\n      .params-area {\n        display: flex;\n        flex-wrap: wrap;\n        margin: 0 auto;\n        max-width: 795px;\n        gap: 12px;\n      }\n      \n      .control-row {\n        flex: 1;\n        min-width: 245px;\n      }\n      \n      .param-name {\n      letter-spacing: 1px;\n        color: #555;\n        font-size: 10px;\n        margin-bottom: 6px;\n        display: block;\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n      }\n\n      .back-btn {\n        background-color: #000;\n        color: #666;\n        border: none;\n        border-radius: 50%;\n        width: 30px;\n        height: 30px;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        transition: color 0.2s;\n    }\n      .back-btn:hover {\n        background-color: #000;\n        color: #fff;\n    }\n        \n    \n    ',document.head.appendChild(e),this.showEditor=this.showEditor.bind(this),this.hideEditor=this.hideEditor.bind(this),this.updateShape=this.updateShape.bind(this),this.createControls=this.createControls.bind(this),this.handleKeyDown=this.handleKeyDown.bind(this),this.toggleAnimation=this.toggleAnimation.bind(this),this.updateAnimation=this.updateAnimation.bind(this),this.interpolateParameters=this.interpolateParameters.bind(this),this.styleController=new M(this)}setupAnimationControls(){this.animationState={isAnimating:!1,shouldAnimate:!1,transitionTime:1,progress:0,animationType:"randomAnimation",hovering:!1,returningToDefault:!1,stopAfterDefault:!1,initialParams:{...this.parameters},currentParams:{...this.parameters},targetParams:{...this.parameters},defaultParams:{...this.parameters},transitionCount:0,animationStartTime:0,lastTargetChange:0},this.animationFrameId=null,this.lastAnimationTime=performance.now(),this.animationState.animationStartTime=performance.now()}isNonInterpolatedParam(t){return t.toLowerCase().includes("radius")||t.toLowerCase().includes("size")||t.toLowerCase().includes("thickness")||t.toLowerCase().includes("rows")||t.toLowerCase().includes("columns")||"randomlayout"===t.toLowerCase()||t.toLowerCase().includes("count")||t.toLowerCase().includes("segments")||t.toLowerCase().includes("sides")}generateRandomTargetState(){if(!this.currentShape)return;const t=this.currentShape,e=this.controller.shapes[t];if(!e)return;const n=e.parameters||{},i={...this.controller.Shape.parameters,...n};Object.keys(this.parameters).forEach((t=>{this.animationState.initialParams[t]=this.parameters[t]})),Object.entries(i).forEach((([t,e])=>{if(e.options)this.animationState.targetParams[t]=this.parameters[t];else if("number"==typeof this.parameters[t]&&void 0!==e.min&&void 0!==e.max)if(this.isNonInterpolatedParam(t))this.animationState.targetParams[t]=this.parameters[t];else{const n=e.min,i=e.max,s=this.parameters[t];if(Math.random()<.3)if("min"==(Math.random()<.5?"min":"max")){const e=n+(i-n)*(.3*Math.random());this.animationState.targetParams[t]=e}else{const e=i-(i-n)*(.3*Math.random());this.animationState.targetParams[t]=e}else{const e=Math.random()>.5?1:-1,a=.3+.5*Math.random();let r;r=e>0?s+(i-s)*a:s-(s-n)*a,r=Math.max(n,Math.min(i,r)),this.animationState.targetParams[t]=r}}else this.animationState.targetParams[t]=this.parameters[t]})),this.animationState.progress=0,this.animationState.transitionTime=.5+Math.random(),this.animationState.animationType="randomAnimation"}startAnimation(){if(this.isAnimating)return;this.isAnimating=!0;const t=document.getElementById("animateBtn");if(t){t.classList.add("playing");const e=t.querySelector("span:first-child");e&&(e.innerHTML=this.getPauseIcon());const n=t.querySelector("span:last-child");n&&(n.textContent="Pause")}this.animationState||this.setupAnimationControls(),this.animationState.isAnimating=!0,this.animationState.shouldAnimate=!0,Object.keys(this.parameters).forEach((t=>{this.animationState.defaultParams[t]=this.parameters[t]})),this.generateRandomTargetState(),this.lastAnimationTime=performance.now(),this.updateAnimation()}updateAnimation(){if(!this.isAnimating)return;const t=performance.now(),e=(t-this.lastAnimationTime)/1e3;if(this.lastAnimationTime=t,this.animationState.progress+=e/this.animationState.transitionTime,this.animationState.progress>=1)Object.keys(this.animationState.targetParams).forEach((t=>{this.parameters[t]=this.animationState.targetParams[t]})),this.transitionPause||(this.transitionPause=!0,this.updateShape(),setTimeout((()=>{this.animationState.progress=0,this.generateRandomTargetState(),this.transitionPause=!1}),150));else if(!this.transitionPause){this.interpolateParameters(),this.updateShape();const t=this.animationState.progress<.2||this.animationState.progress>.8?.15:.05;Math.random()<t&&this.updateParameterControls()}this.animationFrameId=requestAnimationFrame(this.updateAnimation.bind(this))}lerp(t,e,n){return t+(e-t)*n}smoothStep(t,e="default"){switch(t=Math.min(Math.max(t,0),1),e){case"hoverIn":return 1-Math.pow(1-t,3);case"hoverOut":return easingFunctions.easeInOutQuad(t);default:return t<.5?2*t*t:(4-2*t)*t-1}}interpolateParameters(){const t=this.animationState.progress,e=this.animationState.initialParams,n=this.animationState.targetParams,i=this.smoothStep(t,this.animationState.animationType);Object.keys(e).forEach((t=>{void 0!==n[t]&&("number"==typeof e[t]&&"number"==typeof n[t]?this.isNonInterpolatedParam(t)?t.toLowerCase().includes("rows")||t.toLowerCase().includes("columns")||t.toLowerCase().includes("count")?this.parameters[t]=Math.round(e[t]):this.parameters[t]=e[t]:t.toLowerCase().includes("rows")||t.toLowerCase().includes("columns")||t.toLowerCase().includes("count")||t.toLowerCase().includes("sides")||t.toLowerCase().includes("segments")?this.parameters[t]=Math.round(this.lerp(e[t],n[t],i)):this.parameters[t]=this.lerp(e[t],n[t],i):this.parameters[t]=e[t])}))}stopAnimation(){if(!this.isAnimating)return;this.isAnimating=!1,this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.animationState&&(this.animationState.isAnimating=!1,this.animationState.shouldAnimate=!1);const t=document.getElementById("animateBtn");if(t){t.classList.remove("playing");const e=t.querySelector("span:first-child");e&&(e.innerHTML=this.getPlayIcon());const n=t.querySelector("span:last-child");n&&(n.textContent="Play"),t.style.transition="all 0.2s ease",setTimeout((()=>{t.style.transition=""}),100)}this.transitionPause=!1,this.updateParameterControls()}toggleAnimation(){const t=document.getElementById("animateBtn");this.isAnimating?(t&&(t.style.transform="scale(0.95)",setTimeout((()=>{t.style.transform="scale(1)"}),100)),this.stopAnimation()):(t&&(t.style.transform="scale(1.05)",setTimeout((()=>{t.style.transform="scale(1)"}),100)),this.animationState||this.setupAnimationControls(),this.startAnimation())}getPlayIcon(){return'<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="currentColor">\n      <path d="M8 5v14l11-7z"/>\n    </svg>'}getPauseIcon(){return'<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="currentColor">\n      <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>\n    </svg>'}cleanupAnimation(){this.isAnimating&&this.stopAnimation(),this.isAnimating=!1,this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.animationState=null,this.styleController&&this.styleController.saveStyleSettings()}prepareForEditorOpen(t){document.querySelectorAll(".preset-row, .style-row").forEach((t=>t.remove())),this.styleController&&(this.styleController.resetToDefaultStyle(),t&&this.styleController.loadStyleSettings(t))}showEditor(t,e=null){if(console.log(t),!t)return;this.prepareForEditorOpen(t),this.editorOpen=!0,this.currentShape=t,this.controller.saveGridState();const n=document.getElementById("grid");if(!n)return;const i=document.getElementById("main-header");i&&(i.style.display="none");const s=document.getElementById("category-filters-container");s&&(this.filterContainerParent=s.parentNode,this.savedFilterContainer=s,s.parentNode.removeChild(s)),n.innerHTML="",n.className="editor";try{const i=document.createElement("div");i.className="editor-layout",i.style.backgroundColor="#000",i.style.color="#e0e0e0",i.style.height="100vh",i.style.display="flex",i.style.flexDirection="column";const s=document.createElement("div");s.className="nav-bar",s.style.gridArea="nav",s.style.display="flex",s.style.alignItems="center";const a=document.createElement("button");a.className="back-btn",a.title="Back to shapes",a.style.backgroundColor="transparent",a.addEventListener("click",this.hideEditor),a.style.alignItems="center",a.style.justifyContent="center",a.style.width="30px",a.style.height="30px",a.style.fontSize="14px",a.innerHTML='\n<svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M9 10L20 21" stroke="#666666" stroke-width="1.5" stroke-linecap="round"/>\n<path d="M20 10L9 21" stroke="#666666" stroke-width="1.5" stroke-linecap="round"/>\n</svg>\n    ',s.appendChild(a);const r=document.createElement("button");r.className="bookmark-btn",r.title="Saved Shapes",r.innerHTML='\n      <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M10 10V22.7586C10 22.8477 10.1077 22.8923 10.1707 22.8293L14.9293 18.0707C14.9683 18.0317 15.0317 18.0317 15.0707 18.0707L19.8293 22.8293C19.8923 22.8923 20 22.8477 20 22.7586V10C20 9.44772 19.5523 9 19 9H11C10.4477 9 10 9.44772 10 10Z" stroke="#666666" stroke-width="1.5"/>\n</svg>\n    ',r.style.backgroundColor="transparent",r.style.color="#666",r.style.border="none",r.style.fontSize="14px",r.style.cursor="pointer",r.style.marginLeft="auto",r.style.position="relative",r.style.display="flex",r.style.alignItems="center",r.style.justifyContent="center",r.style.width="30px",r.style.height="30px",s.appendChild(r),this.controller.favorites&&setTimeout((()=>this.controller.favorites.setupBookmarkButtons()),100);const o=document.createElement("div");o.className="preview-area",o.style.display="flex",o.style.justifyContent="center",o.style.alignItems="center",o.style.flex="1",o.style.paddingBottom="32px",o.style.backgroundColor="#000",o.style.overflow="hidden",o.style.position="relative";const h=document.createElement("div");h.className="params-area";const l=document.createElement("div");l.id="parameters",l.style.display="flex",l.style.flexWrap="wrap",l.style.gap="16px",l.style.width="100%",h.appendChild(l);const d=document.createElement("div");d.className="controls-area",d.style.padding="16px",d.style.paddingBottom="64px",d.style.display="flex",d.style.justifyContent="center",d.style.gap="12px",d.style.backgroundColor="#000",this.createControlButtons(d);const c=this.controller.shapes[t];if(!c)throw new Error(`Shape class not found: ${t}`);const u=c.parameters||{},m={...this.controller.Shape.parameters,...u},p=new c;this.parameters={},Object.keys(m).forEach((t=>{this.parameters[t]=p[t]})),e&&Object.keys(e).length>0&&(console.log("Using provided hover parameters in editor"),Object.keys(e).forEach((t=>{this.parameters.hasOwnProperty(t)&&(this.parameters[t]=e[t])}))),this.originalParameters={...this.parameters};const f=document.createElementNS("http://www.w3.org/2000/svg","svg");f.id="preview-svg",f.setAttribute("width","100%"),f.setAttribute("height","100%"),f.setAttribute("viewBox","-110 -110 220 220"),f.setAttribute("preserveAspectRatio","xMidYMid meet");const x=document.createElementNS("http://www.w3.org/2000/svg","g");x.id="shape",x.setAttribute("transform","translate(0,0)"),f.appendChild(x),this.updateShape(),this.createControls(m,l),this.styleController.createStyleControls(l),o.appendChild(f),i.appendChild(s),i.appendChild(o),i.appendChild(h),i.appendChild(d),n.appendChild(i),document.addEventListener("keydown",this.handleKeyDown),this.controller.history&&(this.controller.history.initShapeHistory(t),Object.keys(this.parameters).length>0&&this.controller.history.saveState()),this.setupAnimationControls()}catch(e){console.error(`Error showing shape editor for ${t}:`,e),this.showErrorView(n,t)}}createControlButtons(t){const e={reset:'<svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M1.5 1.5L8.5 8.5M1.5 8.5L8.5 1.5" stroke="#D9D9D9" stroke-width="1.5" stroke-linecap="round"/>\n</svg>\n',undo:'<svg width="10" height="10" viewBox="-2.2 0 10 9" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M3.23077 6.5C2.95463 6.5 2.73077 6.72386 2.73077 7C2.73077 7.27614 2.95463 7.5 3.23077 7.5V6.5ZM2 2.5H4.5V1.5H2V2.5ZM4.5 6.5H3.23077V7.5H4.5V6.5ZM6.5 4.5C6.5 5.60457 5.60457 6.5 4.5 6.5V7.5C6.15685 7.5 7.5 6.15685 7.5 4.5H6.5ZM4.5 2.5C5.60457 2.5 6.5 3.39543 6.5 4.5H7.5C7.5 2.84315 6.15685 1.5 4.5 1.5V2.5Z" fill="#D9D9D9"/>\n<path d="M2.01346 3.58247C2.21007 3.73856 2.5 3.59855 2.5 3.34751V0.620284C2.5 0.369249 2.21007 0.229238 2.01346 0.385331L0.295933 1.74895C0.144652 1.86905 0.144652 2.09874 0.295933 2.21885L2.01346 3.58247Z" fill="#D9D9D9"/>\n</svg>\n',redo:'<svg width="10" height="10" viewBox="-2.2 0 10 9" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M4.76923 6.5C5.04537 6.5 5.26923 6.72386 5.26923 7C5.26923 7.27614 5.04537 7.5 4.76923 7.5V6.5ZM6 2.5H3.5V1.5H6V2.5ZM3.5 6.5H4.76923V7.5H3.5V6.5ZM1.5 4.5C1.5 5.60457 2.39543 6.5 3.5 6.5V7.5C1.84315 7.5 0.5 6.15685 0.5 4.5H1.5ZM3.5 2.5C2.39543 2.5 1.5 3.39543 1.5 4.5H0.5C0.5 2.84315 1.84315 1.5 3.5 1.5V2.5Z" fill="#D9D9D9"/>\n<path d="M5.98654 3.58247C5.78993 3.73856 5.5 3.59855 5.5 3.34751V0.620284C5.5 0.369249 5.78993 0.229238 5.98654 0.385331L7.70407 1.74895C7.85535 1.86905 7.85535 2.09874 7.70407 2.21885L5.98654 3.58247Z" fill="#D9D9D9"/>\n</svg>\n',randomize:'<svg width="11" height="9" viewBox="0 0 11 9" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M8.48654 8.58247C8.28993 8.73856 8 8.59855 8 8.34751V5.62028C8 5.36925 8.28993 5.22924 8.48654 5.38533L10.2041 6.74895C10.3553 6.86905 10.3553 7.09874 10.2041 7.21885L8.48654 8.58247Z" fill="#D9D9D9"/>\n<path d="M1 1.98438H1.44836C2.26415 1.98438 3.02862 2.3824 3.49644 3.05072L5.50356 5.91803C5.97138 6.58635 6.73585 6.98438 7.55164 6.98438H8" stroke="#D9D9D9" stroke-linecap="round"/>\n<path d="M8.48654 0.386283C8.28993 0.23019 8 0.370201 8 0.621236V3.34847C8 3.5995 8.28993 3.73951 8.48654 3.58342L10.2041 2.2198C10.3553 2.0997 10.3553 1.87001 10.2041 1.7499L8.48654 0.386283Z" fill="#D9D9D9"/>\n<path d="M1 6.98438H1.44836C2.26415 6.98438 3.02862 6.58635 3.49644 5.91803L5.50356 3.05072C5.97138 2.3824 6.73585 1.98438 7.55164 1.98438H8" stroke="#D9D9D9" stroke-linecap="round"/>\n</svg>\n',copy:'<svg width="10" height="9" viewBox="0 0 10 9" fill="none" xmlns="http://www.w3.org/2000/svg">\n<rect x="1" y="3" width="5" height="5" rx="1" stroke="#D9D9D9"/>\n<path d="M6 6H8C8.55228 6 9 5.55228 9 5V2C9 1.44772 8.55228 1 8 1H5C4.44772 1 4 1.44772 4 2V3" stroke="#D9D9D9"/>\n</svg>\n',save:'<svg width="8" height="9" viewBox="0 0 8 9" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M1 2V7.27068C1 7.358 1.10406 7.40337 1.16804 7.34396L3.43195 5.24176C3.47032 5.20613 3.52968 5.20613 3.56804 5.24176L5.83195 7.34396C5.89594 7.40337 6 7.358 6 7.27068V2C6 1.44772 5.55228 1 5 1H2C1.44772 1 1 1.44772 1 2Z" stroke="#D9D9D9"/>\n</svg>\n',export:'<svg width="8" height="9" viewBox="0 0 8 9" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M5.5 2.6L4.24 1.10667C4.12 0.964444 3.88 0.964444 3.76 1.10667L2.5 2.6" stroke="#D9D9D9" stroke-linecap="round"/>\n<path d="M2.71429 5H2C1.44772 5 1 5.44772 1 6V7C1 7.55228 1.44772 8 2 8H6C6.55228 8 7 7.55228 7 7V6C7 5.44772 6.55228 5 6 5H5.28571" stroke="#D9D9D9"/>\n<path d="M4 5L4 2" stroke="#D9D9D9" stroke-linecap="round"/>\n</svg>\n'};[{id:"undoBtn",icon:e.undo,text:"Undo",handler:()=>this.controller.history.undo()},{id:"redoBtn",icon:e.redo,text:"Redo",handler:()=>this.controller.history.redo()},{id:"randomizeBtn",icon:e.randomize,text:"Random",handler:()=>this.randomizeShape()},{id:"animateBtn",icon:this.getPlayIcon(),text:"Play",handler:()=>this.toggleAnimation()},{id:"copyBtn",icon:e.copy,text:"Copy",handler:()=>this.copySvgToClipboard()},{id:"saveBtn",icon:e.save,text:"Save",handler:()=>this.saveToFavorites()},{id:"exportBtn",icon:e.export,text:"Export",handler:()=>this.showExportModal()}].forEach((e=>{const n=document.createElement("button");n.id=e.id,n.className="control-button";const i=document.createElement("span");i.innerHTML=e.icon,i.style.display="flex",i.style.alignItems="center",i.style.justifyContent="center",i.style.width="14px",i.style.height="14px",i.querySelectorAll("svg").forEach((t=>{t.style.width="14px",t.style.height="14px"})),n.innerHTML="",n.appendChild(i);const s=document.createElement("span");s.textContent=e.text,n.appendChild(s),n.style.backgroundColor="#1A1A1A",n.style.color="#D9D9D9",n.style.border="none",n.style.fontFamily="'Menlo', 'Monaco', 'Courier New', monospace",n.style.borderRadius="30px",n.style.padding="8px 16px",n.style.cursor="pointer",n.style.display="flex",n.style.alignItems="center",n.style.justifyContent="center",n.style.gap="6px",n.style.fontSize="12px",n.style.minWidth="100px",n.addEventListener("click",e.handler),t.appendChild(n)})),this.controller.history&&this.controller.history.updateButtonsState()}showExportModal(){const t=document.getElementById("export-modal");t&&t.remove();const e=document.createElement("div");e.id="export-modal",e.className="modal";const n=document.createElement("div");n.className="modal-content",n.style.backgroundColor="#000",n.style.borderRadius="8px",n.style.padding="24px",n.style.width="320px",n.style.maxWidth="90%",n.style.color="#e0e0e0",n.style.fontFamily="'Menlo', 'Monaco', 'Courier New', monospace";const i=document.createElement("div");i.className="modal-header",i.style.display="flex",i.style.justifyContent="space-between",i.style.alignItems="center",i.style.marginBottom="16px";const s=document.createElement("h3");s.textContent="Export Shape",s.style.margin="0",s.style.fontSize="16px",s.style.fontWeight="normal",s.style.color="#e0e0e0";const a=document.createElement("button");a.className="close-button",a.innerHTML='\n      <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M1 1L13 13M1 13L13 1" stroke="#e0e0e0" stroke-width="1.5" stroke-linecap="round"/>\n      </svg>\n    ',a.style.backgroundColor="transparent",a.style.border="none",a.style.cursor="pointer",a.style.padding="4px",a.style.display="flex",a.style.alignItems="center",a.style.justifyContent="center",a.onclick=()=>e.remove(),i.appendChild(s),i.appendChild(a);const r=document.createElement("form");r.onsubmit=t=>{t.preventDefault(),this.exportWithOptions()};const o=this.createFormGroup("Format"),h=this.createSelect("format",[{value:"png",label:"PNG"},{value:"svg",label:"SVG"}]);h.value="png",o.appendChild(h);const l=this.createFormGroup("Aspect Ratio"),d=this.createSelect("aspect-ratio",[{value:"1:1",label:"1:1 (Square)"},{value:"4:3",label:"4:3"},{value:"16:9",label:"16:9"},{value:"3:2",label:"3:2"},{value:"2:1",label:"2:1"},{value:"9:16",label:"9:16 (Mobile Portrait)"},{value:"18:9",label:"18:9 (Mobile Landscape)"}]);l.appendChild(d);const c=this.createFormGroup("Resolution"),u=this.createSelect("resolution",[{value:"800",label:"800×800 (Small)"},{value:"1200",label:"1200×1200 (Medium)"},{value:"2400",label:"2400×2400 (Large)"},{value:"3600",label:"3600×3600 (Very Large)"}]);u.value="1200",c.appendChild(u);const m=this.createFormGroup("Background"),p=this.createSelect("background",[{value:"transparent",label:"Transparent (PNG only)"},{value:"black",label:"Black (Default)"}]);h.addEventListener("change",(t=>{"svg"===t.target.value?("transparent"===p.value&&(p.value="black"),Array.from(p.options).forEach((t=>{"transparent"===t.value&&(t.disabled=!0)}))):Array.from(p.options).forEach((t=>{"transparent"===t.value&&(t.disabled=!1)}))})),m.appendChild(p),d.addEventListener("change",(()=>{this.updateResolutionLabels(d.value,u)}));const f=document.createElement("div");f.style.marginTop="24px",f.style.display="flex",f.style.justifyContent="center";const x=document.createElement("button");x.type="submit",x.textContent="Export",x.style.backgroundColor="#333",x.style.color="#e0e0e0",x.style.border="none",x.style.borderRadius="30px",x.style.padding="8px 16px",x.style.cursor="pointer",x.style.fontFamily="'Menlo', 'Monaco', 'Courier New', monospace",x.style.fontSize="12px",x.style.width="100%",x.style.transition="background-color 0.2s",x.addEventListener("mouseover",(()=>{x.style.backgroundColor="#444"})),x.addEventListener("mouseout",(()=>{x.style.backgroundColor="#333"})),f.appendChild(x),r.appendChild(o),r.appendChild(l),r.appendChild(c),r.appendChild(m),r.appendChild(f),n.appendChild(i),n.appendChild(r),e.appendChild(n),document.body.appendChild(e),this.updateResolutionLabels(d.value,u);const g=t=>{"Escape"===t.key&&(e.remove(),document.removeEventListener("keydown",g),t.stopPropagation())};document.addEventListener("keydown",g)}createFormGroup(t){const e=document.createElement("div");e.className="form-group",e.style.marginBottom="16px";const n=document.createElement("label");return n.textContent=t,n.style.display="block",n.style.marginBottom="8px",n.style.fontSize="12px",n.style.color="#999",n.style.textTransform="uppercase",n.style.letterSpacing="0.5px",e.appendChild(n),e}createSelect(t,e){const n=document.createElement("select");return n.id=t,n.style.width="100%",n.style.backgroundColor="#000",n.style.color="#e0e0e0",n.style.border="1px solid #333",n.style.borderRadius="4px",n.style.padding="8px",n.style.fontFamily="'Menlo', 'Monaco', 'Courier New', monospace",n.style.fontSize="12px",n.style.appearance="none",n.style.backgroundImage="url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23999' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e\")",n.style.backgroundRepeat="no-repeat",n.style.backgroundPosition="right 8px center",n.style.backgroundSize="16px",e.forEach((t=>{const e=document.createElement("option");e.value=t.value,e.textContent=t.label,n.appendChild(e)})),n}updateResolutionLabels(t,e){const[n,i]=t.split(":").map(Number),s=["Small","Medium","Large","Very Large"];for(;e.firstChild;)e.removeChild(e.firstChild);[800,1200,2400,3600].forEach(((t,a)=>{const r=this.calculateDimensions(t,n,i),o=document.createElement("option");o.value=t,o.textContent=`${r.width}×${r.height} (${s[a]})`,e.appendChild(o)}))}calculateDimensions(t,e,n){return e===n?{width:t,height:t}:e>n?{width:t,height:Math.round(t*(n/e))}:{width:Math.round(t*(e/n)),height:t}}exportWithOptions(){const t=document.getElementById("format"),e=document.getElementById("aspect-ratio"),n=document.getElementById("resolution"),i=document.getElementById("background");if(!(t&&e&&n&&i))return void console.error("Could not find form elements");const s=t.value,a=e.value,r=parseInt(n.value),o=i.value,[h,l]=a.split(":").map(Number),d=this.calculateDimensions(r,h,l),c=document.getElementById("export-modal");c&&c.remove(),this.exportShapeWithOptions(s,d,o)}exportShapeWithOptions(t,e,n){const i=document.getElementById("preview-svg");if(!i)return;const s=i.cloneNode(!0);if(s.setAttribute("width",e.width),s.setAttribute("height",e.height),this.styleController){const t=s.querySelector("g");t&&this.styleController.applyStylesToSVG(t)}if("transparent"!==n&&"svg"!==t){const t=document.createElementNS("http://www.w3.org/2000/svg","rect");t.setAttribute("width","100%"),t.setAttribute("height","100%"),t.setAttribute("fill",n),s.insertBefore(t,s.firstChild)}const a=(new XMLSerializer).serializeToString(s);if("svg"===t){const t=new Blob([a],{type:"image/svg+xml"});this.downloadFile(t,`shape-${e.width}x${e.height}.svg`)}else if("png"===t){const t=document.createElement("canvas"),i=t.getContext("2d");t.width=e.width,t.height=e.height,"transparent"===n?i.clearRect(0,0,t.width,t.height):(i.fillStyle=n,i.fillRect(0,0,t.width,t.height));const s=new Image,r=new Blob([a],{type:"image/svg+xml"}),o=URL.createObjectURL(r);s.onload=()=>{i.drawImage(s,0,0,t.width,t.height);const a="transparent"===n?{type:"image/png"}:{type:"image/png",quality:1};t.toBlob((t=>{this.downloadFile(t,`shape-${e.width}x${e.height}.png`),URL.revokeObjectURL(o)}),a.type,a.quality)},s.src=o}}createControls(t,e){Object.entries(t).forEach((([t,n])=>{if("seed"===t)return;const i=document.createElement("div");if(i.className="control-row",n.options){const e=document.createElement("select");e.className="param-select",e.style.backgroundColor="#000",e.style.color="#e0e0e0",e.style.border="1px solid #333",e.style.borderRadius="4px",e.style.padding="4px 8px",e.style.fontFamily="'Menlo', 'Monaco', 'Courier New', monospace",e.style.fontSize="10px",e.style.width="100%",e.style.cursor="pointer",e.setAttribute("data-param",t),n.options.forEach((n=>{const i=document.createElement("option");i.value=n,i.textContent=n,n===this.parameters[t]&&(i.selected=!0),e.appendChild(i)})),e.addEventListener("change",(()=>{this.parameters[t]=e.value,this.updateShape(),this.controller.history&&this.controller.history.saveState()})),i.appendChild(e)}else if(void 0!==n.min&&void 0!==n.max){const e=document.createElement("input");e.type="range",e.min=n.min,e.max=n.max,e.step=Number.isInteger(n.default)?"1":"0.1",e.value=this.parameters[t],e.className="param-slider",e.setAttribute("data-param",t),e.style.width="100%";let s=null;e.addEventListener("input",(e=>{const i=e.target.value,a=parseFloat(i),r=isNaN(a)?n.default:Number.isInteger(n.default)?Math.round(a):parseFloat(a.toFixed(2));this.parameters[t]=r,this.updateShape(),clearTimeout(s),s=setTimeout((()=>{this.controller.history&&this.controller.history.saveState()}),300)})),i.appendChild(e)}else if("boolean"==typeof this.parameters[t]){const e=document.createElement("input");e.type="checkbox",e.checked=this.parameters[t],e.style.color="#333",e.style.accentColor="#333",e.style.cursor="pointer",e.addEventListener("change",(()=>{this.parameters[t]=e.checked,this.updateShape(),this.controller.history&&this.controller.history.saveState()})),i.appendChild(e)}else{const e=document.createElement("input");e.type="text",e.className="param-text",e.setAttribute("data-param",t),e.value=this.parameters[t],e.style.backgroundColor="#444",e.style.color="#e0e0e0",e.style.border="1px solid #555",e.style.borderRadius="3px",e.style.padding="4px 8px",e.style.fontFamily="'Menlo', 'Monaco', 'Courier New', monospace",e.style.fontSize="12px",e.style.width="100%",e.addEventListener("change",(()=>{const n=parseFloat(e.value);this.parameters[t]=isNaN(n)?e.value:n,this.updateShape(),this.controller.history&&this.controller.history.saveState()})),i.appendChild(e)}const s=document.createElement("span");s.className="param-name",s.textContent=t.charAt(0).toUpperCase()+t.slice(1),i.insertBefore(s,i.firstChild),e.appendChild(i)}))}updateShape(){if(this.currentShape)try{const t=this.controller.shapes[this.currentShape];if(!t)return;this.controller.parameters&&(this.controller.parameters={...this.parameters});const e=new t(this.parameters),n=document.getElementById("shape");if(n){const t=e.generateShape();t&&(n.innerHTML=t)}this.styleController&&this.styleController.updateShapeStyle()}catch(t){console.error("Error updating shape:",t)}}showErrorView(t,e){const n=document.createElement("div");n.className="editor-layout error",n.style.backgroundColor="#111",n.style.color="#e0e0e0",n.style.height="100vh",n.style.display="flex",n.style.flexDirection="column",n.style.alignItems="center",n.style.justifyContent="center",n.style.padding="20px";const i=document.createElement("div");i.textContent=`Error loading shape editor for: ${e}`,i.style.color="#ff5555",i.style.marginBottom="20px";const s=document.createElement("button");s.textContent="Back to Grid",s.style.padding="8px 16px",s.style.backgroundColor="#333",s.style.color="#fff",s.style.border="none",s.style.borderRadius="4px",s.style.cursor="pointer",s.addEventListener("click",this.hideEditor),n.appendChild(i),n.appendChild(s),t.appendChild(n),document.addEventListener("keydown",this.handleKeyDown)}hideEditor(){this.cleanupAnimation(),this.cleanupEditor(),this.editorOpen=!1,this.currentShape=null,document.removeEventListener("keydown",this.handleKeyDown),this.parameters={},this.controller.returnToGrid()}handleKeyDown(t){const e=document.getElementById("export-modal");"Escape"!==t.key||e?" "!==t.key&&"Space"!==t.code||(t.preventDefault(),this.toggleAnimation()):this.hideEditor()}randomizeShape(){if(!this.currentShape)return;const t=this.currentShape,e=this.controller.shapes[t];if(!e)return;const n=e.parameters||{},i={...this.controller.Shape.parameters,...n};Object.entries(i).forEach((([t,e])=>{if(e.options){const n=Math.floor(Math.random()*e.options.length);this.parameters[t]=e.options[n]}else if(void 0!==e.min&&void 0!==e.max){const n=e.min+Math.random()*(e.max-e.min);this.parameters[t]=Number.isInteger(e.default)?Math.round(n):parseFloat(n.toFixed(2))}})),this.updateShape(),this.controller.history&&this.controller.history.saveState(),this.updateParameterControls()}updateParameterControls(){document.querySelectorAll("[data-param]").forEach((t=>{const e=t.getAttribute("data-param");this.parameters.hasOwnProperty(e)&&("range"===t.type||"text"===t.type?t.value=this.parameters[e]:"SELECT"===t.tagName&&Array.from(t.options).forEach((t=>{t.selected=t.value===this.parameters[e]})))}))}cleanupEditor(){this.cleanupAnimation(),this.parameters={},this.styleController&&this.styleController.saveStyleSettings(this.currentShape),document.removeEventListener("keydown",this.handleKeyDown)}saveToFavorites(){if(!this.currentShape)return;this.controller.favorites&&this.controller.favorites.saveCurrentShape(this.currentShape,this.parameters),this.styleController&&this.controller.favorites&&this.controller.favorites.saveShapeStyle(this.styleController.styleParams);const t=document.getElementById("saveBtn");if(t){const e=t.innerHTML;t.innerHTML="Saved",setTimeout((()=>{t.innerHTML=e}),1500)}}copySvgToClipboard(){const t=document.getElementById("preview-svg");if(!t)return;const e=(new XMLSerializer).serializeToString(t);navigator.clipboard.writeText(e).then((()=>{const t=document.getElementById("copyBtn");if(t){const e=t.innerHTML;t.innerHTML="Copied",setTimeout((()=>{t.innerHTML=e}),1500)}})).catch((t=>{console.error("Error copying SVG to clipboard:",t)}))}downloadFile(t,e){const n=URL.createObjectURL(t),i=document.createElement("a");i.href=n,i.download=e,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(n)}},k=class{constructor(t){this.controller=t,this.historyByShape={},this.currentShapeName=null,this.maxHistorySize=50,this.isRestoring=!1}initShapeHistory(t){t&&(this.historyByShape[t]||(this.historyByShape[t]={states:[],currentIndex:-1}),this.currentShapeName=t)}saveState(){if(this.isRestoring||!this.currentShapeName)return;const t=this.historyByShape[this.currentShapeName];if(!t)return;const e={parameters:{},styleParams:{}};this.controller.editor&&this.controller.editor.editorOpen?(e.parameters={...this.controller.editor.parameters},this.controller.editor.styleController&&(e.styleParams={...this.controller.editor.styleController.styleParams})):this.controller.parameters&&(e.parameters={...this.controller.parameters}),t.currentIndex<t.states.length-1&&(t.states=t.states.slice(0,t.currentIndex+1)),t.states.push(e),t.currentIndex++,t.states.length>this.maxHistorySize&&(t.states.shift(),t.currentIndex--),this.updateButtonsState()}restoreState(t){if(t)try{this.isRestoring=!0,t.parameters&&(this.controller.parameters={...t.parameters}),this.controller.editor&&this.controller.editor.editorOpen?(t.parameters&&(this.controller.editor.parameters={...t.parameters}),t.styleParams&&this.controller.editor.styleController&&(this.controller.editor.styleController.styleParams={...t.styleParams}),this.controller.editor.updateShape()):this.controller.updateShape()}finally{this.isRestoring=!1}}undo(){if(!this.currentShapeName)return;const t=this.historyByShape[this.currentShapeName];!t||t.currentIndex<=0||(t.currentIndex--,this.restoreState(t.states[t.currentIndex]),this.updateButtonsState())}redo(){if(!this.currentShapeName)return;const t=this.historyByShape[this.currentShapeName];!t||t.currentIndex>=t.states.length-1||(t.currentIndex++,this.restoreState(t.states[t.currentIndex]),this.updateButtonsState())}updateButtonsState(){const t=document.getElementById("undoBtn"),e=document.getElementById("redoBtn");if(!this.currentShapeName)return t&&(t.disabled=!0),void(e&&(e.disabled=!0));const n=this.historyByShape[this.currentShapeName];t&&(t.disabled=!n||n.currentIndex<=0),e&&(e.disabled=!n||n.currentIndex>=n.states.length-1)}clear(){this.currentShapeName&&(this.historyByShape[this.currentShapeName]={states:[],currentIndex:-1},this.updateButtonsState())}},S=class{constructor(t){this.controller=t,this.favorites=[]}init(){this.loadFavoritesFromStorage(),this.createFavoritesOverlay(),this.setupBookmarkButtons(),document.addEventListener("click",(t=>{t.target.closest(".bookmark-btn")&&(t.preventDefault(),t.stopPropagation(),this.toggleFavoritesOverlay())})),this.addStyles(),document.addEventListener("keydown",(t=>{if("Escape"===t.key){const t=document.querySelector(".favorites-overlay");t&&"none"!==window.getComputedStyle(t).display&&this.toggleFavoritesOverlay()}}))}addStyles(){const t="favorites-custom-styles",e=document.getElementById(t);e&&e.remove();const n=document.createElement("style");n.id=t,n.textContent="\n            .favorites-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: #000000 !important;\n                z-index: 1000;\n                display: none;\n                justify-content: center;\n                align-items: center;\n                padding: 24px;\n            }\n            .favorites-content {\n                background-color: #00000;\n                border-radius: 8px;\n                width: 95%;\n                max-width: 1200px;\n                max-height: 90vh;\n                display: flex;\n                flex-direction: column;\n                overflow: hidden;\n            }\n            .favorites-header {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                padding: 16px 20px;\n            }\n            #favoritesGrid {\n                display: grid;\n                grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n                gap: 16px;\n                padding: 24px;\n                overflow-y: auto;\n                max-height: calc(90vh - 70px);\n                background-color: #000000;\n            }\n            .shape-thumbnail {\n                aspect-ratio: 1;\n                background-color: #111111;\n                border-radius: 4px;\n                cursor: pointer;\n                position: relative;\n                transition: background-color 0.2s;\n                overflow: hidden;\n                border: 1px solid #222;\n            }\n            .shape-thumbnail:hover {\n                background-color: #1A1A1A;\n                border-color: #333;\n            }\n            .shape-preview {\n                width: 100%;\n                height: 100%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                background-color: #000000;\n            }\n            .shape-title {\n                position: absolute;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                padding: 8px;\n                font-size: 11px;\n                background: rgba(0,0,0,0.8);\n                color: #aaa;\n                text-align: center;\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n            }\n            .remove-favorite {\n                position: absolute;\n                top: 8px;\n                right: 8px;\n                width: 24px;\n                height: 24px;\n                background-color: rgba(0, 0, 0, 0.8);\n                border: 1px solid #333;\n                border-radius: 50%;\n                color: #ccc;\n                font-size: 14px;\n                cursor: pointer;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                opacity: 0;\n                transition: opacity 0.2s;\n            }\n            .shape-thumbnail:hover .remove-favorite {\n                opacity: 1;\n            }\n            .remove-favorite:hover {\n                background-color: #333;\n                color: #fff;\n            }\n            .empty-favorites {\n                padding: 60px;\n                text-align: center;\n                color: #444;\n                font-size: 14px;\n                grid-column: 1 / -1;\n            }\n            #closeFavorites {\n                background-color: #000;\n                color: #666;\n                border: none;\n                border-radius: 50%;\n                width: 30px;\n                height: 30px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                cursor: pointer;\n                transition: background-color 0.2s;\n            }\n            #closeFavorites:hover {\n                background-color: #000;\n                color: #fff;\n            }\n        ",document.head.appendChild(n)}loadFavoritesFromStorage(){try{const t=localStorage.getItem("shapeFavorites");this.favorites=t?JSON.parse(t):[]}catch(t){console.error("Error loading favorites from storage:",t),this.favorites=[]}}saveFavoritesToStorage(){try{localStorage.setItem("shapeFavorites",JSON.stringify(this.favorites)),console.log(`Saved ${this.favorites.length} favorites to storage`)}catch(t){console.error("Error saving favorites to storage:",t)}}setupBookmarkButtons(){const t=document.querySelectorAll(".bookmark-btn");t.length>0?t.forEach((t=>{const e=t.cloneNode(!0);t.parentNode.replaceChild(e,t),e.addEventListener("click",(t=>{t.preventDefault(),t.stopPropagation(),this.toggleFavoritesOverlay()}))})):console.log("No bookmark buttons found")}saveShapeStyle(t){this.favorites.length>0&&(this.favorites[this.favorites.length-1].styleParams=JSON.parse(JSON.stringify(t)),this.saveFavoritesToStorage(),console.log("Saved style parameters with favorite"))}createFavoritesOverlay(){const t=document.querySelector(".favorites-overlay");t&&t.remove();const e=document.createElement("div");e.className="favorites-overlay";const n=document.createElement("div");n.className="favorites-content";const i=document.createElement("div");i.className="favorites-header";const s=document.createElement("button");s.id="closeFavorites",s.className="icon-button",s.innerHTML='\n            <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M9 10L20 21" stroke="#666666" stroke-width="1.5" stroke-linecap="round"/>\n            <path d="M20 10L9 21" stroke="#666666" stroke-width="1.5" stroke-linecap="round"/>\n            </svg>\n\n        ',i.appendChild(s);const a=document.createElement("div");a.id="favoritesGrid",n.appendChild(i),n.appendChild(a),e.appendChild(n),document.body.appendChild(e),s.addEventListener("click",(()=>this.toggleFavoritesOverlay())),e.addEventListener("click",(t=>{t.target===e&&this.toggleFavoritesOverlay()})),this.renderFavorites(),this.overlay=e}saveCurrentShape(t,e){let n;if(console.log("Saving current shape..."),t&&e)n={id:Date.now(),shapeName:t,parameters:{...e},dateAdded:(new Date).toISOString()};else{if(!this.controller.selectedShape)return void console.log("No shape selected to save");n={id:Date.now(),shapeName:this.controller.selectedShape,parameters:{...this.controller.parameters},dateAdded:(new Date).toISOString()}}console.log("Saving shape:",n),this.favorites.push(n),this.saveFavoritesToStorage(),this.renderFavorites()}renderFavorites(){const t=document.getElementById("favoritesGrid");if(t)if(t.innerHTML="",0===this.favorites.length){const e=document.createElement("div");e.className="empty-favorites",e.innerHTML='\n                <svg width="60" height="60" viewBox="0 0 24 24" stroke="#333" fill="none" stroke-width="1.5" style="margin-bottom: 24px">\n                    <path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>\n                </svg>\n                <p>No shapes saved yet</p>\n                <p style="margin-top:12px; font-size: 12px; color: #333;">Use the "Save" button in the shape editor view</p>\n            ',t.appendChild(e)}else this.favorites.forEach((e=>{const n=document.createElement("div");n.className="shape-thumbnail";const i=document.createElement("div");i.className="shape-preview";const s=document.createElementNS("http://www.w3.org/2000/svg","svg");s.setAttribute("viewBox","-150 -150 300 300"),s.setAttribute("preserveAspectRatio","xMidYMid meet"),s.style.maxWidth="80%",s.style.maxHeight="80%";const a=document.createElementNS("http://www.w3.org/2000/svg","g");s.appendChild(a);const r=this.controller.shapes[e.shapeName];if(r)try{const t=new r(e.parameters).generateShape();t&&(a.innerHTML=t),e.styleParams&&this.applyStyleToSVG(s,e.styleParams)}catch(t){console.error(`Error rendering favorite ${e.shapeName}:`,t),a.innerHTML='<text x="0" y="0" fill="#ff0000" text-anchor="middle" font-size="12">Error</text>'}else console.error(`Shape class not found: ${e.shapeName}`),a.innerHTML='<text x="0" y="0" fill="#ff0000" text-anchor="middle" font-size="12">Class not found</text>';i.appendChild(s),n.appendChild(i);const o=document.createElement("button");o.className="remove-favorite",o.innerHTML="×",o.addEventListener("click",(t=>{t.stopPropagation(),this.removeFavorite(e.id)})),n.appendChild(o),n.addEventListener("click",(()=>{this.loadFavorite(e),this.toggleFavoritesOverlay()})),t.appendChild(n)}));else console.error("Favorites grid not found")}loadFavorite(t){console.log("Loading favorite shape:",t.shapeName),this.controller.editor&&this.controller.editor.showEditor?(this.controller.selectedShape=t.shapeName,this.controller.parameters=JSON.parse(JSON.stringify(t.parameters)),this.controller.editor.editorOpen?(console.log("Editor is open, closing before reopening with new shape"),this.controller.editor.hideEditor(),setTimeout((()=>{if(this.controller.editor.showEditor(t.shapeName),this.controller.editor.parameters=JSON.parse(JSON.stringify(t.parameters)),this.controller.editor.updateShape(),t.styleParams&&this.controller.editor.styleController){this.controller.editor.styleController.styleParams=JSON.parse(JSON.stringify(t.styleParams)),this.controller.editor.styleController.updateShapeStyle();const e=document.querySelector(".style-row");if(e){const t=e.parentNode;t&&(e.remove(),this.controller.editor.styleController.createStyleControls(t))}}this.controller.history&&this.controller.history.saveState()}),100)):(console.log("Opening editor with shape:",t.shapeName),this.controller.editor.showEditor(t.shapeName),setTimeout((()=>{if(this.controller.editor.parameters=JSON.parse(JSON.stringify(t.parameters)),this.controller.editor.updateShape(),t.styleParams&&this.controller.editor.styleController){this.controller.editor.styleController.styleParams=JSON.parse(JSON.stringify(t.styleParams)),this.controller.editor.styleController.updateShapeStyle();const e=document.querySelector(".style-row");if(e){const t=e.parentNode;t&&(e.remove(),this.controller.editor.styleController.createStyleControls(t))}}this.controller.history&&this.controller.history.saveState()}),100))):console.error("Editor not available")}applyStyleToSVG(t,e){if(e)try{const n=t.querySelector("g");if(!n)return;let i=t.querySelector("defs");i||(i=document.createElementNS("http://www.w3.org/2000/svg","defs"),t.insertBefore(i,t.firstChild)),Array.from(i.querySelectorAll("linearGradient, radialGradient")).forEach((t=>t.remove()));let s=this.createStyleValue(i,e,"fill"),a=this.createStyleValue(i,e,"stroke");n.querySelectorAll("path, rect, circle, ellipse, polygon, polyline").forEach((t=>{"none"===e.fillType?t.setAttribute("fill","none"):(t.setAttribute("fill",s),t.setAttribute("fill-opacity",e.fillOpacity||1)),"none"===e.strokeType?t.setAttribute("stroke","none"):(t.setAttribute("stroke",a),t.setAttribute("stroke-width",e.strokeWidth||1),"dashed"===e.strokeType?t.setAttribute("stroke-dasharray",e.strokeDasharray||"3,2"):t.removeAttribute("stroke-dasharray"))}))}catch(t){console.error("Error applying style to favorite:",t)}}createStyleValue(t,e,n){const i="stroke"===n?"stroke":"fill",s=e[`${i}Type`];if("solid"===s||"dashed"===s)return e[`${i}Color`]||"#FFFFFF";if("none"===s)return"none";if("linearGradient"===s){const n=`${i}LinearGradient-${Date.now()}-${Math.floor(1e3*Math.random())}`,s=document.createElementNS("http://www.w3.org/2000/svg","linearGradient");s.setAttribute("id",n);const a=(e[`${i}GradientAngle`]||90)*Math.PI/180,r=.5-.5*Math.cos(a),o=.5-.5*Math.sin(a),h=.5+.5*Math.cos(a),l=.5+.5*Math.sin(a);s.setAttribute("x1",r),s.setAttribute("y1",o),s.setAttribute("x2",h),s.setAttribute("y2",l);const d=document.createElementNS("http://www.w3.org/2000/svg","stop");d.setAttribute("offset","0%"),d.setAttribute("stop-color",e[`${i}GradientColor1`]||"#3498DB");const c=document.createElementNS("http://www.w3.org/2000/svg","stop");return c.setAttribute("offset","100%"),c.setAttribute("stop-color",e[`${i}GradientColor2`]||"#9B59B6"),s.appendChild(d),s.appendChild(c),t.appendChild(s),`url(#${n})`}if("radialGradient"===s){const n=`${i}RadialGradient-${Date.now()}-${Math.floor(1e3*Math.random())}`,s=document.createElementNS("http://www.w3.org/2000/svg","radialGradient");s.setAttribute("id",n),s.setAttribute("cx","0.5"),s.setAttribute("cy","0.5"),s.setAttribute("r","0.5");const a=document.createElementNS("http://www.w3.org/2000/svg","stop");a.setAttribute("offset","0%"),a.setAttribute("stop-color",e[`${i}GradientColor1`]||"#3498DB");const r=document.createElementNS("http://www.w3.org/2000/svg","stop");return r.setAttribute("offset","100%"),r.setAttribute("stop-color",e[`${i}GradientColor2`]||"#9B59B6"),s.appendChild(a),s.appendChild(r),t.appendChild(s),`url(#${n})`}return e[`${i}Color`]||"#FFFFFF"}removeFavorite(t){this.favorites=this.favorites.filter((e=>e.id!==t)),this.saveFavoritesToStorage(),this.renderFavorites()}toggleFavoritesOverlay(){console.log("Toggling favorites overlay");const t=document.querySelector(".favorites-overlay");if(!t)return console.error("Favorites overlay not found, creating it"),this.createFavoritesOverlay(),void setTimeout((()=>this.toggleFavoritesOverlay()),50);"none"===window.getComputedStyle(t).display?(t.style.display="flex",document.body.style.overflow="hidden",this.renderFavorites()):(t.style.display="none",document.body.style.overflow="")}},v=class{constructor(t){this.app=t,this.animationState={},this.animationFrameId=null,this.currentlyHoveredId=null,this.globalAnimationTime=0,this.ANIMATION_DENSITY=.1,this.animationEnabled=!0,this.startAnimationLoop=this.startAnimationLoop.bind(this),this.updateShapeAnimation=this.updateShapeAnimation.bind(this),this.setupShapeHoverEvents=this.setupShapeHoverEvents.bind(this)}initAnimationState(t,e){if(!this.animationEnabled)return null;const n=this.app.shapes[t];if(!n)return null;try{const e=new n,i=n.parameters||{},s={...this.app.Shape.parameters,...i},a={shapeName:t,isAnimating:!1,shouldAnimate:!1,transitionTime:3,progress:0,hovering:!1,returningToDefault:!1,stopAfterDefault:!1,currentParams:{},targetParams:{},initialParams:{},defaultParams:{}};return Object.entries(s).forEach((([t,n])=>{("number"==typeof e[t]||n.options)&&(a.currentParams[t]=e[t],a.targetParams[t]=e[t],a.initialParams[t]=e[t],a.defaultParams[t]=e[t])})),a}catch(e){return console.error(`Error initializing animation state for shape ${t}:`,e),null}}isNonInterpolatedParam(t){const e=t.toLowerCase();return!(!["rows","columns","randomlayout","count","resolution","value"].includes(e)&&!e.includes("linecount"))||!["cornerradius","gapsize"].includes(e)&&(e.includes("radius")||e.includes("size")||e.includes("thickness")||e.includes("segments"))}setNewTargetState(t,e,n=!1){if(!this.animationEnabled)return;if(!this.animationState[e]&&(this.animationState[e]=this.initAnimationState(t,e),!this.animationState[e]))return;const i=this.animationState[e];i.returningToDefault&&i.hovering&&(i.returningToDefault=!1,i.stopAfterDefault=!1);const s=this.app.shapes[t];if(s)try{const t=s.parameters||{},e={...this.app.Shape.parameters,...t};Object.keys(i.currentParams).forEach((t=>{i.initialParams[t]=i.currentParams[t]})),Object.entries(e).forEach((([t,e])=>{if(e.options)i.targetParams[t]=i.currentParams[t];else if("number"==typeof i.currentParams[t]&&void 0!==e.min&&void 0!==e.max)if(i.hovering&&this.isNonInterpolatedParam(t))i.targetParams[t]=i.currentParams[t];else{const s=e.min,a=e.max;if(n&&i.hovering){const e=.7,n=Math.random();i.targetParams[t]=n<.5?s+(a-s)*(1-e)*Math.random():a-(a-s)*(1-e)*Math.random()}else i.targetParams[t]=s+Math.random()*(a-s)}})),i.progress=0,i.isAnimating=!0,i.transitionTime=i.hovering?.3:2,i.animationType=i.hovering?"hoverIn":i.returningToDefault?"hoverOut":"randomAnimation"}catch(n){console.error(`Error setting target state for shape ${t}:`,n),this.animationState[e]&&(this.animationState[e].isAnimating=!1,this.animationState[e].shouldAnimate=!1)}}getVisibleShapes(){return Array.from(document.querySelectorAll(".shape-container")).filter((t=>{const e=t.getBoundingClientRect();return e.top<window.innerHeight&&e.bottom>0}))}startAnimationLoop(){if(!this.animationEnabled)return;this.animationFrameId&&cancelAnimationFrame(this.animationFrameId);let t=performance.now();const e=n=>{if(!this.animationEnabled)return;const i=(n-t)/1e3;if(t=n,this.globalAnimationTime+=i,!this.app.selectedShape)try{this.getVisibleShapes().forEach((t=>{try{t.id,t.dataset.shapeName,this.updateShapeAnimation(t,i)}catch(t){console.error("Error animating shape:",t)}}))}catch(t){console.error("Animation loop error:",t)}this.animationFrameId=requestAnimationFrame(e)};this.animationFrameId=requestAnimationFrame(e)}updateShapeAnimation(t,e){if(!this.animationEnabled)return;const n=t.id,i=t.dataset.shapeName;if(!this.animationState[n]&&(this.animationState[n]=this.initAnimationState(i,n),!this.animationState[n]))return;const s=this.animationState[n];if(!s.isAnimating||!s.shouldAnimate&&!s.hovering&&!s.returningToDefault)return;const a=this.app.shapes[i];if(a)try{s.progress+=e/s.transitionTime,s.progress>=1?this.handleAnimationComplete(s,i,n):this.interpolateParameters(s,a),this.renderInterpolatedShape(i,n,s.currentParams)}catch(e){console.error(`Error updating animation for shape ${i}:`,e),this.handleAnimationError(s,t,i)}}handleAnimationComplete(t,e,n){Object.keys(t.targetParams).forEach((e=>{t.currentParams[e]=t.targetParams[e]})),t.returningToDefault?(t.returningToDefault=!1,t.stopAfterDefault?(t.isAnimating=!1,t.stopAfterDefault=!1):t.isAnimating=!1):t.hovering&&t.singleHoverAnimation?t.isAnimating=!1:t.hovering||t.shouldAnimate?t.singleHoverAnimation?t.isAnimating=!1:this.setNewTargetState(e,n):t.isAnimating=!1}handleAnimationError(t,e,n){t.isAnimating=!1,t.shouldAnimate=!1,t.returningToDefault=!1;try{const t=this.app.shapes[n];if(!t)return;const i=(new t).generateShape(),s=e.querySelector("svg");if(s){const t=s.querySelector("g");t&&(t.innerHTML=i)}}catch(t){console.error(`Fallback rendering also failed for ${n}:`,t)}}interpolateParameters(t,e){Object.keys(t.targetParams).forEach((n=>{const i=e.parameters||{},s={...this.app.Shape.parameters,...i}[n];if(s&&s.options)t.currentParams[n]=t.initialParams[n];else if(!t.returningToDefault&&this.isNonInterpolatedParam(n)&&t.hovering)n.toLowerCase().includes("rows")||n.toLowerCase().includes("columns")||n.toLowerCase().includes("count")?t.currentParams[n]=Math.round(t.initialParams[n]):t.currentParams[n]=t.initialParams[n];else{const e=this.smoothStep(t.progress,t.animationType||"default");n.toLowerCase().includes("rows")||n.toLowerCase().includes("columns")||n.toLowerCase().includes("count")?t.currentParams[n]=Math.round(this.lerp(t.initialParams[n],t.targetParams[n],e)):t.currentParams[n]=this.lerp(t.initialParams[n],t.targetParams[n],e)}}))}renderInterpolatedShape(t,e,n){if(this.animationEnabled)try{const i=this.app.shapes[t];if(!i)return;const s={...n,seed:42};(" "===t||t.includes("Grid")||t.includes("Pattern"))&&(void 0!==s.rows&&(s.rows=Math.round(s.rows)),void 0!==s.columns&&(s.columns=Math.round(s.columns)),Object.keys(s).forEach((t=>{t.toLowerCase().includes("count")&&(s[t]=Math.round(s[t]))})));const a=new i(s).generateShape(),r=document.getElementById(e);if(!r)return;const o=r.querySelector("svg");if(!o)return;const h=o.querySelector("g");if(!h)return;h.innerHTML=a}catch(n){console.error(`Error rendering interpolated shape ${t}:`,n);try{const n=this.app.shapes[t];if(!n)return;const i=(new n).generateShape(),s=document.getElementById(e);if(!s)return;const a=s.querySelector("svg");if(!a)return;const r=a.querySelector("g");if(!r)return;r.innerHTML=i}catch(e){console.error(`Fallback rendering also failed for ${t}:`,e)}}}setupShapeHoverEvents(t,e,n){this.animationEnabled&&(t.addEventListener("mouseenter",(()=>{this.currentlyHoveredId=n,this.animationState[n]||(this.animationState[n]=this.initAnimationState(e,n));const t=this.animationState[n];t&&(t.returningToDefault&&(t.returningToDefault=!1,t.stopAfterDefault=!1),t.hovering=!0,t.transitionTime=.3,t.singleHoverAnimation=!0,Object.keys(t.currentParams).forEach((e=>{t.initialParams[e]=t.currentParams[e]})),this.setNewTargetState(e,n,!0))})),t.addEventListener("mouseleave",(()=>{this.currentlyHoveredId===n&&(this.currentlyHoveredId=null);const t=this.animationState[n];t&&(t.hovering=!1,t.singleHoverAnimation=!1,Object.keys(t.currentParams).forEach((e=>{t.initialParams[e]=t.currentParams[e]})),Object.keys(t.defaultParams).forEach((e=>{t.targetParams[e]=t.defaultParams[e]})),t.progress=0,t.isAnimating=!0,t.returningToDefault=!0,t.transitionTime=.25,t.stopAfterDefault=!0)})))}easeOutQuad(t){return t*(2-t)}easeInQuad(t){return t*t}easeInOutQuad(t){return t<.5?2*t*t:(4-2*t)*t-1}easeInOutCubic(t){return t<.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1}easeOutBack(t){return 1+2.70158*Math.pow(t-1,3)+1.70158*Math.pow(t-1,2)}lerp(t,e,n){return t+(e-t)*n}smoothStep(t,e="default"){switch(t=Math.min(Math.max(t,0),1),e){case"hoverIn":case"hoverOut":return 1-Math.pow(1-t,4);case"randomAnimation":return this.easeInOutCubic(t);default:return this.easeOutQuad(t)}}dispose(){this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.animationState={}}};class b{constructor(){this.selectedShape=null,this.currentCategory="all",this.currentSearchTerm="",this.gridColumns=5,this.lastSelectedShapeId=null,this.gridState={scrollY:0,shapesVisible:[]},this.lastClickedShapeIndex=-1,this.lastClickedRow=-1,this.lastClickedColumn=-1,this.parameters={},this.Shape=y.y,this.shapes=g,this.animationEnabled=!0,this.animationManager=new v(this),this.history=new k(this),this.favorites=new S(this),this.editor=new w(this),this.renderShapeGrid=this.renderShapeGrid.bind(this),this.saveGridState=this.saveGridState.bind(this),this.returnToGrid=this.returnToGrid.bind(this),this.showShapeEditor=this.showShapeEditor.bind(this),this.updateShape=this.updateShape.bind(this)}init(){this.createMinimalHeader(),this.createCategoryFilters(),this.scrollSelectedCategoryIntoView(),this.renderShapeGrid(),this.favorites.init(),window.addEventListener("resize",(()=>{this.selectedShape||this.renderShapeGrid(!0,!0)})),this.animationEnabled&&this.animationManager.startAnimationLoop(),document.addEventListener("click",this.handleGlobalClick.bind(this),!0)}updateShape(){this.editor&&this.editor.updateShape&&(this.parameters&&Object.keys(this.parameters).length>0&&(this.editor.parameters={...this.parameters}),this.editor.updateShape())}createCategoryFilters(){let t="all";this.currentCategory=null;try{const e=localStorage.getItem("selectedCategory");e&&(t=e),this.currentCategory="all"===t?null:t,console.log(`Loaded from localStorage: ${t}, set currentCategory to ${this.currentCategory}`)}catch(t){console.warn("Could not retrieve saved category from localStorage",t)}const e=document.createElement("div");e.className="category-pills-container",e.id="category-filters-container",e.style.scrollbarWidth="none",e.style.msOverflowStyle="none";const n={all:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <rect x="3" y="3" width="4" height="4" rx="1" stroke="currentColor"/>\n        <rect x="9" y="3" width="4" height="4" rx="1" stroke="currentColor"/>\n        <rect x="3" y="9" width="4" height="4" rx="1" stroke="currentColor"/>\n        <rect x="9" y="9" width="4" height="4" rx="1" stroke="currentColor"/>\n      </svg>',basic:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <rect x="3" y="3" width="10" height="10" rx="1" stroke="currentColor"/>\n      </svg>',stars:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M8 2L9.5 5.5L13.5 6L10.75 8.75L11.5 13L8 11L4.5 13L5.25 8.75L2.5 6L6.5 5.5L8 2Z" stroke="currentColor"/>\n      </svg>',grids:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <line x1="5.5" y1="3" x2="5.5" y2="13" stroke="currentColor"/>\n        <line x1="10.5" y1="3" x2="10.5" y2="13" stroke="currentColor"/>\n        <line x1="3" y1="5.5" x2="13" y2="5.5" stroke="currentColor"/>\n        <line x1="3" y1="10.5" x2="13" y2="10.5" stroke="currentColor"/>\n      </svg>',curved:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M3 12C6 12 10 4 13 4" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>\n      </svg>',circles:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <circle cx="8" cy="8" r="5" stroke="currentColor"/>\n      </svg>',layered:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <rect x="4" y="4" width="8" height="8" rx="1" stroke="currentColor"/>\n        <rect x="6" y="6" width="8" height="8" rx="1" stroke="currentColor"/>\n      </svg>',nature:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M8 13V5M8 5C6.5 3.5 4 3 4 5C4 7 8 8 8 5Z M8 5C9.5 3.5 12 3 12 5C12 7 8 8 8 5Z" stroke="currentColor" stroke-linecap="round"/>\n      </svg>',polygons:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path d="M8 3L12.5 5.5L12.5 10.5L8 13L3.5 10.5L3.5 5.5L8 3Z" stroke="currentColor"/>\n      </svg>',rounded:'<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <rect x="3" y="3" width="10" height="10" rx="3" stroke="currentColor"/>\n      </svg>'};[{id:"all",name:"All Shapes"},{id:"basic",name:"Basic Shapes"},{id:"stars",name:"Stars & Bursts"},{id:"grids",name:"Grids & Patterns"},{id:"curved",name:"Curved & Waves"},{id:"circles",name:"Circles & Ellipses"},{id:"layered",name:"Layered & Nested"},{id:"nature",name:"Nature-Inspired"},{id:"rounded",name:"Rounded Forms"}].forEach((i=>{const s=document.createElement("button");s.className="category-pill",s.dataset.categoryId=i.id;const a=i.id===t;s.style.display="flex",s.style.alignItems="center",s.style.gap="6px",s.style.flex="0 0 auto",s.style.whiteSpace="nowrap",s.style.backgroundColor=a?"white":"rgb(26, 26, 26)",s.style.color=a?"#000":"#D9D9D9",s.style.border="none",s.style.borderRadius="50px",s.style.padding="8px 16px",s.style.fontSize="14px",s.style.fontWeight="500",s.style.fontFamily="'Menlo', 'Monaco', 'Courier New', monospace",s.style.cursor="pointer",s.style.minWidth="fit-content";const r=document.createElement("span");r.style.display="flex",r.style.alignItems="center",r.style.justifyContent="center",r.style.width="16px",r.style.height="16px",r.innerHTML=n[i.id]||n.all,r.style.color=a?"#000":"#D9D9D9",s.appendChild(r);const o=document.createElement("span");o.textContent=i.name,o.style.fontFamily="'Menlo', 'Monaco', 'Courier New', monospace",s.appendChild(o),s.dataset.selected=a?"true":"false",a&&s.classList.add("selected"),s.addEventListener("click",(t=>{const e=s.dataset.categoryId;console.log(`Pill clicked: ${e}`),document.querySelectorAll(".category-pill").forEach((t=>{t.style.setProperty("background-color","rgb(26, 26, 26)","important"),t.style.setProperty("color","#D9D9D9","important"),t.dataset.selected="false";const e=t.querySelector("span:first-child");e&&e.style.setProperty("color","#D9D9D9","important")})),console.log(`Setting ${e} to white`),s.style.setProperty("background-color","white","important"),s.style.setProperty("color","#000","important"),s.dataset.selected="true";const n=s.querySelector("span:first-child");n&&n.style.setProperty("color","#000","important"),this.currentCategory="all"===e?null:e;try{localStorage.setItem("selectedCategory",e)}catch(t){console.warn("Could not save category selection to localStorage",t)}return this.renderShapeGrid(!0),!1})),s.addEventListener("mouseover",(()=>{"true"!==s.dataset.selected&&(s.style.backgroundColor="rgb(32, 32, 32)")})),s.addEventListener("mouseout",(()=>{if("true"!==s.dataset.selected)s.style.backgroundColor="rgb(26, 26, 26)",s.style.transform="translateY(0)",s.style.boxShadow="0 1px 2px rgba(0,0,0,0.15)";else{s.style.backgroundColor="white",s.style.color="#000",s.style.transform="translateY(0)",s.style.boxShadow="0 1px 3px rgba(0,0,0,0.2)";const t=s.querySelector("span:first-child");t&&(t.style.color="#000")}})),e.appendChild(s)}));const i=document.getElementById("main-header");if(i&&i.nextSibling)document.body.insertBefore(e,i.nextSibling);else{const t=document.getElementById("grid");t?document.body.insertBefore(e,t):document.body.appendChild(e)}}selectCategoryPill(t){console.log(`Selecting category: ${t}`),document.querySelectorAll(".category-pill").forEach((e=>{const n=e.dataset.categoryId===t;e.dataset.selected=n?"true":"false",n?e.classList.add("selected"):e.classList.remove("selected"),e.style.backgroundColor=n?"white":"rgb(26, 26, 26)",e.style.color=n?"#000":"#D9D9D9";const i=e.querySelector("span:first-child");i&&(i.style.color=n?"#000":"#D9D9D9"),n&&console.log(`Applied selected style to pill ${e.dataset.categoryId}`)})),this.currentCategory="all"===t?null:t;try{localStorage.setItem("selectedCategory",t)}catch(t){console.warn("Could not save category selection to localStorage",t)}this.renderShapeGrid(!0)}createCategoryPill(t){const e=document.createElement("button");if(e.className="category-pill",e.dataset.categoryId=t.id,e.style.display="flex",e.style.alignItems="center",e.style.gap="6px",e.style.backgroundColor="all"===t.id?"white":"#eaeaea",e.style.color="all"===t.id?"#333":"#555",e.style.border="none",e.style.borderRadius="50px",e.style.padding="8px 16px",e.style.fontSize="14px",e.style.fontWeight="500",e.style.cursor="pointer",e.style.transition="all 0.2s ease",e.style.minWidth="fit-content",e.style.boxShadow="0 1px 2px rgba(0,0,0,0.1)",t.icon){const n=document.createElement("span");n.innerHTML=t.icon,n.style.display="flex",n.style.alignItems="center",n.style.justifyContent="center",e.appendChild(n)}else{const n=this.generateCategoryIcon(t);n&&e.appendChild(n)}const n=document.createElement("span");return n.textContent=t.name,e.appendChild(n),e.addEventListener("click",(()=>{this.selectCategoryPill(t.id)})),e.addEventListener("mouseover",(()=>{e.classList.contains("selected")||(e.style.backgroundColor="#f0f0f0")})),e.addEventListener("mouseout",(()=>{e.classList.contains("selected")||(e.style.backgroundColor="#eaeaea")})),e}selectCategoryPill(t){document.querySelectorAll(".category-pill").forEach((e=>{e.dataset.categoryId===t?(e.classList.add("selected"),e.style.backgroundColor="white",e.style.color="#333",e.style.transform="translateY(0)",e.style.boxShadow="0 2px 4px rgba(0,0,0,0.15)"):(e.classList.remove("selected"),e.style.backgroundColor="#eaeaea",e.style.color="#555",e.style.transform="translateY(0)",e.style.boxShadow="0 1px 2px rgba(0,0,0,0.1)")})),this.currentCategory="all"===t?null:t,this.renderShapeGrid(!0)}handleGlobalClick(t){let e=t.target;for(;null!=e;){if(e.classList&&e.classList.contains("shape-container")){const n=e.dataset.shapeName,i=e.id;if(n&&i){const e=Object.keys(g).filter((t=>!this.currentSearchTerm||t.toLowerCase().includes(this.currentSearchTerm)));return this.lastClickedShapeIndex=e.indexOf(n),this.selectedShape=n,this.lastSelectedShapeId=i,this.saveGridState(i),this.showShapeEditor(n),void t.stopPropagation()}break}e=e.parentElement}}createMinimalHeader(){const t=document.createElement("header");t.className="header",t.id="main-header";const e=document.createElement("input");e.type="text",e.placeholder="Search",e.className="search-input",e.addEventListener("input",(t=>{this.currentSearchTerm=t.target.value.toLowerCase(),this.renderShapeGrid(!0)}));const n=document.createElement("div");n.className="zoom-controls";const i=document.createElement("button");i.textContent="−",i.className="zoom-btn",i.title="Zoom out",i.addEventListener("click",(()=>{this.selectedShape||this.gridColumns<8&&(this.gridColumns++,this.renderShapeGrid(!0))}));const s=document.createElement("button");s.textContent="+",s.className="zoom-btn",s.title="Zoom in",s.addEventListener("click",(()=>{this.selectedShape||this.gridColumns>1&&(this.gridColumns--,this.renderShapeGrid(!0))})),n.appendChild(i),n.appendChild(s);const a=document.createElement("button");a.id="bookmarkBtn",a.className="bookmark-btn",a.title="Saved Shapes",a.innerHTML='\n             <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M10 10V22.7586C10 22.8477 10.1077 22.8923 10.1707 22.8293L14.9293 18.0707C14.9683 18.0317 15.0317 18.0317 15.0707 18.0707L19.8293 22.8293C19.8923 22.8923 20 22.8477 20 22.7586V10C20 9.44772 19.5523 9 19 9H11C10.4477 9 10 9.44772 10 10Z" stroke="#666666" stroke-width="1.5"/>\n</svg>\n\n    ',a.style.background="transparent",a.style.border="none",a.style.borderRadius="50%",a.style.width="25px",a.style.height="25px",a.style.display="flex",a.style.alignItems="center",a.style.justifyContent="center",a.style.cursor="pointer",a.style.color="#666666",t.appendChild(e);const r=document.createElement("div");return r.className="header-actions",r.style.display="flex",r.style.gap="8px",r.appendChild(a),r.appendChild(n),t.appendChild(r),document.body.insertBefore(t,document.getElementById("grid")),t}scrollSelectedCategoryIntoView(){const t=document.querySelector('.category-pill[data-selected="true"]');t&&document.getElementById("category-filters-container")&&t.scrollIntoView({block:"nearest",inline:"center"})}saveGridState(t){if(this.gridState={scrollY:window.scrollY,shapesVisible:[],selectedShapeId:t},t){const e=document.getElementById(t);if(e){const t=e.getBoundingClientRect();this.gridState.shapePosition={elementY:t.top,viewportHeight:window.innerHeight}}}document.querySelectorAll(".shape-container").forEach((t=>{const e=t.getBoundingClientRect();e.top>=0&&e.bottom<=window.innerHeight&&this.gridState.shapesVisible.push(t.id)})),console.log(`Saved grid state with scrollY: ${this.gridState.scrollY}`)}showShapeEditor(t){this.selectedShape=t;const e=window.scrollY;this.lastScrollPosition=e,console.log(`Captured current scroll position: ${e}`),this.gridState&&"number"==typeof this.gridState.scrollY&&this.gridState.scrollY===e||this.saveGridState();const n=document.getElementById("category-filters-container");if(n&&(n.style.display="none"),0===Object.keys(this.parameters).length){const e=this.shapes[t];if(e){const t=new e,n=e.parameters||{},i={...this.Shape.parameters,...n};Object.keys(i).forEach((e=>{this.parameters[e]=t[e]}))}}this.editor.showEditor(t),this.updateShape()}returnToGrid(){this.selectedShape=null;let t="all";try{const e=localStorage.getItem("selectedCategory");e&&(t=e,console.log(`Returning to grid with saved category: ${t}`))}catch(t){console.warn("Could not retrieve saved category from localStorage",t)}this.currentCategory="all"===t?null:t,this.renderShapeGrid(!1);const e=document.getElementById("category-filters-container");e?(e.style.display="flex",e.querySelectorAll(".category-pill").forEach((e=>{const n=e.dataset.categoryId===t;if(e.dataset.selected=n?"true":"false",n){e.classList.add("selected"),e.style.setProperty("background-color","white","important"),e.style.setProperty("color","#000","important");const t=e.querySelector("span:first-child");t&&t.style.setProperty("color","#000","important")}else{e.classList.remove("selected"),e.style.setProperty("background-color","rgb(26, 26, 26)","important"),e.style.setProperty("color","#D9D9D9","important");const t=e.querySelector("span:first-child");t&&t.style.setProperty("color","#D9D9D9","important")}}))):(console.log("Filter container not found, recreating..."),this.createCategoryFilters())}renderShapeGrid(t=!1,e=!1){console.log(`Rendering grid with currentCategory: ${this.currentCategory}`);const n=document.getElementById("grid");if(!n)return;const i=document.getElementById("main-header");i&&(i.style.display="flex");const s=document.getElementById("category-filters-container");s&&(s.style.display="flex"),e||(n.innerHTML=""),n.className="grid",n.style.gridTemplateColumns=`repeat(${this.gridColumns}, 1fr)`,n.style.gap="20px",n.style.padding="20px",n.style.backgroundColor="#000000";const a=Object.keys(g).filter((t=>{const e=!this.currentSearchTerm||t.toLowerCase().includes(this.currentSearchTerm.toLowerCase());let n=!0;if(this.currentCategory&&"all"!==this.currentCategory)if(window.shapeCategories&&window.shapeCategories.shapesMetadata){const e=window.shapeCategories.shapesMetadata[t];e&&e.categories&&(n=e.categories.includes(this.currentCategory))}else n=({basic:["Basic","Box","Simple","Square","Rounded","Column"],stars:["Star","Asterisk","Burst","Sun","Ray","Radial"],grids:["Grid","Pattern","Stripe","Checker"],curved:["Curve","Wave","Spline","Spiral","Rhythm"],circles:["Circle","Ellipse","Orbital","Ring","Sphere","Torus"],layered:["Layer","Nested","Stack","Concentric"],nature:["Leaf","Flower","Plant","Tree","Nature","Petal","Atom","Molecule"],polygons:["Polygon","Triangle","Diamond","Hexagon","Octagon"],symbols:["Symbol","Icon","Sign","Arrow","Bookmark"],rounded:["Rounded","Pill","Smooth","Blob"]}[this.currentCategory]||[]).some((e=>t.includes(e)));return e&&n}));let r=null,o=-1,h=0,l=0;e||a.forEach(((t,e)=>{try{const i=e,s=new(0,g[t]),a=document.createElement("div");a.className="shape-container",a.dataset.shapeName=t,a.dataset.index=i,l=e%this.gridColumns,0===l&&e>0&&h++,a.dataset.row=h,a.dataset.column=l,a.style.cursor="pointer",a.style.position="relative",a.style.aspectRatio="1 / 1",a.style.marginBottom="10px",a.style.backgroundColor="#000000";const d=document.createElement("div");d.className="click-overlay",d.style.position="absolute",d.style.top="0",d.style.left="0",d.style.width="100%",d.style.height="100%",d.style.zIndex="10",d.style.cursor="pointer";const c=`shape-${t.replace(/[^a-z0-9]/gi,"")}`;a.id=c,e===this.lastClickedShapeIndex&&(r=a,o=e,console.log(`Found target shape at index ${e}, row ${h}, column ${l}`));const u=document.createElementNS("http://www.w3.org/2000/svg","svg");u.setAttribute("width","100%"),u.setAttribute("height","100%"),u.setAttribute("viewBox","-110 -110 220 220"),u.style.pointerEvents="none";const m=document.createElementNS("http://www.w3.org/2000/svg","g");m.setAttribute("transform","translate(0,0)"),m.style.pointerEvents="none",u.appendChild(m);const p=s.generateShape();m.innerHTML=p,a.appendChild(u),a.appendChild(d),this.animationEnabled&&this.animationManager.setupShapeHoverEvents(a,t,c),d.onclick=e=>(e.stopPropagation(),e.preventDefault(),this.lastClickedShapeIndex=i,this.lastClickedRow=parseInt(a.dataset.row),this.lastClickedColumn=parseInt(a.dataset.column),console.log(`Clicked shape at index ${i}, row ${this.lastClickedRow}, column ${this.lastClickedColumn}`),this.selectedShape=t,this.lastSelectedShapeId=c,this.saveGridState(c),this.showShapeEditor(t),!1),a.onclick=e=>(e.stopPropagation(),e.preventDefault(),this.lastClickedShapeIndex=i,this.lastClickedRow=parseInt(a.dataset.row),this.lastClickedColumn=parseInt(a.dataset.column),console.log(`Clicked shape container at index ${i}, row ${this.lastClickedRow}, column ${this.lastClickedColumn}`),this.selectedShape=t,this.lastSelectedShapeId=c,this.saveGridState(c),this.showShapeEditor(t),!1),n.appendChild(a)}catch(e){console.error(`Error rendering shape ${t}:`,e);const i=document.createElement("div");i.className="shape-container error",i.style.cursor="pointer",i.style.aspectRatio="1 / 1",i.style.marginBottom="10px",i.style.backgroundColor="#000000",n.appendChild(i)}})),!t&&!this.selectedShape&&this.lastClickedShapeIndex>=0&&r&&(r.scrollIntoView({block:"center",behavior:"auto"}),console.log(`Scrolled to target element at index ${o}`))}}document.addEventListener("DOMContentLoaded",(()=>{const t=new b;t.init(),window.shapeApp=t}))})()})();
